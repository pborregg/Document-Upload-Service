{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        window.addEventListener('resize', this.reportWindowSize.bind(this), true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        if (this.checkBlazor()) {\n            for (var j = 0; j < this.element.children.length; j++) {\n                if (this.element.children[j].classList.contains(SPLIT_BAR)) {\n                    this.allBars.push(this.element.children[j]);\n                }\n            }\n        }\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.allBars[i];\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        setTimeout(function () { _this.updateSplitterSize(true); }, 200);\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (this.paneSettings[i].min !== null) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, this, prop, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","window","addEventListener","reportWindowSize","bind","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","minValue","paneMinRange","updatePane","flexPane","convertPixelToNumber","toString","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","scrollY","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","updateBlazorTemplate","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"mappings":"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"}