{"version":3,"file":"ej2-angular-lists.umd.js","sources":["~/@syncfusion/ej2-angular-lists/src/list-view/listview-all.module.ts","~/@syncfusion/ej2-angular-lists/src/list-view/listview.module.ts","~/@syncfusion/ej2-angular-lists/src/list-view/listview.component.ts"],"sourcesContent":["import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListViewComponent } from './listview.component';\nimport { ListViewModule } from './listview.module';\nimport {Virtualization} from '@syncfusion/ej2-lists';\n\n\nexport const /** @type {?} */ VirtualizationService: ValueProvider = { provide: 'ListsVirtualization', useValue: Virtualization};\n/**\n * NgModule definition for the ListView component with providers.\n */\nexport class ListViewAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ListViewModule],\n    exports: [\n        ListViewModule\n    ],\n    providers:[\n        VirtualizationService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListViewAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nListViewAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListViewAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListViewComponent } from './listview.component';\n/**\n * NgModule definition for the ListView component.\n */\nexport class ListViewModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        ListViewComponent\n    ],\n    exports: [\n        ListViewComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListViewModule_tsickle_Closure_declarations() {\n/** @type {?} */\nListViewModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListViewModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { ListView } from '@syncfusion/ej2-lists';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nexport const /** @type {?} */ inputs: string[] = ['animation','checkBoxPosition','cssClass','dataSource','enable','enableHtmlSanitizer','enablePersistence','enableRtl','enableVirtualization','fields','groupTemplate','headerTemplate','headerTitle','height','htmlAttributes','locale','query','showCheckBox','showHeader','showIcon','sortOrder','template','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','actionComplete','actionFailure','select'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents Angular ListView Component\n * ```\n * <ejs-listview [dataSource]='data'></ejs-listview>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class ListViewComponent extends ListView implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\n/**\n * The ListView component supports to customize the content of each list items with the help of `template` property.\n * \n * {% codeBlock src='listview/template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n */\n@Template()\n    public template: any;\n/**\n * The ListView has an option to custom design the group header title with the help of `groupTemplate` property.\n * \n * {% codeBlock src=\"listview/groupTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n */\n@Template()\n    public groupTemplate: any;\n/**\n * The ListView has an option to custom design the ListView header title with the help of `headerTemplate` property.\n * \n * {% codeBlock src=\"listview/headerTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n */\n@Template()\n    public headerTemplate: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ListsVirtualization');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        \n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-listview',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: ['template', ] },],\n'groupTemplate': [{ type: ContentChild, args: ['groupTemplate', ] },],\n'headerTemplate': [{ type: ContentChild, args: ['headerTemplate', ] },],\n};\n}\n\nfunction ListViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nListViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListViewComponent.ctorParameters;\n/** @type {?} */\nListViewComponent.propDecorators;\n/** @type {?} */\nListViewComponent.prototype.context;\n/** @type {?} */\nListViewComponent.prototype.tagObjects;\n/**\n * The ListView component supports to customize the content of each list items with the help of `template` property.\n * \n * {% codeBlock src='listview/template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n * @type {?}\n */\nListViewComponent.prototype.template;\n/**\n * The ListView has an option to custom design the group header title with the help of `groupTemplate` property.\n * \n * {% codeBlock src=\"listview/groupTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n * @type {?}\n */\nListViewComponent.prototype.groupTemplate;\n/**\n * The ListView has an option to custom design the ListView header title with the help of `headerTemplate` property.\n * \n * {% codeBlock src=\"listview/headerTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n * @type {?}\n */\nListViewComponent.prototype.headerTemplate;\n/** @type {?} */\nListViewComponent.prototype.registerEvents;\n/** @type {?} */\nListViewComponent.prototype.addTwoWay;\n/** @type {?} */\nListViewComponent.prototype.ngEle;\n/** @type {?} */\nListViewComponent.prototype.srenderer;\n/** @type {?} */\nListViewComponent.prototype.viewContainerRef;\n/** @type {?} */\nListViewComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgModule","Virtualization","ListViewComponent","Injector","ViewContainerRef","Renderer2","ElementRef","ComponentMixins","ComponentBase","Template","ContentChild","ChangeDetectionStrategy","Component","ListView","setValue"],"mappings":"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"}
