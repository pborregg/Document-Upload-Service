{"version":3,"file":"ej2-angular-lineargauge.umd.js","sources":["~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge-all.module.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.module.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.component.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/annotations.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/axes.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/pointers.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/ranges.directive.ts"],"sourcesContent":["import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\nimport { LinearGaugeModule } from './lineargauge.module';\nimport {Print, PdfExport, GaugeTooltip, Annotations, ImageExport, Gradient} from '@syncfusion/ej2-lineargauge';\n\n\nexport const /** @type {?} */ PrintService: ValueProvider = { provide: 'LinearGaugePrint', useValue: Print};\nexport const /** @type {?} */ PdfExportService: ValueProvider = { provide: 'LinearGaugePdfExport', useValue: PdfExport};\nexport const /** @type {?} */ GaugeTooltipService: ValueProvider = { provide: 'LinearGaugeGaugeTooltip', useValue: GaugeTooltip};\nexport const /** @type {?} */ AnnotationsService: ValueProvider = { provide: 'LinearGaugeAnnotations', useValue: Annotations};\nexport const /** @type {?} */ ImageExportService: ValueProvider = { provide: 'LinearGaugeImageExport', useValue: ImageExport};\nexport const /** @type {?} */ GradientService: ValueProvider = { provide: 'LinearGaugeGradient', useValue: Gradient};\n/**\n * NgModule definition for the LinearGauge component with providers.\n */\nexport class LinearGaugeAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, LinearGaugeModule],\n    exports: [\n        LinearGaugeModule\n    ],\n    providers:[\n        PrintService,\n        PdfExportService,\n        GaugeTooltipService,\n        AnnotationsService,\n        ImageExportService,\n        GradientService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\n/**\n * NgModule definition for the LinearGauge component.\n */\nexport class LinearGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ],\n    exports: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { LinearGauge } from '@syncfusion/ej2-lineargauge';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AxesDirective } from './axes.directive';\nimport { AnnotationsDirective } from './annotations.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowImageExport','allowPdfExport','allowPrint','annotations','axes','background','border','container','description','enablePersistence','enableRtl','format','height','locale','margin','orientation','rangePalettes','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','annotationRender','axisLabelRender','beforePrint','dragEnd','dragMove','dragStart','gaugeMouseDown','gaugeMouseLeave','gaugeMouseMove','gaugeMouseUp','load','loaded','resized','tooltipRender','valueChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Linear Gauge Component\n * ```html\n * <ej-lineargauge></ej-lineargauge>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class LinearGaugeComponent extends LinearGauge implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childAxes: QueryList<AxesDirective>;\npublic childAnnotations: QueryList<AnnotationsDirective>;\npublic tags: string[] = ['axes', 'annotations'];\n\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('LinearGaugePrint');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugePdfExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugeGaugeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugeAnnotations');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugeImageExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugeGradient');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childAxes;\n        if (this.childAnnotations) {\n                    this.tagObjects[1].instance = /** @type {?} */(( this.childAnnotations as any));\n                }\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-lineargauge',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childAxes: new ContentChild(AxesDirective), \n        childAnnotations: new ContentChild(AnnotationsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction LinearGaugeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeComponent.ctorParameters;\n/** @type {?} */\nLinearGaugeComponent.propDecorators;\n/** @type {?} */\nLinearGaugeComponent.prototype.context;\n/** @type {?} */\nLinearGaugeComponent.prototype.tagObjects;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAxes;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAnnotations;\n/** @type {?} */\nLinearGaugeComponent.prototype.tags;\n/** @type {?} */\nLinearGaugeComponent.prototype.tooltip_template;\n/** @type {?} */\nLinearGaugeComponent.prototype.registerEvents;\n/** @type {?} */\nLinearGaugeComponent.prototype.addTwoWay;\n/** @type {?} */\nLinearGaugeComponent.prototype.ngEle;\n/** @type {?} */\nLinearGaugeComponent.prototype.srenderer;\n/** @type {?} */\nLinearGaugeComponent.prototype.viewContainerRef;\n/** @type {?} */\nLinearGaugeComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['axisIndex', 'axisValue', 'content', 'font', 'horizontalAlignment', 'verticalAlignment', 'x', 'y', 'zIndex'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation directive\n * ```html\n * <e-annotations><e-annotation></e-annotation></e-annotations>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\npublic directivePropList: any;\n/**\n * Sets and gets the axis index of the linear gauge\n * \\@aspdefaultvalueignore\n */\npublic axisIndex: any;\n/**\n * Sets and gets the value of axis in linear gauge.\n * \\@aspdefaultvalueignore\n * \\@blazordefaultvalue null\n */\npublic axisValue: any;\n/**\n * Sets and gets the options to customize the font of the annotation in linear gauge.\n */\npublic font: any;\n/**\n * Sets and gets the horizontal alignment of annotation.\n * \\@default None\n */\npublic horizontalAlignment: any;\n/**\n * Sets and gets the vertical alignment of annotation.\n * \\@default None\n */\npublic verticalAlignment: any;\n/**\n * Sets and gets the x position for the annotation in linear gauge.\n */\npublic x: any;\n/**\n * Sets and gets the y position for the annotation in linear gauge.\n */\npublic y: any;\n/**\n * Sets and gets the z-index of the annotation.\n * \\@default '-1'\n */\npublic zIndex: any;\n/**\n * Sets and gets the content for the annotations.\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationDirective.ctorParameters;\n/** @type {?} */\nAnnotationDirective.propDecorators;\n/** @type {?} */\nAnnotationDirective.prototype.directivePropList;\n/**\n * Sets and gets the axis index of the linear gauge\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nAnnotationDirective.prototype.axisIndex;\n/**\n * Sets and gets the value of axis in linear gauge.\n * \\@aspdefaultvalueignore\n * \\@blazordefaultvalue null\n * @type {?}\n */\nAnnotationDirective.prototype.axisValue;\n/**\n * Sets and gets the options to customize the font of the annotation in linear gauge.\n * @type {?}\n */\nAnnotationDirective.prototype.font;\n/**\n * Sets and gets the horizontal alignment of annotation.\n * \\@default None\n * @type {?}\n */\nAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Sets and gets the vertical alignment of annotation.\n * \\@default None\n * @type {?}\n */\nAnnotationDirective.prototype.verticalAlignment;\n/**\n * Sets and gets the x position for the annotation in linear gauge.\n * @type {?}\n */\nAnnotationDirective.prototype.x;\n/**\n * Sets and gets the y position for the annotation in linear gauge.\n * @type {?}\n */\nAnnotationDirective.prototype.y;\n/**\n * Sets and gets the z-index of the annotation.\n * \\@default '-1'\n * @type {?}\n */\nAnnotationDirective.prototype.zIndex;\n/**\n * Sets and gets the content for the annotations.\n * @type {?}\n */\nAnnotationDirective.prototype.content;\n/** @type {?} */\nAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * Annotation Array Directive\n */\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { RangesDirective } from './ranges.directive';\nimport { PointersDirective } from './pointers.directive';\n\nlet /** @type {?} */ input: string[] = ['isInversed', 'labelStyle', 'line', 'majorTicks', 'maximum', 'minimum', 'minorTicks', 'opposedPosition', 'pointers', 'ranges', 'showLastLabel'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Axes directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\nexport class AxisDirective extends ComplexBase<AxisDirective> {\npublic directivePropList: any;\npublic childRanges: any;\npublic childPointers: any;\npublic tags: string[] = ['ranges', 'pointers'];\n/**\n * Enables or disables the inversed axis.\n */\npublic isInversed: any;\n/**\n * Sets and gets the options for customizing the appearance of the label in axis.\n */\npublic labelStyle: any;\n/**\n * Sets and gets the options for customizing the axis line.\n */\npublic line: any;\n/**\n * Sets and gets the options for customizing the major tick lines.\n */\npublic majorTicks: any;\n/**\n * Sets and gets the maximum value for the axis.\n * \\@default 100\n */\npublic maximum: any;\n/**\n * Sets and gets the minimum value for the axis.\n * \\@default 0\n */\npublic minimum: any;\n/**\n * Sets and gets the options for customizing the minor tick lines.\n */\npublic minorTicks: any;\n/**\n * Enables or disables the opposed position of the axis in the linear gauge.\n */\npublic opposedPosition: any;\n/**\n * Sets and gets the options for customizing the pointers of an axis.\n */\npublic pointers: any;\n/**\n * Sets and gets the options for customizing the ranges of an axis.\n */\npublic ranges: any;\n/**\n * Shows or hides the last label in the axis of the linear gauge.\n */\npublic showLastLabel: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childRanges: new ContentChild(RangesDirective), \n        childPointers: new ContentChild(PointersDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction AxisDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxisDirective.ctorParameters;\n/** @type {?} */\nAxisDirective.prototype.directivePropList;\n/** @type {?} */\nAxisDirective.prototype.childRanges;\n/** @type {?} */\nAxisDirective.prototype.childPointers;\n/** @type {?} */\nAxisDirective.prototype.tags;\n/**\n * Enables or disables the inversed axis.\n * @type {?}\n */\nAxisDirective.prototype.isInversed;\n/**\n * Sets and gets the options for customizing the appearance of the label in axis.\n * @type {?}\n */\nAxisDirective.prototype.labelStyle;\n/**\n * Sets and gets the options for customizing the axis line.\n * @type {?}\n */\nAxisDirective.prototype.line;\n/**\n * Sets and gets the options for customizing the major tick lines.\n * @type {?}\n */\nAxisDirective.prototype.majorTicks;\n/**\n * Sets and gets the maximum value for the axis.\n * \\@default 100\n * @type {?}\n */\nAxisDirective.prototype.maximum;\n/**\n * Sets and gets the minimum value for the axis.\n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.minimum;\n/**\n * Sets and gets the options for customizing the minor tick lines.\n * @type {?}\n */\nAxisDirective.prototype.minorTicks;\n/**\n * Enables or disables the opposed position of the axis in the linear gauge.\n * @type {?}\n */\nAxisDirective.prototype.opposedPosition;\n/**\n * Sets and gets the options for customizing the pointers of an axis.\n * @type {?}\n */\nAxisDirective.prototype.pointers;\n/**\n * Sets and gets the options for customizing the ranges of an axis.\n * @type {?}\n */\nAxisDirective.prototype.ranges;\n/**\n * Shows or hides the last label in the axis of the linear gauge.\n * @type {?}\n */\nAxisDirective.prototype.showLastLabel;\n/** @type {?} */\nAxisDirective.prototype.viewContainerRef;\n}\n\n/**\n * Axis Array Directive\n */\nexport class AxesDirective extends ArrayBase<AxesDirective> {\nconstructor() {\n        super('axes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AxesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animationDuration', 'border', 'color', 'description', 'enableDrag', 'height', 'imageUrl', 'linearGradient', 'markerType', 'offset', 'opacity', 'placement', 'position', 'radialGradient', 'roundedCornerRadius', 'type', 'value', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Pointers directive\n * ```html\n * <e-pointers><e-pointer></e-pointer></e-pointers>\n * ```\n */\nexport class PointerDirective extends ComplexBase<PointerDirective> {\npublic directivePropList: any;\n/**\n * Sets and gets the type of pointer in axis.\n * \\@default Marker\n */\npublic type: any;\n/**\n * Sets and gets the duration of animation in pointer.\n * \\@default 0\n */\npublic animationDuration: any;\n/**\n * Sets and gets the options to optimize the color and width of the border for pointers.\n */\npublic border: any;\n/**\n * Sets and gets the color of the pointer.\n */\npublic color: any;\n/**\n * Sets and gets the description for the pointer.\n * \\@default null\n */\npublic description: any;\n/**\n * Enables or disables the drag movement of pointer.\n * \\@default false\n */\npublic enableDrag: any;\n/**\n * Sets and gets the height of the pointer.\n * \\@default 20\n */\npublic height: any;\n/**\n * Sets and gets the URL path for the image in marker when the marker type is chosen as image.\n * \\@default null\n */\npublic imageUrl: any;\n/**\n * Sets and gets the properties to render a linear gradient for the pointer. \n * If both linear and radial gradient is set, then the linear gradient will be rendered in the pointer.\n * \\@default null\n */\npublic linearGradient: any;\n/**\n * Sets and gets the type of the marker for pointers in axis.\n * \\@default InvertedTriangle\n */\npublic markerType: any;\n/**\n * Sets and gets the value to position the pointer from the axis.\n * \\@default '0'\n */\npublic offset: any;\n/**\n * Sets and gets the opacity of pointer in linear gauge.\n * \\@default 1\n */\npublic opacity: any;\n/**\n * Sets and gets the place of the pointer.\n * \\@default Far\n */\npublic placement: any;\n/**\n * Sets and gets the position of the pointer.\n * \\@default Auto\n */\npublic position: any;\n/**\n * Sets and gets the properties to render a radial gradient for the pointer.\n * \\@default null\n */\npublic radialGradient: any;\n/**\n * Sets and gets the corner radius for pointer.\n * \\@default 10\n */\npublic roundedCornerRadius: any;\n/**\n * Sets and gets the value of the pointer in axis.\n * \\@blazordefaultvalue 0\n * \\@default null\n */\npublic value: any;\n/**\n * Sets and gets the width of the pointer.\n * \\@default 20\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-pointers>e-pointer',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction PointerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointerDirective.ctorParameters;\n/** @type {?} */\nPointerDirective.prototype.directivePropList;\n/**\n * Sets and gets the type of pointer in axis.\n * \\@default Marker\n * @type {?}\n */\nPointerDirective.prototype.type;\n/**\n * Sets and gets the duration of animation in pointer.\n * \\@default 0\n * @type {?}\n */\nPointerDirective.prototype.animationDuration;\n/**\n * Sets and gets the options to optimize the color and width of the border for pointers.\n * @type {?}\n */\nPointerDirective.prototype.border;\n/**\n * Sets and gets the color of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.color;\n/**\n * Sets and gets the description for the pointer.\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.description;\n/**\n * Enables or disables the drag movement of pointer.\n * \\@default false\n * @type {?}\n */\nPointerDirective.prototype.enableDrag;\n/**\n * Sets and gets the height of the pointer.\n * \\@default 20\n * @type {?}\n */\nPointerDirective.prototype.height;\n/**\n * Sets and gets the URL path for the image in marker when the marker type is chosen as image.\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.imageUrl;\n/**\n * Sets and gets the properties to render a linear gradient for the pointer. \n * If both linear and radial gradient is set, then the linear gradient will be rendered in the pointer.\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.linearGradient;\n/**\n * Sets and gets the type of the marker for pointers in axis.\n * \\@default InvertedTriangle\n * @type {?}\n */\nPointerDirective.prototype.markerType;\n/**\n * Sets and gets the value to position the pointer from the axis.\n * \\@default '0'\n * @type {?}\n */\nPointerDirective.prototype.offset;\n/**\n * Sets and gets the opacity of pointer in linear gauge.\n * \\@default 1\n * @type {?}\n */\nPointerDirective.prototype.opacity;\n/**\n * Sets and gets the place of the pointer.\n * \\@default Far\n * @type {?}\n */\nPointerDirective.prototype.placement;\n/**\n * Sets and gets the position of the pointer.\n * \\@default Auto\n * @type {?}\n */\nPointerDirective.prototype.position;\n/**\n * Sets and gets the properties to render a radial gradient for the pointer.\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.radialGradient;\n/**\n * Sets and gets the corner radius for pointer.\n * \\@default 10\n * @type {?}\n */\nPointerDirective.prototype.roundedCornerRadius;\n/**\n * Sets and gets the value of the pointer in axis.\n * \\@blazordefaultvalue 0\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.value;\n/**\n * Sets and gets the width of the pointer.\n * \\@default 20\n * @type {?}\n */\nPointerDirective.prototype.width;\n/** @type {?} */\nPointerDirective.prototype.viewContainerRef;\n}\n\n/**\n * Pointer Array Directive\n */\nexport class PointersDirective extends ArrayBase<PointersDirective> {\nconstructor() {\n        super('pointers');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-axes>e-axis>e-pointers',\n    queries: {\n        children: new ContentChildren(PointerDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PointersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'color', 'end', 'endWidth', 'linearGradient', 'offset', 'position', 'radialGradient', 'start', 'startWidth'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Ranges directive\n * ```html\n * <e-ranges><e-range></e-range></e-ranges>\n * ```\n */\nexport class RangeDirective extends ComplexBase<RangeDirective> {\npublic directivePropList: any;\n/**\n * Sets and gets the options to customize the color and width of the border for the axis range.\n */\npublic border: any;\n/**\n * Sets and gets the color of the axis range.\n */\npublic color: any;\n/**\n * Sets and gets the end value for the range in axis.\n * \\@default 0\n */\npublic end: any;\n/**\n * Sets and gets the width of the end of the range in axis.\n * \\@default 10\n */\npublic endWidth: any;\n/**\n * Sets and gets the properties to render a linear gradient for the range. \n * If both linear and radial gradient is set, then the linear gradient will be rendered in the range.\n * \\@default null\n */\npublic linearGradient: any;\n/**\n * Sets and gets the value to position the range in the axis.\n * \\@default '0'\n */\npublic offset: any;\n/**\n * Sets and gets the position to place the ranges in the axis.\n * \\@default Outside\n */\npublic position: any;\n/**\n * Sets and gets the properties to render a radial gradient for the range.\n * \\@default null\n */\npublic radialGradient: any;\n/**\n * Sets and gets the start value for the range in axis.\n * \\@default 0\n */\npublic start: any;\n/**\n * Sets and gets the width of the start of the range in axis.\n * \\@default 10\n */\npublic startWidth: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-ranges>e-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RangeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeDirective.ctorParameters;\n/** @type {?} */\nRangeDirective.prototype.directivePropList;\n/**\n * Sets and gets the options to customize the color and width of the border for the axis range.\n * @type {?}\n */\nRangeDirective.prototype.border;\n/**\n * Sets and gets the color of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.color;\n/**\n * Sets and gets the end value for the range in axis.\n * \\@default 0\n * @type {?}\n */\nRangeDirective.prototype.end;\n/**\n * Sets and gets the width of the end of the range in axis.\n * \\@default 10\n * @type {?}\n */\nRangeDirective.prototype.endWidth;\n/**\n * Sets and gets the properties to render a linear gradient for the range. \n * If both linear and radial gradient is set, then the linear gradient will be rendered in the range.\n * \\@default null\n * @type {?}\n */\nRangeDirective.prototype.linearGradient;\n/**\n * Sets and gets the value to position the range in the axis.\n * \\@default '0'\n * @type {?}\n */\nRangeDirective.prototype.offset;\n/**\n * Sets and gets the position to place the ranges in the axis.\n * \\@default Outside\n * @type {?}\n */\nRangeDirective.prototype.position;\n/**\n * Sets and gets the properties to render a radial gradient for the range.\n * \\@default null\n * @type {?}\n */\nRangeDirective.prototype.radialGradient;\n/**\n * Sets and gets the start value for the range in axis.\n * \\@default 0\n * @type {?}\n */\nRangeDirective.prototype.start;\n/**\n * Sets and gets the width of the start of the range in axis.\n * \\@default 10\n * @type {?}\n */\nRangeDirective.prototype.startWidth;\n/** @type {?} */\nRangeDirective.prototype.viewContainerRef;\n}\n\n/**\n * Range Array Directive\n */\nexport class RangesDirective extends ArrayBase<RangesDirective> {\nconstructor() {\n        super('ranges');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes>e-axis>e-ranges',\n    queries: {\n        children: new ContentChildren(RangeDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgModule","Gradient","ImageExport","Annotations","GaugeTooltip","PdfExport","Print","LinearGaugeComponent","Injector","ViewContainerRef","Renderer2","__metadata","ElementRef","ComponentMixins","ComponentBase","__decorate","Template","ContentChild","ChangeDetectionStrategy","outputs","Component","LinearGauge","setValue","ContentChildren","Directive","ArrayBase","input","ComplexBase"],"mappings":";;;;;;;;;;;;;;;;AMKA,IAAI,KAAA,GAAkB,CAAA,QAAE,EAAS,OAAA,EAAS,KAAA,EAAO,UAAA,EAAY,gBAAA,EAAkB,QAAA,EAAU,UAAA,EAAY,gBAAA,EAAkB,OAAA,EAAS,YAAA,CAAa,CAAC;AAC9I,IAAI,OAAA,GAAoB,EAAA,CAAG;;;;;;;AAO3B,IAAA,cAAA,kBAAA,UAAA,MAAA,EAAA;IACC,SAAD,CAAA,cAAA,EAAA,MAAA,CAAA,CAAC;;;;IAqDD,SAAA,cAAA,CACwB,gBAAkB,EAD1C;QAAA,IAAA,KAAA,GACQ,MADR,CAAA,IAAA,CAAA,IAAA,CACe,IADf,IAAA,CAKK;QAJmB,KAAxB,CAAA,gBAAwB,GAAA,gBAAA,CAAkB;QAClCuB,uBAAQ,CAAC,iBAAiB,EAAE,KAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7B,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;;KAClC;;CA3DL,CACCK,0BAAA,CADD,CAAA,CAAA;AA6DO,cAAP,CAAA,UAAO,GAAoC;IAA3C,EACE,IAAA,EAAMH,cAAA,EAAW,IAAA,EAAM,CAAA;gBAArB,QAAQ,EACE,kBAAA;gBAAV,MAAM,EACE,KAAA;gBAAR,OAAO,EACE,OAAA;gBAAT,OAAO,EACE,EACR;aACJ,EACC,EAAG;CAAJ,CACC;;;;AAED,cAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAED,EAAC,IAAI,EAAEf,qBAAgB,GAAG;CACzB,CAAD,EAAC,CAAC;;;;AA+EF,IAAA,eAAA,kBAAA,UAAA,MAAA,EAAA;IAxEC,SAAD,CAAA,eAAA,EAAA,MAAA,CAAA,CAAC;IAyED,SAAA,eAAA,GAAA;QACA,OAAQ,MAAR,CAAA,IAAA,CAAA,IAAA,EAAc,QAAQ,CAAC,IAAvB,IAAA,CAAA;KACK;;CAHL,CAxECgB,wBAAA,CAwED,CAAA,CAAA;AApEO,eAAP,CAAA,UAAO,GAAoC;IAyE3C,EAxEE,IAAA,EAAMD,cAAA,EAAW,IAAA,EAAM,CAAA;gBAyErB,QAAQ,EAxEE,uCAAA;gBAyEV,OAAO,EAxEE;oBAyEL,QAAQ,EAxEE,IAAID,oBAAA,CAAgB,cAAC,CAAc;iBAyEhD;aACJ,EAxEC,EAAG;CAyEJ,CAxEC;;;;AAED,eAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EA2EA,CA3ED,EA2EC,CAAC;ADlLF,IAAIG,OAAA,GAAkB,CAAA,mBAAE,EAAoB,QAAA,EAAU,OAAA,EAAS,aAAA,EAAe,YAAA,EAAc,QAAA,EAAU,UAAA,EAAY,gBAAA,EAAkB,YAAA,EAAc,QAAA,EAAU,SAAA,EAAW,WAAA,EAAa,UAAA,EAAY,gBAAA,EAAkB,qBAAA,EAAuB,MAAA,EAAQ,OAAA,EAAS,OAAA,CAAQ,CAAC;AACnQ,IAAIP,SAAA,GAAoB,EAAA,CAAG;;;;;;;AAO3B,IAAA,gBAAA,kBAAA,UAAA,MAAA,EAAA;IACC,SAAD,CAAA,gBAAA,EAAA,MAAA,CAAA,CAAC;;;;IA8FD,SAAA,gBAAA,CACwB,gBAAkB,EAD1C;QAAA,IAAA,KAAA,GACQ,MADR,CAAA,IAAA,CAAA,IAAA,CACe,IADf,IAAA,CAKK;QAJmB,KAAxB,CAAA,gBAAwB,GAAA,gBAAA,CAAkB;QAClCG,uBAAQ,CAAC,iBAAiB,EAAE,KAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,KAAI,CAAC,cAAc,CAACH,SAAO,CAAC,CAAC;QAC7B,KAAI,CAAC,iBAAiB,GAAGO,OAAK,CAAC;;KAClC;;CApGL,CACCC,0BAAA,CADD,CAAA,CAAA;AAsGO,gBAAP,CAAA,UAAO,GAAoC;IAA3C,EACE,IAAA,EAAMH,cAAA,EAAW,IAAA,EAAM,CAAA;gBAArB,QAAQ,EACE,sBAAA;gBAAV,MAAM,EACEE,OAAA;gBAAR,OAAO,EACEP,SAAA;gBAAT,OAAO,EACE,EACR;aACJ,EACC,EAAG;CAAJ,CACC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAED,EAAC,IAAI,EAAEV,qBAAgB,GAAG;CACzB,CAAD,EAAC,CAAC;;;;AAgIF,IAAA,iBAAA,kBAAA,UAAA,MAAA,EAAA;IAzHC,SAAD,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAC;IA0HD,SAAA,iBAAA,GAAA;QACA,OAAQ,MAAR,CAAA,IAAA,CAAA,IAAA,EAAc,UAAU,CAAC,IAAzB,IAAA,CAAA;KACK;;CAHL,CAzHCgB,wBAAA,CAyHD,CAAA,CAAA;AArHO,iBAAP,CAAA,UAAO,GAAoC;IA0H3C,EAzHE,IAAA,EAAMD,cAAA,EAAW,IAAA,EAAM,CAAA;gBA0HrB,QAAQ,EAzHE,0CAAA;gBA0HV,OAAO,EAzHE;oBA0HL,QAAQ,EAzHE,IAAID,oBAAA,CAAgB,gBAAC,CAAgB;iBA0HlD;aACJ,EAzHC,EAAG;CA0HJ,CAzHC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EA4HA,CA5HD,EA4HC,CAAC;AD3QF,IAAIG,OAAA,GAAkB,CAAA,YAAE,EAAa,YAAA,EAAc,MAAA,EAAQ,YAAA,EAAc,SAAA,EAAW,SAAA,EAAW,YAAA,EAAc,iBAAA,EAAmB,UAAA,EAAY,QAAA,EAAU,eAAA,CAAgB,CAAC;AACvK,IAAIP,SAAA,GAAoB,EAAA,CAAG;;;;;;;AAO3B,IAAA,aAAA,kBAAA,UAAA,MAAA,EAAA;IACC,SAAD,CAAA,aAAA,EAAA,MAAA,CAAA,CAAC;;;;IAqDD,SAAA,aAAA,CADwB,gBAAkB,EAC1C;QAAA,IAAA,KAAA,GACQ,MADR,CAAA,IAAA,CAAA,IAAA,CACe,IADf,IAAA,CAKK;QANmB,KAAxB,CAAA,gBAAwB,GAAA,gBAAA,CAAkB;QAhD/B,KAAX,CAAA,IAAW,GAAiB,CAAA,QAAE,EAAS,UAAA,CAAW,CAAC;QAmD3CG,uBAAQ,CAAC,iBAAiB,EAAE,KAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,KAAI,CAAC,cAAc,CAACH,SAAO,CAAC,CAAC;QAC7B,KAAI,CAAC,iBAAiB,GAAGO,OAAK,CAAC;;KAClC;;CA3DL,CACCC,0BAAA,CADD,CAAA,CAAA;AA2DO,aAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAMH,cAAA,EAAW,IAAA,EAAM,CAAA;gBAErB,QAAQ,EADE,eAAA;gBAEV,MAAM,EADEE,OAAA;gBAER,OAAO,EADEP,SAAA;gBAET,OAAO,EADE;oBAEL,WAAW,EADE,IAAIF,iBAAA,CAAa,eAAC,CAAe;oBAE9C,aAAa,EADE,IAAIA,iBAAA,CAAa,iBAAC,CAAiB;iBAErD;aACJ,EADC,EAAG;CAEJ,CADC;;;;AAED,aAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAID,EAAC,IAAI,EAAER,qBAAgB,GAAG;CACzB,CAAD,EAAC,CAAC;;;;AAmFF,IAAA,aAAA,kBAAA,UAAA,MAAA,EAAA;IA9EC,SAAD,CAAA,aAAA,EAAA,MAAA,CAAA,CAAC;IA+ED,SAAA,aAAA,GAAA;QACA,OAAQ,MAAR,CAAA,IAAA,CAAA,IAAA,EAAc,MAAM,CAAC,IAArB,IAAA,CAAA;KACK;;CAHL,CA9ECgB,wBAAA,CA8ED,CAAA,CAAA;AA1EO,aAAP,CAAA,UAAO,GAAoC;IA+E3C,EA9EE,IAAA,EAAMD,cAAA,EAAW,IAAA,EAAM,CAAA;gBA+ErB,QAAQ,EA9EE,uBAAA;gBA+EV,OAAO,EA9EE;oBA+EL,QAAQ,EA9EE,IAAID,oBAAA,CAAgB,aAAC,CAAa;iBA+E/C;aACJ,EA9EC,EAAG;CA+EJ,CA9EC;;;;AAED,aAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAiFA,CAjFD,EAiFC,CAAC;;;;;;;;;;;;;;;AD7LF,IAKIG,OAAA,GAAkB,CAAA,WAAE,EAAY,WAAA,EAAa,SAAA,EAAW,MAAA,EAAQ,qBAAA,EAAuB,mBAAA,EAAqB,GAAA,EAAK,GAAA,EAAK,QAAA,CAAS,CAAC;AACpI,IAAIP,SAAA,GAAoB,EAAA,CAAG;;;;;;;AAO3B,IAAA,mBAAA,kBAAA,UAAA,MAAA,EAAA;IACC,SAAD,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAC;;;;IA+CD,SAAA,mBAAA,CAEwB,gBAAkB,EAF1C;QAAA,IAAA,KAAA,GACQ,MADR,CAAA,IAAA,CAAA,IAAA,CACe,IADf,IAAA,CAKK;QAHmB,KAAxB,CAAA,gBAAwB,GAAA,gBAAA,CAAkB;QAAlCG,uBAAQ,CAAC,iBAAiB,EAAE,KAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,KAAI,CAAC,cAAc,CAACH,SAAO,CAAC,CAAC;QAC7B,KAAI,CAAC,iBAAiB,GAAGO,OAAK,CAAC;;KAClC;;CArDL,CACCC,0BAAA,CADD,CAAA,CAAA;AAwDO,mBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAMH,cAAA,EAAW,IAAA,EAAM,CAAA;gBADrB,QAAQ,EAEE,4BAAA;gBADV,MAAM,EAEEE,OAAA;gBADR,OAAO,EAEEP,SAAA;gBADT,OAAO,EAEE,EAAR;aACJ,EAEC,EAAG;CADJ,CAEC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IACD,EAAC,IAAI,EAAEV,qBAAgB,GAAG;CACzB,CAAD,EAAC,CAAC;AACK,mBAAP,CAAA,cAAO,GAAyD;IAChE,SAAS,EAAE,CAAA,EAAG,IAAA,EAAMQ,iBAAA,EAAc,IAAA,EAAM,CAAA,SAAE,EAAS,EAAG,EAAE;CACvD,CAAC;AA5BE,UAAJ,CAAA;IAGKD,uBAAA,EAAA;;CAHL,EAAA,mBAAA,CAAA,SAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAwB,CAAxB;;;;AAqGA,IAAA,oBAAA,kBAAA,UAAA,MAAA,EAAA;IAjEC,SAAD,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAC;IAkED,SAAA,oBAAA,GAAA;QACA,OAAQ,MAAR,CAAA,IAAA,CAAA,IAAA,EAAc,aAAa,CAAC,IAA5B,IAAA,CAAA;KACK;;CAHL,CAjECS,wBAAA,CAiED,CAAA,CAAA;AA7DO,oBAAP,CAAA,UAAO,GAAoC;IAkE3C,EAjEE,IAAA,EAAMD,cAAA,EAAW,IAAA,EAAM,CAAA;gBAkErB,QAAQ,EAjEE,+BAAA;gBAkEV,OAAO,EAjEE;oBAkEL,QAAQ,EAjEE,IAAID,oBAAA,CAAgB,mBAAC,CAAmB;iBAkErD;aACJ,EAjEC,EAAG;CAkEJ,CAjEC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAoEA,CApED,EAoEC,CAAC;;;;;;;;;;;;;;;AD9KF,IAOa,MAAA,GAAmB,CAAA,kBAAE,EAAkB,gBAAC,EAAgB,YAAC,EAAY,aAAC,EAAa,MAAC,EAAM,YAAC,EAAY,QAAC,EAAQ,WAAC,EAAW,aAAC,EAAa,mBAAC,EAAmB,WAAC,EAAW,QAAC,EAAQ,QAAC,EAAQ,QAAC,EAAQ,QAAC,EAAQ,aAAC,EAAa,eAAC,EAAe,UAAC,EAAU,OAAC,EAAO,OAAC,EAAO,YAAC,EAAY,SAAC,EAAS,sBAAC,EAAsB,OAAC,CAAO,CAAC;AAC3U,IAAaJ,SAAA,GAAoB,CAAA,mBAAE,EAAmB,kBAAC,EAAkB,iBAAC,EAAiB,aAAC,EAAa,SAAC,EAAS,UAAC,EAAU,WAAC,EAAW,gBAAC,EAAgB,iBAAC,EAAiB,gBAAC,EAAgB,cAAC,EAAc,MAAC,EAAM,QAAC,EAAQ,SAAC,EAAS,eAAC,EAAe,aAAC,CAAa,CAAC;AACtQ,IAAa,OAAA,GAAoB,CAAA,EAAE,CAAE,CAAC;;;;;;;AAQtC,AAAaZ,4BAAoB,kBAAjC,UAAA,MAAA,EAAA;IAA0C,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAqD;;;;;;;IAgBrD,SAAA,oBAAA,CAHwB,KAAO,EAAoB,SAAW,EAAmB,gBAAkB,EAAyB,QAAU,EAGtI;QAAA,IAAA,KAAA,GAIQ,MAJR,CAAA,IAAA,CAAA,IAAA,CAIe,IAJf,IAAA,CAgDK;QAnDmB,KAAxB,CAAA,KAAwB,GAAA,KAAA,CAAO;QAAoB,KAAnD,CAAA,SAAmD,GAAA,SAAA,CAAW;QAAmB,KAAjF,CAAA,gBAAiF,GAAA,gBAAA,CAAkB;QAAyB,KAA5H,CAAA,QAA4H,GAAA,QAAA,CAAU;QAN3H,KAAX,CAAA,IAAW,GAAiB,CAAA,MAAE,EAAO,aAAA,CAAc,CAAC;QAc5C,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACxC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,IAAI,EAAE,CAAC;QAClD,IAAI;YACI,IAAI,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChD,IAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjC;SACJ;QAAC,OAAO,EAArB,EAAoB,GAAG;QACf,IAAI;YACI,IAAI,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpD,IAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjC;SACJ;QAAC,OAAO,EAArB,EAAoB,GAAG;QACf,IAAI;YACI,IAAI,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACvD,IAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjC;SACJ;QAAC,OAAO,EAArB,EAAoB,GAAG;QACf,IAAI;YACI,IAAI,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtD,IAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjC;SACJ;QAAC,OAAO,EAArB,EAAoB,GAAG;QACf,IAAI;YACI,IAAI,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtD,IAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjC;SACJ;QAAC,OAAO,EAArB,EAAoB,GAAG;QACf,IAAI;YACI,IAAI,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnD,IAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjC;SACJ;QAAC,OAAO,EAArB,EAAoB,GAAG;QAEf,KAAI,CAAC,cAAc,CAACY,SAAO,CAAC,CAAC;QAC7B,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,EAAE,OAAO,CAAC,CAAC;QACnCG,uBAAQ,CAAC,iBAAiB,EAAE,KAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,KAAI,CAAC,OAAO,GAAI,IAAIR,4BAAa,EAAE,CAAC;;KACvC;;;;IAJA,oBAAL,CAAA,SAAA,CAAA,QAAK,GAAA,YAAL;QASQ,IAAI,CARC,OAAC,CAAO,QAAC,CAAQ,IAAC,CAAI,CAAC;KAS/B,CAAL;;;;IANK,oBAAL,CAAA,SAAA,CAAA,eAAK,GAAA,YAAL;QAWQ,IAAI,CAVC,OAAC,CAAO,eAAC,CAAe,IAAC,CAAI,CAAC;KAWtC,CAAL;;;;IARK,oBAAL,CAAA,SAAA,CAAA,WAAK,GAAA,YAAL;QAaQ,IAAI,CAZC,OAAC,CAAO,WAAC,CAAW,IAAC,CAAI,CAAC;KAalC,CAAL;;;;IAVK,oBAAL,CAAA,SAAA,CAAA,qBAAK,GAAA,YAAL;QAeQ,IAAI,CAdC,UAAC,CAAU,CAAC,CAAC,CAAC,QAAC,GAAU,IAAA,CAAK,SAAC,CAAS;QAe7C,IAAI,IAdC,CAAI,gBAAC,EAAiB;YAef,IAAI,CAdC,UAAC,CAAU,CAAC,CAAC,CAAC,QAAC,qBAAU,IAAA,CAAK,gBAAoB,CAAA,CAAI;SAe9D;QACT,IAAI,CAdC,OAAC,CAAO,qBAAC,CAAqB,IAAC,CAAI,CAAC;KAe5C,CAAL;IA4BA,OAAA,oBAAC,CAAD;CAAC,CAxHyCO,0BAAW,CAwHrD,CAAC,CAAA;AAtCMd,4BAAP,CAAA,UAAO,GAAoC;IAc3C,EAbE,IAAA,EAAMa,cAAA,EAAW,IAAA,EAAM,CAAA;gBAcrB,QAAQ,EAbE,iBAAA;gBAcV,MAAM,EAbE,MAAA;gBAcR,OAAO,EAbED,SAAA;gBAcT,QAAQ,EAbE,EAAA;gBAcV,eAAe,EAbED,4BAAA,CAAwB,MAAC;gBAc1C,OAAO,EAbE;oBAcL,SAAS,EAbE,IAAID,iBAAA,CAAa,aAAC,CAAa;oBAc1C,gBAAgB,EAbE,IAAIA,iBAAA,CAAa,oBAAC,CAAoB;iBAC9D;aAcD,EAbC,EAAG;CAcJ,CAbC;;;;AAEDV,4BAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAgBD,EAAC,IAAI,EAAEK,eAAU,GAAG;IACpB,EAAC,IAAI,EAAEF,cAAS,GAAG;IACnB,EAAC,IAAI,EAAED,qBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAED,aAAQ,GAAG;CACjB,CAAD,EAAC,CAAC;AAdKD,4BAAP,CAAA,cAAO,GAAyD;IAgBhE,kBAAkB,EAfE,CAAA,EAAG,IAAA,EAAMU,iBAAA,EAAc,IAAA,EAAM,CAAA,iBAAE,EAAiB,EAAG,EAAE;CAgBxE,CAfC;AA/FFF,YAAA,CAAA;IADKC,uBAEC,EAAQ;;CACd,EAAAT,4BAAA,CAAA,SAAA,EAAA,kBAAA,EAAA,KAAA,CAAA,CAAiC,CAAjC;AAXaA,4BAAoB,GAAjCQ,YAAA,CAAA;IACCF,8BAAA,CAAA,CAAAC,4BAAA,CAAA,CAAA;IAYDH,YAAA,CAAA,mBAAA,EAAA,CAA+BC,eAAA;QAA+BF,cAAA;QAAoCD,qBAAC;QAAmCD,aAAA,CAAtI,CAAA;CAbA,EAAaD,4BAAoB,CAwHhC,CAxHD;;;;ADPA,IAAA,iBAAA,kBAAA,YAAA;IAAA,SAAA,iBAAA,GAAA;;;CAAA,EAAA,CAAA,CAAA;AAEwC,iBAAxC,CAAA,UAAwC,GAAoC;IAD5E,EAEE,IAAA,EAAMP,aAAA,EAAU,IAAA,EAAM,CAAA;gBADpB,OAAO,EAEE,CAAAD,mBAAE,CAAY;gBADvB,YAAY,EAEE;oBADVQ,4BAAoB;oBACpB,cAAc;oBACd,eAAe;oBACf,gBAAgB;oBAChB,iBAAiB;oBACjB,aAAa;oBACb,aAAa;oBACb,mBAAmB;oBACnB,oBAAoB;iBACvB;gBACD,OAAO,EAEE;oBADLA,4BAAoB;oBACpB,cAAc;oBACd,eAAe;oBACf,gBAAgB;oBAChB,iBAAiB;oBACjB,aAAa;oBACb,aAAa;oBACb,mBAAmB;oBACnB,oBAAoB;iBACvB;aACJ,EAEC,EAAG;CADJ,CAEC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EACA,CADD,EACC,CAAC;AD9BK,IAAM,YAAA,GAA8B,EAAE,OAAA,EAAS,kBAAA,EAAoB,QAAA,EAAUD,oBAAA,EAAM,CAAC;AAC3F,IAAa,gBAAA,GAAkC,EAAE,OAAA,EAAS,sBAAA,EAAwB,QAAA,EAAUD,wBAAA,EAAU,CAAC;AACvG,IAAa,mBAAA,GAAqC,EAAE,OAAA,EAAS,yBAAA,EAA2B,QAAA,EAAUD,2BAAA,EAAa,CAAC;AAChH,IAAa,kBAAA,GAAoC,EAAE,OAAA,EAAS,wBAAA,EAA0B,QAAA,EAAUD,0BAAA,EAAY,CAAC;AAC7G,IAAa,kBAAA,GAAoC,EAAE,OAAA,EAAS,wBAAA,EAA0B,QAAA,EAAUD,0BAAA,EAAY,CAAC;AAC7G,IAAa,eAAA,GAAiC,EAAE,OAAA,EAAS,qBAAA,EAAuB,QAAA,EAAUD,uBAAA,EAAS,CAAC;;;;AAIpG,IAAA,oBAAA,kBAAA,YAAA;IAAA,SAAA,oBAAA,GAAA;;;CAAA,EAAA,CAAA,CAAA;AAE2C,oBAA3C,CAAA,UAA2C,GAAoC;IAD/E,EAEE,IAAA,EAAMD,aAAA,EAAU,IAAA,EAAM,CAAA;gBADpB,OAAO,EAEE,CAAAD,mBAAE,EAAa,iBAAA,CAAkB;gBAD1C,OAAO,EAEE;oBADL,iBAAiB;iBACpB;gBACD,SAAS,EAEC;oBADN,YAAY;oBACZ,gBAAgB;oBAChB,mBAAmB;oBACnB,kBAAkB;oBAClB,kBAAkB;oBAClB,eAAe;iBAClB;aACJ,EAEC,EAAG;CADJ,CAEC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EACA,CADD,EACC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
