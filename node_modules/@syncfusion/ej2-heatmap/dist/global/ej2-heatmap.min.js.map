{"version":3,"file":"ej2-heatmap.min.js","sources":["../../src/heatmap/model/theme.js","../../src/heatmap/utils/helper.js","../../src/heatmap/model/base.js","../../src/heatmap/utils/colorMapping.js","../../src/heatmap/axis/axis.js","../../src/heatmap/axis/axis-helpers.js","../../src/heatmap/series/series.js","../../src/heatmap/utils/tooltip.js","../../src/heatmap/datasource/twodimensional.js","../../src/heatmap/legend/legend.js","../../src/heatmap/datasource/adaptor.js","../../src/heatmap/utils/export.js","../../src/heatmap/heatmap.js","../../src/global.js"],"sourcesContent":["/**\n * Specifies HeatMaps Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.heatMapTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.titleFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.rectLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.tooltipFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getThemeColor(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'highcontrastlight':\n        case 'highcontrast':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#ffffff',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#DADADA',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                heatMapTitle: '#212529',\n                axisTitle: '#212529',\n                axisLabel: '#212529',\n                cellBorder: '#E9ECEF',\n                background: '#FFFFFF',\n                cellTextColor: '#212529',\n                toggledColor: '#ffffff',\n                emptyCellColor: '#E9ECEF',\n                legendLabel: '#212529',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        default:\n            style = {\n                heatMapTitle: '#424242',\n                axisTitle: '#424242',\n                axisLabel: '#686868',\n                cellBorder: '#EEEEEE',\n                cellTextColor: '#000000',\n                toggledColor: '#ffffff',\n                background: '#FFFFFF',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#353535',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { RgbColor } from '../utils/colorMapping';\n/**\n * Helper method for heatmap\n */\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to measure the height and width of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('heatmapmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'heatmapmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.fontSize = (font.size).indexOf('px') !== -1 ? font.size : font.size + 'px';\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/** @private */\nvar TextElement = /** @class */ (function () {\n    function TextElement(fontModel, fontColor) {\n        this['font-size'] = fontModel.size;\n        this['font-style'] = fontModel.fontStyle.toLowerCase();\n        this['font-family'] = fontModel.fontFamily;\n        this['font-weight'] = fontModel.fontWeight.toLowerCase();\n        this.fill = fontColor ? fontColor : '';\n    }\n    return TextElement;\n}());\nexport { TextElement };\nexport function titlePositionX(width, leftPadding, rightPadding, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = leftPadding + width / 2;\n    }\n    else {\n        positionX = width + leftPadding;\n    }\n    return positionX;\n}\n/**\n * Internal class size for height and width\n * @private\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color ? color : '';\n        _this['stroke-width'] = parseFloat(width.toString());\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentRect = /** @class */ (function () {\n    function CurrentRect(x, y, width, height, value, id, xIndex, yIndex, xValue, yValue, visible, displayText, textId, allowCollection) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.id = id;\n        this.xIndex = xIndex;\n        this.yIndex = yIndex;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.visible = visible;\n        this.displayText = displayText;\n        this.textId = textId;\n        /** @private */\n        this.allowCollection = allowCollection;\n    }\n    return CurrentRect;\n}());\nexport { CurrentRect };\n/**\n * Class to define the details of selected cell.\n * @private\n */\nvar SelectedCellDetails = /** @class */ (function () {\n    function SelectedCellDetails(value, xLabel, yLabel, xValue, yValue, cellElement, xPosition, yPosition, width, height, x, y) {\n        this.value = value;\n        this.xLabel = xLabel;\n        this.yLabel = yLabel;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.cellElement = cellElement;\n        this.xPosition = xPosition;\n        this.yPosition = yPosition;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n    }\n    return SelectedCellDetails;\n}());\nexport { SelectedCellDetails };\n/**\n * Class to define property to draw rectangle.\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, borderColor, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height > 0 ? rect.height : 0;\n        _this.width = rect.width > 0 ? rect.width : 0;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/**\n * Class to define property to draw circle.\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, borderColor, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity) || this;\n        _this.cx = cx ? cx : 0;\n        _this.cy = cy ? cy : 0;\n        _this.r = r ? r : 0;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/**\n * Helper Class to define property to draw rectangle.\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Class to define property to draw text.\n * @private\n */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, basic, element, fontColor) {\n        var _this = _super.call(this, element, fontColor) || this;\n        _this.transform = '';\n        _this['dominant-baseline'] = 'auto';\n        _this.labelRotation = 0;\n        _this.baseline = 'auto';\n        _this.id = id;\n        _this.x = basic.x;\n        _this.y = basic.y;\n        _this['text-anchor'] = basic['text-anchor'];\n        _this.text = basic.text;\n        _this.transform = basic.transform;\n        _this.labelRotation = basic.labelRotation;\n        _this['dominant-baseline'] = basic['dominant-baseline'];\n        _this.baseline = basic.baseline;\n        _this.dy = basic.dy;\n        return _this;\n    }\n    return TextOption;\n}(TextElement));\nexport { TextOption };\n/**\n * Helper Class to define property to draw text.\n * @private\n */\nvar TextBasic = /** @class */ (function () {\n    function TextBasic(x, y, anchor, text, labelRotation, transform, baseLine, dy) {\n        this.transform = '';\n        this['dominant-baseline'] = 'auto';\n        this.labelRotation = 0;\n        this.baseline = 'auto';\n        this.x = x ? x : 0;\n        this.y = y ? y : 0;\n        this['text-anchor'] = anchor ? anchor : 'start';\n        this.text = text ? text : '';\n        this.transform = transform ? transform : '';\n        this.labelRotation = labelRotation;\n        this['dominant-baseline'] = baseLine ? baseLine : 'auto';\n        this.baseline = baseLine ? baseLine : '';\n        this.dy = dy ? dy : '';\n    }\n    return TextBasic;\n}());\nexport { TextBasic };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar Line = /** @class */ (function () {\n    function Line(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return Line;\n}());\nexport { Line };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar LineOption = /** @class */ (function (_super) {\n    __extends(LineOption, _super);\n    function LineOption(id, line, stroke, strokewidth, opacity, dasharray) {\n        var _this = _super.call(this, id, null, strokewidth, stroke, opacity, dasharray, null) || this;\n        _this.x1 = line.x1;\n        _this.y1 = line.y1;\n        _this.x2 = line.x2;\n        _this.y2 = line.y2;\n        return _this;\n    }\n    return LineOption;\n}(PathOption));\nexport { LineOption };\n/**\n * Properties required to render path.\n * @private\n */\nvar PathAttributes = /** @class */ (function (_super) {\n    __extends(PathAttributes, _super);\n    function PathAttributes(id, path, fill, border, borderWidth, opacity, borderColor) {\n        var _this = _super.call(this, id, fill, borderWidth, borderColor, opacity, null) || this;\n        _this.d = path.d;\n        _this.x = path.x;\n        _this.y = path.y;\n        return _this;\n    }\n    return PathAttributes;\n}(PathOption));\nexport { PathAttributes };\n/**\n * Helper Class to define property to path.\n * @private\n */\nvar Path = /** @class */ (function () {\n    function Path(d, innerR, x, y, x1, y1, cx, cy, start, end, radius, counterClockWise) {\n        this.d = d;\n        this.innerR = innerR;\n        this.cx = cx;\n        this.cy = cy;\n        this.x = x;\n        this.y = y;\n        this.x1 = x1;\n        this.y1 = y1;\n        this.start = start;\n        this.end = end;\n        this.radius = radius;\n        this.counterClockWise = counterClockWise;\n    }\n    return Path;\n}());\nexport { Path };\n/** @private */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nexport function titlePositionY(heatmapSize, topPadding, bottomPadding, titleStyle) {\n    var positionY;\n    if (titleStyle.textAlignment === 'Near') {\n        positionY = heatmapSize.height - bottomPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionY = heatmapSize.height / 2;\n    }\n    else {\n        positionY = topPadding;\n    }\n    return positionY;\n}\n/** @private */\nexport function rotateTextSize(font, text, angle) {\n    var renderer = new SvgRenderer('heatmapMeasureRotateText');\n    var svgObject = renderer.createSvg({ id: 'heatmapMeasureRotateText_svg', width: 100, height: 100 });\n    var box;\n    var options;\n    var htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle.toLowerCase(),\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight.toLowerCase(),\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    svgObject.appendChild(htmlObject);\n    document.body.appendChild(svgObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(svgObject);\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Class to draw SVG and Canvas Rectangle & Text.\n * @private\n */\nvar DrawSvgCanvas = /** @class */ (function () {\n    function DrawSvgCanvas(heatmap) {\n        this.heatMap = heatmap;\n    }\n    //Svg & Canvas Rectangle Part\n    DrawSvgCanvas.prototype.drawRectangle = function (properties, parentElement, isFromSeries) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawRectangle(properties));\n        }\n        else {\n            this.drawCanvasRectangle(this.heatMap.canvasRenderer, properties, isFromSeries);\n        }\n    };\n    //Svg & Canvas Bubble Part\n    DrawSvgCanvas.prototype.drawCircle = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawCircle(properties));\n        }\n        else {\n            this.drawCanvasCircle(this.heatMap.canvasRenderer, properties);\n        }\n    };\n    //Svg & Canvas Pie Part\n    DrawSvgCanvas.prototype.drawPath = function (properties, options, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.x;\n            delete properties.y;\n            parentElement.appendChild(this.heatMap.renderer.drawPath(properties));\n        }\n        else {\n            this.drawCanvasPath(this.heatMap.canvasRenderer, properties, options);\n        }\n    };\n    //Svg & Canvas Text Part\n    DrawSvgCanvas.prototype.createText = function (properties, parentElement, text) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.labelRotation;\n            delete properties.baseline;\n            delete properties.text;\n            parentElement.appendChild(this.heatMap.renderer.createText(properties, text));\n            properties.text = text;\n        }\n        else {\n            this.canvasDrawText(properties, text);\n        }\n    };\n    //Draw the wrapped text for both SVG & canvas\n    DrawSvgCanvas.prototype.createWrapText = function (options, font, parentElement) {\n        var renderOptions = {};\n        var htmlObject;\n        var tspanElement;\n        var text;\n        var height;\n        renderOptions = {\n            'id': options.id,\n            'x': options.x,\n            'y': options.y,\n            'fill': options.fill,\n            'font-size': font.size,\n            'font-style': font.fontStyle,\n            'font-family': font.fontFamily,\n            'font-weight': font.fontWeight.toLowerCase(),\n            'text-anchor': options['text-anchor'],\n            'transform': options.transform,\n            'dominant-baseline': options['dominant-baseline']\n        };\n        text = options.text[0];\n        if (!this.heatMap.enableCanvasRendering) {\n            htmlObject = this.heatMap.renderer.createText(renderOptions, text);\n        }\n        else {\n            this.heatMap.canvasRenderer.createText(options, text);\n        }\n        if (typeof options.text !== 'string' && options.text.length > 1) {\n            for (var i = 1, len = options.text.length; i < len; i++) {\n                height = (measureText(options.text[i], font).height);\n                if (!this.heatMap.enableCanvasRendering) {\n                    tspanElement = this.heatMap.renderer.createTSpan({\n                        'x': options.x, 'id': options.id + i,\n                        'y': (options.y) + (i * height)\n                    }, options.text[i]);\n                    htmlObject.appendChild(tspanElement);\n                }\n                else {\n                    options.id = options.id + i;\n                    options.y += height;\n                    this.heatMap.canvasRenderer.createText(options, options.text[i]);\n                }\n            }\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(htmlObject);\n        }\n    };\n    DrawSvgCanvas.prototype.drawLine = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawLine(properties));\n        }\n        else {\n            this.heatMap.canvasRenderer.drawLine(properties);\n        }\n    };\n    //Canvas Text Part\n    DrawSvgCanvas.prototype.canvasDrawText = function (options, label, translateX, translateY) {\n        var ctx = this.heatMap.canvasRenderer.ctx;\n        if (!translateX) {\n            translateX = options.x;\n        }\n        if (!translateY) {\n            translateY = options.y;\n        }\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontSize = (options['font-size'].toString()).indexOf('px') === -1 ? options['font-size'] + 'px' : options['font-size'];\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        ctx.save();\n        ctx.fillStyle = options.fill;\n        ctx.font = font;\n        ctx.textAlign = anchor;\n        if (options.baseline) {\n            ctx.textBaseline = options.baseline;\n        }\n        ctx.translate(translateX, translateY);\n        ctx.rotate(options.labelRotation * Math.PI / 180);\n        ctx.fillText(label, options.x - translateX, options.y - translateY);\n        ctx.restore();\n    };\n    // method to get the attributes value\n    /* tslint:disable */\n    DrawSvgCanvas.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    DrawSvgCanvas.prototype.setAttributes = function (canvas, options) {\n        canvas.ctx.lineWidth = options['stroke-width'];\n        var dashArray = options['stroke-dasharray'];\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            canvas.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        canvas.ctx.strokeStyle = options['stroke'];\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasRectangle = function (canvas, options, isFromSeries) {\n        var canvasCtx = canvas.ctx;\n        var cornerRadius = options.rx;\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = options['opacity'];\n        this.setAttributes(canvas, options);\n        this.drawCornerRadius(canvas, options);\n        if ((options['stroke-width'] && options['stroke-width'] != 0) || isFromSeries) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n        canvas.ctx = canvasCtx;\n    };\n    ;\n    // To draw the corner of a rectangle\n    DrawSvgCanvas.prototype.drawCornerRadius = function (canvas, options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        canvas.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        canvas.ctx.beginPath();\n        canvas.ctx.moveTo(x + width - cornerRadius, y);\n        canvas.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        canvas.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        canvas.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        canvas.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        canvas.ctx.closePath();\n        canvas.ctx.fill();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasCircle = function (canvas, options) {\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        canvas.ctx.fillStyle = options.fill;\n        canvas.ctx.globalAlpha = options.opacity;\n        canvas.ctx.fill();\n        this.setAttributes(canvas, options);\n        if (options['stroke-width'] && options['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasPath = function (canvas, properties, options) {\n        var path = properties.d;\n        var dataSplit = path.split(' ');\n        var borderWidth = this.getOptionValue(options, 'stroke-width');\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = properties.opacity;\n        canvas.ctx.fillStyle = properties.fill;\n        this.setAttributes(canvas, properties);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    canvas.ctx.moveTo(x1, y1);\n                    break;\n                case 'L':\n                    canvas.ctx.lineTo(x1, y1);\n                    break;\n                case 'A':\n                case 'a':\n                    canvas.ctx.arc(options.x, options.y, options.radius, (options.start * 0.0174533), (options.end * 0.0174533), false);\n                    i = dataSplit[i] === 'a' ? i + 13 : i + 5;\n                    break;\n                case 'Z':\n                    canvas.ctx.closePath();\n                    break;\n            }\n        }\n        canvas.ctx.fill();\n        if (properties['stroke-width'] && properties['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    return DrawSvgCanvas;\n}());\nexport { DrawSvgCanvas };\nexport function getTitle(title, style, width) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(textNone(width, title, style));\n            break;\n    }\n    return titleCollection;\n}\nexport function textWrap(currentLabel, maximumWidth, font) {\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var index = textLength - 1; index >= 0; --index) {\n            label = text.substring(0, index) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function textNone(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i);\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nvar Gradient = /** @class */ (function () {\n    function Gradient(x, x1, x2, y1, y2) {\n        this.id = x;\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y1 = y1;\n        this.y2 = y2;\n    }\n    return Gradient;\n}());\nexport { Gradient };\nvar GradientColor = /** @class */ (function () {\n    function GradientColor(color, colorStop) {\n        this.color = color;\n        this.colorStop = colorStop;\n    }\n    return GradientColor;\n}());\nexport { GradientColor };\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, heatmap) {\n    var tooltip = document.getElementById(id);\n    var initialClip = heatmap.initialClipRect;\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    x = x < 0 ? 5 : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: Segoe UI'\n        });\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (text === heatmap.titleSettings.text) {\n        tooltip.style.width = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (x + 15)).toString() + 'px' : '';\n    }\n    else {\n        tooltip.style.left = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (size.width + 7)).toString() + 'px' : x.toString() + 'px';\n        tooltip.style.top = (y + 15) + size.height + 6 > heatmap.availableSize.height ?\n            (y - (size.height + 6) - 10).toString() + 'px' : tooltip.style.top; // 6 and 7 are padding and border width\n    }\n    if (isTouch) {\n        setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nexport function increaseDateTimeInterval(value, interval, intervalType, increment) {\n    var result = new Date(value);\n    interval = Math.ceil(interval * increment);\n    switch (intervalType) {\n        case 'Years':\n            result.setFullYear(result.getFullYear() + interval);\n            break;\n        case 'Months':\n            result.setMonth(result.getMonth() + interval);\n            break;\n        case 'Days':\n            result.setDate(result.getDate() + interval);\n            break;\n        case 'Hours':\n            result.setHours(result.getHours() + interval);\n            break;\n        case 'Minutes':\n            result.setMinutes(result.getMinutes() + interval);\n            break;\n    }\n    return result;\n}\n/* private */\nvar CanvasTooltip = /** @class */ (function () {\n    function CanvasTooltip(text, rect) {\n        this.region = new Rect(0, 0, 0, 0);\n        this.text = text;\n        this.region = rect;\n    }\n    return CanvasTooltip;\n}());\nexport { CanvasTooltip };\n/* private*/\n/* Method to get the tool tip text in canvas based on region. */\nexport function getTooltipText(tooltipCollection, xPosition, yPosition) {\n    var length = tooltipCollection.length;\n    var tooltip;\n    var region;\n    var text;\n    for (var i = 0; i < length; i++) {\n        tooltip = tooltipCollection[i];\n        region = tooltip.region;\n        if (xPosition >= region.x && xPosition <= (region.x + region.width) && yPosition >= region.y && yPosition <= (region.y + region.height)) {\n            text = tooltip.text;\n            break;\n        }\n    }\n    return text;\n}\n/**\n * @private\n */\nvar PaletterColor = /** @class */ (function () {\n    function PaletterColor() {\n    }\n    return PaletterColor;\n}());\nexport { PaletterColor };\n/**\n * @private\n */\nvar GradientPointer = /** @class */ (function () {\n    function GradientPointer(pathX1, pathY1, pathX2, pathY2, pathX3, pathY3) {\n        this.pathX1 = pathX1;\n        this.pathY1 = pathY1;\n        this.pathX2 = pathX2;\n        this.pathY2 = pathY2;\n        this.pathX3 = pathX3;\n        this.pathY3 = pathY3;\n    }\n    return GradientPointer;\n}());\nexport { GradientPointer };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentLegendRect = /** @class */ (function () {\n    function CurrentLegendRect(x, y, width, height, label, id) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.label = label;\n        this.id = id;\n    }\n    return CurrentLegendRect;\n}());\nexport { CurrentLegendRect };\n/** @private */\nvar LegendRange = /** @class */ (function () {\n    function LegendRange(x, y, width, height, value, visible, currentPage) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.visible = visible;\n        this.currentPage = currentPage;\n    }\n    return LegendRange;\n}());\nexport { LegendRange };\n/** @private */\nvar ToggleVisibility = /** @class */ (function () {\n    function ToggleVisibility(visible, value, startValue, endValue) {\n        this.visible = visible;\n        this.value = value;\n        this.startValue = startValue;\n        this.endValue = endValue;\n    }\n    return ToggleVisibility;\n}());\nexport { ToggleVisibility };\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('heatmapmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new RgbColor(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.R) + componentToHex(value.G) + componentToHex(value.B);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new RgbColor(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new RgbColor(255, 255, 255);\n}\n/** @private */\nexport function formatValue(isCustom, format, tempInterval, formatFun) {\n    return isCustom ? format.replace('{value}', formatFun(tempInterval))\n        : formatFun(tempInterval);\n}\n/** @private */\nvar MultiLevelPosition = /** @class */ (function () {\n    function MultiLevelPosition(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return MultiLevelPosition;\n}());\nexport { MultiLevelPosition };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\n/**\n * Configures the fonts in heat map.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the heat map margins.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the borders in the heat map.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"radius\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the tooltip borders in the heat map.\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    return TooltipBorder;\n}(ChildProperty));\nexport { TooltipBorder };\n/**\n * Configures the mapping name for size and color in SizeAndColor type.\n */\nvar BubbleData = /** @class */ (function (_super) {\n    __extends(BubbleData, _super);\n    function BubbleData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"color\", void 0);\n    return BubbleData;\n}(ChildProperty));\nexport { BubbleData };\n/**\n * class used to maintain Title styles.\n */\nvar Title = /** @class */ (function (_super) {\n    __extends(Title, _super);\n    function Title() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Title.prototype, \"text\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Title.prototype, \"textStyle\", void 0);\n    return Title;\n}(ChildProperty));\nexport { Title };\n/**\n * class used to maintain the fill color value for cell color range\n */\nvar FillColor = /** @class */ (function (_super) {\n    __extends(FillColor, _super);\n    function FillColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"minColor\", void 0);\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"maxColor\", void 0);\n    return FillColor;\n}(ChildProperty));\nexport { FillColor };\n/**\n * class used to maintain palette information.\n */\nvar PaletteCollection = /** @class */ (function (_super) {\n    __extends(PaletteCollection, _super);\n    function PaletteCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"endValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"minColor\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"maxColor\", void 0);\n    return PaletteCollection;\n}(ChildProperty));\nexport { PaletteCollection };\n/**\n * label border properties.\n */\nvar AxisLabelBorder = /** @class */ (function (_super) {\n    __extends(AxisLabelBorder, _super);\n    function AxisLabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#b5b5b5')\n    ], AxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], AxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], AxisLabelBorder.prototype, \"type\", void 0);\n    return AxisLabelBorder;\n}(ChildProperty));\nexport { AxisLabelBorder };\nvar BubbleSize = /** @class */ (function (_super) {\n    __extends(BubbleSize, _super);\n    function BubbleSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], BubbleSize.prototype, \"minimum\", void 0);\n    __decorate([\n        Property('100%')\n    ], BubbleSize.prototype, \"maximum\", void 0);\n    return BubbleSize;\n}(ChildProperty));\nexport { BubbleSize };\n/**\n * categories for multi level labels\n */\nvar MultiLevelCategories = /** @class */ (function (_super) {\n    __extends(MultiLevelCategories, _super);\n    function MultiLevelCategories() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"end\", void 0);\n    __decorate([\n        Property('')\n    ], MultiLevelCategories.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n    return MultiLevelCategories;\n}(ChildProperty));\nexport { MultiLevelCategories };\n/**\n * MultiLevelLabels properties\n */\nvar MultiLevelLabels = /** @class */ (function (_super) {\n    __extends(MultiLevelLabels, _super);\n    function MultiLevelLabels() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Center')\n    ], MultiLevelLabels.prototype, \"alignment\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], MultiLevelLabels.prototype, \"overflow\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], MultiLevelLabels.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 1, type: 'Rectangle' }, AxisLabelBorder)\n    ], MultiLevelLabels.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelCategories)\n    ], MultiLevelLabels.prototype, \"categories\", void 0);\n    return MultiLevelLabels;\n}(ChildProperty));\nexport { MultiLevelLabels };\n/**\n * Internal class used to maintain colorcollection.\n */\nvar ColorCollection = /** @class */ (function () {\n    function ColorCollection(value, color, label, startValue, endValue, minColor, maxColor) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n    }\n    return ColorCollection;\n}());\nexport { ColorCollection };\n/**\n * class used to maintain color and value collection.\n */\nvar BubbleTooltipData = /** @class */ (function () {\n    function BubbleTooltipData(mappingName, bubbleData, valueType) {\n        this.mappingName = mappingName;\n        this.bubbleData = bubbleData;\n        this.valueType = valueType;\n    }\n    return BubbleTooltipData;\n}());\nexport { BubbleTooltipData };\n/**\n * Internal class used to maintain legend colorcollection.\n */\nvar LegendColorCollection = /** @class */ (function () {\n    function LegendColorCollection(value, color, label, startValue, endValue, minColor, maxColor, isHidden) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n        this.isHidden = isHidden;\n    }\n    return LegendColorCollection;\n}());\nexport { LegendColorCollection };\n/**\n * class used to maintain xAxis labels details for multipleRow label intersect action.\n */\nvar MultipleRow = /** @class */ (function () {\n    function MultipleRow(start, end, index, label, row) {\n        this.index = 1;\n        this.row = 1;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n        this.label = label;\n        this.row = row;\n    }\n    return MultipleRow;\n}());\nexport { MultipleRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, extend, ChildProperty, Collection, isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { ColorCollection, LegendColorCollection, PaletteCollection, FillColor } from '../model/base';\nimport { PaletterColor } from './helper';\n/**\n * Configures the color property in Heatmap.\n */\nvar PaletteSettings = /** @class */ (function (_super) {\n    __extends(PaletteSettings, _super);\n    function PaletteSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([{}], PaletteCollection)\n    ], PaletteSettings.prototype, \"palette\", void 0);\n    __decorate([\n        Property('Gradient')\n    ], PaletteSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], PaletteSettings.prototype, \"emptyPointColor\", void 0);\n    __decorate([\n        Property('Table')\n    ], PaletteSettings.prototype, \"colorGradientMode\", void 0);\n    __decorate([\n        Complex({}, FillColor)\n    ], PaletteSettings.prototype, \"fillColor\", void 0);\n    return PaletteSettings;\n}(ChildProperty));\nexport { PaletteSettings };\n/**\n * Helper class for colormapping\n */\nvar RgbColor = /** @class */ (function () {\n    function RgbColor(r, g, b) {\n        this.R = r;\n        this.G = g;\n        this.B = b;\n    }\n    return RgbColor;\n}());\nexport { RgbColor };\nvar CellColor = /** @class */ (function () {\n    function CellColor(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To convert hexa color to RGB.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.convertToRGB = function (value, colorMapping) {\n        var previousOffset = this.heatMap.isColorRange ? colorMapping[0].startValue : colorMapping[0].value;\n        var nextOffset = 0;\n        var i = 0;\n        var previousColor;\n        var nextColor;\n        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n            for (i = 0; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].endValue);\n                if (value <= offset && value >= Number(colorMapping[i].startValue)) {\n                    nextOffset = offset;\n                    previousColor = this.heatMap.colorCollection[i].minColor;\n                    nextColor = this.heatMap.colorCollection[i].maxColor;\n                    break;\n                }\n                else if (colorMapping[0].startValue !== this.heatMap.dataSourceMinValue && value < colorMapping[0].startValue) {\n                    nextOffset = colorMapping[0].startValue;\n                    previousOffset = this.heatMap.dataSourceMinValue;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else if (value > offset && value <= (i === (colorMapping.length - 1) ? this.heatMap.dataSourceMaxValue :\n                    colorMapping[i + 1].startValue)) {\n                    nextOffset = (i === (colorMapping.length - 1)) ? this.heatMap.dataSourceMaxValue : colorMapping[i + 1].startValue;\n                    previousOffset = offset;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].value);\n                if (value <= offset) {\n                    nextOffset = offset;\n                    previousColor = this.getEqualColor(colorMapping, previousOffset);\n                    nextColor = this.getEqualColor(colorMapping, nextOffset);\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        var percent = 0;\n        var full = (nextOffset) - previousOffset;\n        percent = (value - previousOffset) / full;\n        percent = isNaN(percent) ? 0 : percent;\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    /**\n     * To convert Component to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    /**\n     * To get similar color.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.getEqualColor = function (list, offset) {\n        for (var i = 0; i < list.length; i++) {\n            if (Number(list[i].value) === offset) {\n                var color = list[i].color;\n                if (color.indexOf('rgb') !== -1) {\n                    color = this.convertToHex(color);\n                }\n                else if (color.indexOf('#') === -1) {\n                    color = '#FFFFFF';\n                }\n                return color;\n            }\n        }\n        return '#00000';\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.convertToHex = function (color) {\n        var itemColor = color.substr(3);\n        itemColor = itemColor.split('(')[1].split(')')[0];\n        var colorSplit = itemColor.split(',');\n        itemColor = this.rgbToHex(parseInt(colorSplit[0], 10), parseInt(colorSplit[1], 10), parseInt(colorSplit[2], 10));\n        return itemColor;\n    };\n    /**\n     * To get RGB for percentage value.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new RgbColor(r, g, b);\n    };\n    /**\n     * To convert numbet to percentage.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    /**\n     * To get complete color Collection.\n     * @private\n     */\n    CellColor.prototype.getColorCollection = function () {\n        var heatMap = this.heatMap;\n        heatMap.colorCollection = [];\n        heatMap.legendColorCollection = [];\n        var range;\n        for (var j = 0; j < this.heatMap.paletteSettings.palette.length; j++) {\n            if (this.heatMap.paletteSettings.palette[j].startValue === null || this.heatMap.paletteSettings.palette[j].endValue === null) {\n                this.heatMap.isColorRange = false;\n                break;\n            }\n            else {\n                this.heatMap.isColorRange = true;\n            }\n        }\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        heatMap.emptyPointColor = heatMap.paletteSettings.emptyPointColor ? heatMap.paletteSettings.emptyPointColor :\n            heatMap.themeStyle.emptyCellColor;\n        var tempcolorMapping = this.orderbyOffset(this.heatMap.isColorRange ? heatMap.paletteSettings.palette :\n            heatMap.paletteSettings.palette && heatMap.paletteSettings.palette.length > 1 ?\n                heatMap.paletteSettings.palette : heatMap.themeStyle.palette);\n        if (!tempcolorMapping.isCompact) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length - 1);\n            }\n            else {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length);\n            }\n            if (tempcolorMapping.offsets.length >= 2) {\n                for (var index = 0; index < tempcolorMapping.offsets.length; index++) {\n                    heatMap.colorCollection.push(new ColorCollection((Math.round(((minValue) + (index * range)) * 100) / 100), tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor));\n                    heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor, false));\n                }\n            }\n        }\n        else {\n            heatMap.colorCollection = tempcolorMapping.offsets;\n            heatMap.legendColorCollection = extend([], tempcolorMapping.offsets, null, true);\n        }\n        if (!this.heatMap.isColorRange) {\n            this.updateLegendColorCollection(minValue, maxValue, tempcolorMapping);\n        }\n    };\n    /**\n     * To update legend color Collection.\n     * @private\n     */\n    CellColor.prototype.updateLegendColorCollection = function (minValue, maxValue, tempcolorMapping) {\n        if (this.heatMap.paletteSettings.type === 'Fixed' && (tempcolorMapping.isCompact || tempcolorMapping.isLabel)) {\n            return;\n        }\n        if (Math.round(minValue * 100) / 100 < this.heatMap.legendColorCollection[0].value) {\n            this.heatMap.legendColorCollection.unshift(new LegendColorCollection(Math.round(minValue * 100) / 100, this.heatMap.legendColorCollection[0].color, this.heatMap.legendColorCollection[0].label, this.heatMap.legendColorCollection[0].startValue, this.heatMap.legendColorCollection[0].endValue, this.heatMap.legendColorCollection[0].minColor, this.heatMap.legendColorCollection[0].maxColor, true));\n        }\n        if (Math.round(maxValue * 100) / 100 > this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].value) {\n            this.heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(maxValue * 100) / 100, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].color, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].label, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].startValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].endValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].minColor, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].maxColor, true));\n        }\n    };\n    /**\n     * To get ordered palette color collection.\n     * @private\n     */\n    CellColor.prototype.orderbyOffset = function (offsets) {\n        var returnCollection = new PaletterColor();\n        var key = this.heatMap.isColorRange ? 'to' : 'value';\n        var label = 'label';\n        returnCollection.isCompact = true;\n        returnCollection.isLabel = true;\n        // tslint:disable-next-line:no-any\n        returnCollection.offsets = offsets.sort(function (a, b) {\n            if (isNullOrUndefined(a[label]) && isNullOrUndefined(b[label])) {\n                returnCollection.isLabel = false;\n            }\n            if (!isNullOrUndefined(a[key]) && !isNullOrUndefined(b[key])) {\n                return a[key] - b[key];\n            }\n            else {\n                returnCollection.isCompact = false;\n                return a;\n            }\n        });\n        if (!returnCollection.isCompact) {\n            returnCollection.offsets = this.heatMap.paletteSettings.palette && this.heatMap.paletteSettings.palette.length > 1 ?\n                this.heatMap.paletteSettings.palette : this.heatMap.themeStyle.palette;\n        }\n        return returnCollection;\n    };\n    /**\n     * To get color depends to value.\n     * @private\n     */\n    CellColor.prototype.getColorByValue = function (text) {\n        var color = '';\n        var rbg;\n        var compareValue = 0;\n        if (text.toString() !== '') {\n            if (this.heatMap.cellSettings.tileType === 'Bubble' &&\n                (this.heatMap.cellSettings.bubbleType === 'Size' || this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                color = this.heatMap.isColorRange ? this.heatMap.colorCollection[0].minColor : this.heatMap.colorCollection[0].color;\n            }\n            else if (this.heatMap.paletteSettings.type === 'Fixed') {\n                for (var y = 0; y < this.heatMap.colorCollection.length; y++) {\n                    compareValue = this.heatMap.isColorRange ? this.heatMap.paletteSettings.palette[y].startValue :\n                        this.heatMap.colorCollection[y + 1] ? this.heatMap.colorCollection[y + 1].value :\n                            this.heatMap.colorCollection[y].value;\n                    var singleValue = this.heatMap.dataSourceMinValue === this.heatMap.dataSourceMaxValue;\n                    if (this.heatMap.isColorRange) {\n                        var legendRange = void 0;\n                        if ((text <= this.heatMap.colorCollection[y].endValue && text >= this.heatMap.colorCollection[y].startValue)) {\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].minColor;\n                            break;\n                        }\n                        else {\n                            color = this.heatMap.paletteSettings.fillColor.minColor;\n                        }\n                    }\n                    else {\n                        if ((text <= compareValue && singleValue && y === 0) || text < compareValue ||\n                            (text >= compareValue && y === this.heatMap.colorCollection.length - 1)) {\n                            var legendRange = void 0;\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].color;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.heatMap.paletteSettings.colorGradientMode !== 'Table') {\n                    this.getColorCollection();\n                }\n                if (text < this.heatMap.colorCollection[0].value && !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[0].color;\n                }\n                else if (text > this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].value &&\n                    !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].color;\n                }\n                else {\n                    rbg = this.convertToRGB(text, this.heatMap.colorCollection);\n                    color = this.rgbToHex(rbg.R, rbg.G, rbg.B);\n                }\n            }\n        }\n        else {\n            color = this.heatMap.emptyPointColor;\n        }\n        return color;\n    };\n    return CellColor;\n}());\nexport { CellColor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * HeatMap Axis file\n */\nimport { Property, Complex, ChildProperty, isNullOrUndefined, Collection } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { Font, Title, AxisLabelBorder, MultiLevelLabels, MultipleRow } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Rect, measureText, Size, rotateTextSize, increaseDateTimeInterval, formatValue, textTrim } from '../utils/helper';\nimport { MultiLevelPosition, textWrap } from '../utils/helper';\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.multipleRow = [];\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        /** @private */\n        _this.maxLabelSize = new Size(0, 0);\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /** @private */\n        _this.multilevel = [];\n        /** @private */\n        _this.axisLabels = [];\n        /** @private */\n        _this.tooltipLabels = [];\n        /** @private */\n        _this.labelValue = [];\n        /** @private */\n        _this.axisLabelSize = 0;\n        /** @private */\n        _this.axisLabelInterval = 0;\n        /** @private */\n        _this.dateTimeAxisLabelInterval = [];\n        /** @private */\n        _this.maxLength = 0;\n        /** @private */\n        _this.min = 0;\n        /** @private */\n        _this.max = 0;\n        /** @private */\n        _this.isIntersect = false;\n        /** @private */\n        _this.jsonCellLabel = [];\n        _this.multiLevelSize = [];\n        /** @private */\n        _this.xAxisMultiLabelHeight = [];\n        /** @private */\n        _this.yAxisMultiLabelHeight = [];\n        /** @private */\n        _this.multiLevelPosition = [];\n        return _this;\n    }\n    /**\n     * measure the axis title and label size\n     * @param axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.computeSize = function (axis, heatmap, rect) {\n        var size = new Size(0, 0);\n        var innerPadding = 10;\n        this.titleSize = axis.getTitleSize(axis, innerPadding);\n        this.maxLabelSize = axis.getMaxLabelSize(axis, heatmap);\n        this.getMultilevelLabelsHeight(axis, rect, heatmap);\n        for (var i = 0; i < this.multiLevelLabels.length; i++) {\n            size = axis.multiLevelLabelSize(innerPadding, i);\n            this.multiLevelSize.push(size);\n        }\n    };\n    /**\n     * calculating x, y position of multi level labels\n     * @private\n     */\n    Axis.prototype.multiPosition = function (axis, index) {\n        var innerPadding = axis.orientation === 'Horizontal' ? 10 : 20;\n        var multiPosition = new MultiLevelPosition(0, 0);\n        if (axis.orientation === 'Horizontal') {\n            var level0 = axis.maxLabelSize.height + innerPadding;\n            var level1 = this.xAxisMultiLabelHeight[index - 1];\n            multiPosition.x = (axis.isInversed ? axis.rect.x + axis.rect.width : axis.rect.x);\n            multiPosition.y = index === 0 ? axis.rect.y + (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].y + (axis.opposedPosition ? -level1 : level1);\n        }\n        else {\n            var level0 = axis.maxLabelSize.width + innerPadding;\n            var level1 = index !== 0 && (this.multiLevelSize[index - 1].width);\n            multiPosition.x = index === 0 ? axis.rect.x - (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].x - (axis.opposedPosition ? -(level1 + innerPadding) : level1 + innerPadding);\n            multiPosition.y = axis.isInversed ? axis.rect.y : axis.rect.y + axis.rect.height;\n        }\n        return multiPosition;\n    };\n    Axis.prototype.multiLevelLabelSize = function (innerPadding, index) {\n        var labelSize = new Size(0, 0);\n        var multiLevel = this.multiLevelLabels;\n        var categoryLabel = multiLevel[index].categories;\n        for (var i = 0; i < categoryLabel.length; i++) {\n            var size_1 = measureText(categoryLabel[i].text, multiLevel[index].textStyle);\n            labelSize.width = (labelSize.width > size_1.width) ? labelSize.width : size_1.width;\n            labelSize.height = (labelSize.height > size_1.height) ? labelSize.height : size_1.height;\n        }\n        var size = (this.orientation === 'Horizontal') ? this.xAxisMultiLabelHeight[index] : this.yAxisMultiLabelHeight[index];\n        if (this.opposedPosition) {\n            this.farSizes.push(size);\n        }\n        else {\n            this.nearSizes.push(size);\n        }\n        return labelSize;\n    };\n    Axis.prototype.getMultilevelLabelsHeight = function (axis, rect, heatmap) {\n        var labelSize;\n        var gap;\n        var height;\n        var multiLevelLabelsHeight = [];\n        var start;\n        var end;\n        var startPosition;\n        var endPosition;\n        var isVertical = axis.orientation === 'Vertical';\n        var axisValue = (isVertical ? rect.height : rect.width) / axis.axisLabelSize;\n        var padding = axis.orientation === 'Vertical' ? 20 : 10;\n        this.multiLevelLabels.map(function (multiLevel, index) {\n            multiLevel.categories.map(function (categoryLabel) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    startPosition = heatmap.heatMapAxis.calculateLeftPosition(axis, start, categoryLabel.start, rect);\n                    endPosition = heatmap.heatMapAxis.calculateWidth(axis, categoryLabel.end, end, rect);\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endPosition - startPosition) :\n                        categoryLabel.maximumTextWidth);\n                    if ((labelSize.width > gap - padding) && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height + padding :\n                        ((multiLevelLabelsHeight[index] < height) ? height + padding : multiLevelLabelsHeight[index]);\n                }\n            });\n        });\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n    };\n    Axis.prototype.getTitleSize = function (axis, innerPadding) {\n        var titleSize = new Size(0, 0);\n        if (this.title.text) {\n            titleSize = measureText(this.title.text, this.title.textStyle);\n            titleSize.height += innerPadding;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(titleSize.height);\n        }\n        else {\n            this.nearSizes.push(titleSize.height);\n        }\n        return titleSize;\n    };\n    Axis.prototype.getMaxLabelSize = function (axis, heatmap) {\n        var labelSize = new Size(0, 0);\n        var labels = this.axisLabels;\n        var padding = (axis.border.width > 0 || axis.multiLevelLabels.length > 0) ? 10 : 0;\n        var count = 1;\n        var summ = 1;\n        var row = 1;\n        var interval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n            heatmap.initialClipRect.width / axis.axisLabelSize : heatmap.initialClipRect.width / axis.axisLabels.length;\n        axis.angle = axis.labelRotation;\n        axis.isIntersect = false;\n        if (axis.orientation === 'Horizontal' && (axis.labelIntersectAction === 'Rotate45' ||\n            (axis.labelRotation % 180 === 0 && axis.labelIntersectAction === 'Trim' || axis.enableTrim)) ||\n            axis.labelIntersectAction === 'MultipleRows') {\n            var startX = heatmap.initialClipRect.x + ((!axis.isInversed) ? 0 : heatmap.initialClipRect.width);\n            var previousEnd = void 0;\n            var previousStart = void 0;\n            this.clearMultipleRow();\n            for (var i = 0, len = labels.length; i < len; i++) {\n                var label = labels[i];\n                var elementSize = measureText(label, axis.textStyle);\n                var axisInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] * interval : interval;\n                var startPoint = startX + (!axis.isInversed ?\n                    ((interval - elementSize.width) / 2) : -((interval + elementSize.width) / 2));\n                startPoint = startPoint < heatmap.initialClipRect.x ? heatmap.initialClipRect.x : startPoint;\n                var endPoint = startPoint + elementSize.width;\n                if (!axis.isInversed) {\n                    if (isNullOrUndefined(previousEnd)) {\n                        previousEnd = endPoint;\n                    }\n                    else if ((startPoint < previousEnd) && axis.labelIntersectAction !== 'MultipleRows') {\n                        if (axis.labelIntersectAction === 'Rotate45' && !axis.enableTrim) {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousEnd = endPoint;\n                }\n                else {\n                    if (isNullOrUndefined(previousStart)) {\n                        previousStart = startPoint;\n                    }\n                    else if ((previousStart < endPoint && axis.labelIntersectAction !== 'MultipleRows')) {\n                        if (axis.labelIntersectAction === 'Rotate45' && !axis.enableTrim) {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousStart = startPoint;\n                }\n                startX += axis.isInversed ? -axisInterval : axisInterval;\n                if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && axis.labelRotation === 0) {\n                    this.multipleRow.push(new MultipleRow(startPoint, endPoint, count, label, row));\n                }\n            }\n            if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && axis.isInversed) {\n                this.multipleRow = this.multipleRow.reverse();\n            }\n        }\n        for (var i = 0; i < labels.length; i++) {\n            var multipleRow = this.multipleRow;\n            var label = void 0;\n            if (axis.enableTrim) {\n                label = textTrim(axis.maxLabelLength, labels[i], axis.textStyle);\n            }\n            else {\n                label = labels[i];\n            }\n            var size = (axis.angle % 180 === 0) ?\n                measureText(label, axis.textStyle) : rotateTextSize(axis.textStyle, labels[i], axis.angle);\n            labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n            if (axis.labelIntersectAction === 'MultipleRows' && axis.orientation === 'Horizontal' && i > 0 && axis.labelRotation === 0) {\n                if (multipleRow[i].end >= heatmap.initialClipRect.width && i < labels.length - 1) {\n                    multipleRow[i].row = multipleRow[i].row + 1;\n                }\n                for (var k = 1; k <= axis.multilevel.length; k++) {\n                    if (multipleRow[i].start < multipleRow[i - 1].end) {\n                        if (axis.multilevel[k] < multipleRow[i].start) {\n                            count = k;\n                            break;\n                        }\n                        else if (k === axis.multilevel.length - 1) {\n                            count = axis.multilevel.length;\n                            break;\n                        }\n                    }\n                    else if (size.width < interval) {\n                        for (var j = 1; j <= axis.multilevel.length; j++) {\n                            if (axis.multilevel[j] < multipleRow[i].start) {\n                                count = j;\n                                multipleRow[j].row = count;\n                                break;\n                            }\n                        }\n                    }\n                }\n                labelSize.height = (labelSize.height > ((size.height * count) + (((size.height * 0.5) / 2) * (count - 1)))) ?\n                    labelSize.height : ((size.height * count) + (((size.height * 0.5) / 2) * count));\n                this.multipleRow[i].index = count;\n                axis.multilevel[count] = multipleRow[i].end;\n            }\n            else {\n                if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && i === 0 &&\n                    axis.labelRotation === 0) {\n                    axis.multilevel[1] = multipleRow[i].end;\n                }\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n        }\n        if (heatmap.cellSettings.border.width >= 20 && axis.orientation !== 'Horizontal') {\n            labelSize.width = labelSize.width + (heatmap.cellSettings.border.width / 4);\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        else {\n            this.nearSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        return labelSize;\n    };\n    /**\n     * Generate the axis lables for numeric axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateNumericAxisLabels = function (heatmap) {\n        //Axis Min\n        var min = 0;\n        var max = 0;\n        var interval = this.interval ? this.interval : 1;\n        var adaptorMin;\n        var adaptorMax;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.min : heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.max : heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        min = !isNullOrUndefined(this.minimum) ? this.minimum : ((adaptorMin) ? adaptorMin : 0);\n        max = !isNullOrUndefined(this.maximum) ? this.maximum :\n            ((adaptorMax) ? adaptorMax : (this.maxLength * this.increment));\n        var temp;\n        if (this.minimum && this.maximum && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        max = !isNullOrUndefined(this.maximum) ? max : (adaptorMax ? adaptorMax : (max + min));\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatmap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        for (var i = min; i <= max; i = i + (interval * this.increment)) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.axisLabels.push(value);\n        }\n        this.min = 0;\n        this.axisLabelSize = Math.floor(((max - min) / this.increment) + 1);\n        this.max = this.axisLabelSize - 1;\n        this.axisLabelInterval = interval;\n        for (var i = min; i <= max; i = i + this.increment) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.tooltipLabels.push(value);\n            this.labelValue.push(i);\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis lables for category axis\n     * @private\n     */\n    Axis.prototype.calculateCategoryAxisLabels = function () {\n        var labels = this.labels ? this.labels : [];\n        labels = (labels.length > 0) ? labels : this.jsonCellLabel;\n        var min = !isNullOrUndefined(this.minimum) ? this.minimum : 0;\n        var max = !isNullOrUndefined(this.maximum) ? this.maximum : this.maxLength;\n        var interval = this.interval ? this.interval : 1;\n        var temp;\n        if (!isNullOrUndefined(this.minimum) && !isNullOrUndefined(this.maximum) && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        if (labels && labels.length > 0) {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = labels[i] ? labels[i].toString() : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        else {\n            for (var i = min; i <= max; i = i + interval) {\n                this.axisLabels.push(i.toString());\n            }\n        }\n        for (var i = min; i <= max; i++) {\n            this.tooltipLabels.push(labels[i] ? labels[i].toString() : i.toString());\n            this.labelValue.push(labels[i] ? labels[i].toString() : i.toString());\n        }\n        this.min = min;\n        this.max = max;\n        this.axisLabelSize = max - min + 1;\n        this.axisLabelInterval = interval;\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis labels for date time axis.\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateDateTimeAxisLabel = function (heatmap) {\n        var interval = this.interval ? this.interval : 1;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = heatmap.intl.getDateParser(option);\n        var dateFormatter = heatmap.intl.getDateFormat(option);\n        var min;\n        var max;\n        var adaptorMin = null;\n        var adaptorMax = null;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.min :\n                heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.max :\n                heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        var minimum = this.minimum ? this.minimum : (adaptorMin ? adaptorMin : null);\n        var maximum = this.maximum ? this.maximum : (adaptorMax ? adaptorMax : null);\n        if (minimum === null && maximum === null) {\n            min = 0;\n            max = this.maxLength * this.increment;\n            for (var i = min; i <= max; i = i + (interval * this.increment)) {\n                this.axisLabels.push(i.toString());\n                this.tooltipLabels.push(i.toString());\n                this.labelValue.push(i.toString());\n            }\n            this.min = 0;\n            this.max = this.maxLength;\n            this.axisLabelSize = (max - min) / this.increment + 1;\n            this.axisLabelInterval = interval;\n        }\n        else {\n            if (minimum !== null && maximum === null) {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = increaseDateTimeInterval(min, this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else if (minimum === null && maximum !== null) {\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n                min = increaseDateTimeInterval(max, -this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n            }\n            this.format = heatmap.intl.getDateFormat({\n                format: this.labelFormat, skeleton: this.getSkeleton()\n            });\n            var tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.axisLabels.push(value);\n                if (this.showLabelOn !== 'None') {\n                    interval = this.calculateLabelInterval(tempInterval);\n                    this.dateTimeAxisLabelInterval.push(interval);\n                }\n                tempInterval = increaseDateTimeInterval(tempInterval, interval, this.intervalType, this.increment).getTime();\n            }\n            this.min = 0;\n            this.axisLabelInterval = interval;\n            this.axisLabelSize = this.getTotalLabelLength(min, max); // this.tooltipLabels.length;\n            this.max = this.axisLabelSize - 1;\n            tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.tooltipLabels.push(value);\n                this.labelValue.push(new Date(tempInterval));\n                tempInterval = increaseDateTimeInterval(tempInterval, 1, this.intervalType, this.increment).getTime();\n            }\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    Axis.prototype.calculateLabelInterval = function (interval) {\n        var year = new Date(interval).getFullYear();\n        var month = new Date(interval).getMonth() + 1;\n        var day = new Date(interval).getDate();\n        var numberOfDays;\n        var tempInterval;\n        if (this.showLabelOn === 'Years' || this.showLabelOn === 'Months') {\n            if (this.showLabelOn === 'Years' && this.intervalType === 'Months') {\n                tempInterval = Math.ceil(12 / this.increment);\n            }\n            else {\n                numberOfDays = this.showLabelOn === 'Years' ? year % 4 === 0 ? 366 : 365 : new Date(year, month, 0).getDate();\n                numberOfDays += 1 - day;\n                tempInterval = this.intervalType === 'Days' ? Math.ceil(numberOfDays / this.increment) : this.intervalType === 'Hours' ?\n                    Math.ceil((numberOfDays * 24) / this.increment) : this.intervalType === 'Minutes' ?\n                    Math.ceil((numberOfDays * 24 * 60) / this.increment) : 1;\n            }\n        }\n        else if (this.showLabelOn === 'Days') {\n            tempInterval = this.intervalType === 'Hours' ? Math.ceil(24 / this.increment) : this.intervalType === 'Minutes' ?\n                Math.ceil((24 * 60) / this.increment) : 1;\n        }\n        else if (this.showLabelOn === 'Hours') {\n            var minutes = new Date(interval).getMinutes();\n            tempInterval = this.intervalType === 'Minutes' ? Math.ceil((60 - minutes) / this.increment) : 1;\n        }\n        else {\n            tempInterval = 1;\n        }\n        return tempInterval;\n    };\n    /**\n     * @private\n     */\n    Axis.prototype.getSkeleton = function () {\n        var skeleton;\n        if (this.intervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (this.intervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (this.intervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (this.intervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (this.intervalType === 'Minutes') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    };\n    /** @private */\n    Axis.prototype.getTotalLabelLength = function (min, max) {\n        var length = 0;\n        var minimum = new Date(min);\n        var maximum = new Date(max);\n        var difference;\n        var days;\n        switch (this.intervalType) {\n            case 'Years':\n                var years = ((maximum.getFullYear() - minimum.getFullYear()) / this.increment) + 1;\n                length = Math.floor(years);\n                break;\n            case 'Months':\n                var months = (maximum.getFullYear() - minimum.getFullYear()) * 12;\n                months -= minimum.getMonth();\n                months += maximum.getMonth();\n                length = months <= 0 ? 1 : Math.floor((months / this.increment) + 1);\n                break;\n            case 'Days':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                days = Math.floor(difference / (1000 * 3600 * 24));\n                length = Math.floor((days / this.increment) + 1);\n                break;\n            case 'Hours':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var hours = Math.floor(difference / (1000 * 3600));\n                length = Math.floor(hours / this.increment) + 1;\n                break;\n            case 'Minutes':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var minutes = Math.floor(difference / (1000 * 60));\n                length = Math.floor(minutes / this.increment) + 1;\n                break;\n        }\n        return length;\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearAxisLabel = function () {\n        this.axisLabels = [];\n        this.tooltipLabels = [];\n        this.dateTimeAxisLabelInterval = [];\n        this.labelValue = [];\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearMultipleRow = function () {\n        this.multipleRow = [];\n        this.multilevel = [];\n    };\n    __decorate([\n        Complex({ text: '', textStyle: Theme.axisTitleFont }, Title)\n    ], Axis.prototype, \"title\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"labels\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Axis.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(0)\n    ], Axis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property('Category')\n    ], Axis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property(1)\n    ], Axis.prototype, \"increment\", void 0);\n    __decorate([\n        Property('None')\n    ], Axis.prototype, \"showLabelOn\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"interval\", void 0);\n    __decorate([\n        Property('')\n    ], Axis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('Days')\n    ], Axis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Property(35)\n    ], Axis.prototype, \"maxLabelLength\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 0, type: 'Rectangle' }, AxisLabelBorder)\n    ], Axis.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelLabels)\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { Rect, measureText, TextOption, rotateTextSize, textTrim, CanvasTooltip, PathOption, textWrap } from '../utils/helper';\nimport { sum, titlePositionX, LineOption, Line, DrawSvgCanvas, TextBasic, titlePositionY } from '../utils/helper';\nimport { extend, Browser } from '@syncfusion/ej2-base';\nvar AxisHelper = /** @class */ (function () {\n    function AxisHelper(heatMap) {\n        this.heatMap = heatMap;\n        this.padding = 10;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * To render the x and y axis.\n     *  @private\n     */\n    AxisHelper.prototype.renderAxes = function () {\n        this.initialClipRect = this.heatMap.initialClipRect;\n        var heatMap = this.heatMap;\n        var axisElement;\n        var element;\n        if (!heatMap.enableCanvasRendering) {\n            axisElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'AxisCollection' });\n        }\n        var axes = this.heatMap.axisCollections;\n        for (var i = 0, len = axes.length; i < len; i++) {\n            var axis = axes[i];\n            var optionsLine = {};\n            if (axis.orientation === 'Horizontal') {\n                if (!heatMap.enableCanvasRendering) {\n                    element = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisGroup' });\n                }\n                this.drawXAxisLine(element, axis);\n                this.drawXAxisTitle(axis, element, axis.rect);\n                this.drawXAxisLabels(axis, element, axis.rect);\n            }\n            else {\n                element = heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisGroup' });\n                this.drawYAxisLine(element, axis);\n                this.drawYAxisTitle(axis, element, axis.rect);\n                this.drawYAxisLabels(axis, element, axis.rect);\n            }\n            if (axis.multiLevelLabels.length > 0) {\n                this.drawMultiLevels(element, axis);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                axisElement.appendChild(element);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.heatMap.svgObject.appendChild(axisElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisLine = function (parent, axis) {\n        var y = this.initialClipRect.y + (!axis.opposedPosition ? this.initialClipRect.height : 0);\n        var line = new LineOption(this.heatMap.element.id + '_XAxisLine', new Line(this.initialClipRect.x, y, this.initialClipRect.x + this.initialClipRect.width, y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawYAxisLine = function (parent, axis) {\n        var x = this.initialClipRect.x + ((!axis.opposedPosition) ? 0 : this.initialClipRect.width);\n        var line = new LineOption(this.heatMap.element.id + '_YAxisLine', new Line(x, this.initialClipRect.y, x, this.initialClipRect.height + this.initialClipRect.y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawXAxisTitle = function (axis, parent, rect) {\n        var titlepadding = (axis.textStyle.size === '0px' ? 0 : 10);\n        var y = rect.y + (!axis.opposedPosition ? (axis.maxLabelSize.height + titlepadding +\n            sum(axis.xAxisMultiLabelHeight)) : -(axis.maxLabelSize.height + titlepadding + sum(axis.xAxisMultiLabelHeight)));\n        if (axis.title.text) {\n            var heatMap = this.heatMap;\n            var title = axis.title;\n            var elementSize = measureText(title.text, title.textStyle);\n            var padding = this.padding;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n            var options = new TextOption(heatMap.element.id + '_XAxisTitle', new TextBasic(rect.x + titlePositionX(rect.width, 0, 0, title.textStyle), y + padding, anchor, title.text), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            this.drawSvgCanvas.createText(options, parent, title.text);\n        }\n    };\n    AxisHelper.prototype.drawYAxisTitle = function (axis, parent, rect) {\n        if (axis.title.text) {\n            var title = axis.title;\n            var heatMap = this.heatMap;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var elementSize = measureText(title.text, title.textStyle);\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            var padding = 10;\n            padding = axis.opposedPosition ? padding : -padding;\n            var titlepadding = (axis.textStyle.size === '0px' ? 0 : padding);\n            var x = rect.x + titlepadding + ((axis.opposedPosition) ? axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight) :\n                -(axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight)));\n            var y = rect.y + titlePositionY(rect, 0, 0, title.textStyle) + (axis.opposedPosition ? this.padding : -this.padding);\n            var options = new TextOption(heatMap.element.id + '_YAxisTitle', new TextBasic(x, y - this.padding, anchor, title.text, labelRotation, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', 'auto'), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            if (!this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.createText(options, parent, title.text);\n            }\n            else {\n                this.drawSvgCanvas.canvasDrawText(options, title.text, x, y);\n            }\n        }\n    };\n    /**\n     * Get the visible labels for both x and y axis\n     * @private\n     */\n    AxisHelper.prototype.calculateVisibleLabels = function () {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        var data = this.heatMap.dataSourceSettings;\n        var processLabels = !(data && data.isJsonData && data.adaptorType === 'Cell');\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            axis = axisCollection[i];\n            if (axis.valueType === 'Numeric' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n            else if (axis.valueType === 'DateTime' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else if (axis.valueType === 'Category') {\n                axis.clearAxisLabel();\n                axis.calculateCategoryAxisLabels();\n            }\n            axis.tooltipLabels = axis.isInversed ? axis.tooltipLabels.reverse() : axis.tooltipLabels;\n        }\n    };\n    /**\n     * Measure the title and labels rendering position for both X and Y axis.\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.measureAxis = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = axisCollection.length - 1; i >= 0; i--) {\n            axis = axisCollection[i];\n            var padding = axis.textStyle.size === '0px' ? 0 : this.padding;\n            axis.nearSizes = [];\n            axis.farSizes = [];\n            axis.computeSize(axis, heatmap, rect);\n            if (!axis.opposedPosition) {\n                if (axis.orientation === 'Horizontal') {\n                    rect.height -= (sum(axis.nearSizes) + padding);\n                }\n                else {\n                    rect.x += sum(axis.nearSizes) + padding;\n                    rect.width -= sum(axis.nearSizes) + padding;\n                }\n            }\n            else {\n                if (axis.orientation === 'Horizontal') {\n                    rect.y += sum(axis.farSizes) + padding;\n                    rect.height -= sum(axis.farSizes) + padding;\n                }\n                else {\n                    rect.width -= sum(axis.farSizes) + padding;\n                }\n            }\n        }\n    };\n    /**\n     * Calculate the X and Y axis line position\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.calculateAxisSize = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            var axis_1 = axisCollection[i];\n            axis_1.rect = extend({}, rect, null, true);\n            if (axis_1.orientation === 'Horizontal' && !axis_1.opposedPosition) {\n                axis_1.rect.y = rect.y + rect.height;\n                axis_1.rect.height = 0;\n            }\n            if (axis_1.orientation === 'Vertical' && axis_1.opposedPosition) {\n                axis_1.rect.x = rect.x + rect.width;\n                axis_1.rect.width = 0;\n            }\n            axis_1.multiLevelPosition = [];\n            for (var i_1 = 0; i_1 < axis_1.multiLevelLabels.length; i_1++) {\n                var multiPosition = axis_1.multiPosition(axis_1, i_1);\n                axis_1.multiLevelPosition.push(multiPosition);\n            }\n        }\n    };\n    AxisHelper.prototype.drawXAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var borderWidth = this.heatMap.cellSettings.border.width > 5 ? (this.heatMap.cellSettings.border.width / 2) : 0;\n        var interval = (rect.width - borderWidth) / axis.axisLabelSize;\n        var compactInterval = 0;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var tempintervel = rect.width / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.width / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n            axisInterval = temp;\n        }\n        var y;\n        var padding = 10;\n        var lableStrtX = rect.x + (!axis.isInversed ? 0 : rect.width);\n        var labelPadding;\n        var angle = axis.angle;\n        padding = this.padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabelBorder' });\n        }\n        if (axis.isInversed && axis.labelIntersectAction === 'MultipleRows') {\n            axis.multipleRow.reverse();\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var lableRect = new Rect(lableStrtX, rect.y, interval, rect.height);\n            var label = (axis.labelIntersectAction === 'Trim' && axis.isIntersect) ? axis.valueType !== 'DateTime' ||\n                axis.showLabelOn === 'None' ? textTrim(interval * axisInterval, labels[i], axis.textStyle) :\n                textTrim(axis.dateTimeAxisLabelInterval[i] * interval, labels[i], axis.textStyle) : labels[i];\n            label = axis.enableTrim ? textTrim(axis.maxLabelLength, labels[i], axis.textStyle) : label;\n            var elementSize = measureText(label, axis.textStyle);\n            var transform = void 0;\n            labelPadding = (axis.opposedPosition) ? -(padding) : (padding + ((angle % 360) === 0 ? (elementSize.height / 2) : 0));\n            var x = lableRect.x + ((!axis.isInversed) ?\n                (lableRect.width / 2) - (elementSize.width / 2) : -((lableRect.width / 2) + (elementSize.width / 2)));\n            if (axis.labelIntersectAction === 'Trim') {\n                x = (!axis.isInversed) ? (x >= lableRect.x ? x : lableRect.x) : (x > (lableStrtX - interval) ? x : (lableStrtX - interval));\n            }\n            else if (angle % 180 === 0) {\n                x = x < rect.x ? rect.x : x;\n                x = ((x + elementSize.width) > (rect.x + rect.width)) ? (rect.x + rect.width - elementSize.width) : x;\n            }\n            if (axis.labelIntersectAction === 'MultipleRows' && axis.labelRotation === 0) {\n                var a = axis.opposedPosition ? -(axis.multipleRow[i].index - 1) : (axis.multipleRow[i].index - 1);\n                if (axis.multipleRow[i].index > 1) {\n                    y = rect.y + labelPadding + (elementSize.height * a) + (axis.opposedPosition ?\n                        -(((elementSize.height * 0.5) / 2) * axis.multipleRow[i].index) :\n                        (((elementSize.height * 0.5) / 2) * axis.multipleRow[i].index));\n                }\n                else {\n                    y = rect.y + labelPadding + (axis.opposedPosition ? -((elementSize.height * 0.5) / 2) :\n                        ((elementSize.height * 0.5) / 2));\n                }\n            }\n            else {\n                y = rect.y + labelPadding;\n            }\n            this.drawXAxisBorder(axis, borderElement, axis.rect, x, elementSize.width, i);\n            if (angle % 360 !== 0) {\n                angle = (angle > 360) ? angle % 360 : angle;\n                var rotateSize = rotateTextSize(axis.textStyle, label, angle);\n                var diffHeight = axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                var yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                x = lableRect.x + (axis.isInversed ? -(lableRect.width / 2) : (lableRect.width / 2));\n                y = y + (axis.opposedPosition ? -(rotateSize.height / 2) :\n                    (((angle % 360) === 180 || (angle % 360) === -180) ? 0 : (rotateSize.height) / 2));\n                transform = 'rotate(' + angle + ',' + x + ',' + y + ')';\n            }\n            if (this.heatMap.cellSettings.border.width > 5 && axis.opposedPosition) {\n                y = y - (this.heatMap.cellSettings.border.width / 2);\n            }\n            if (this.heatMap.yAxis.opposedPosition && this.heatMap.cellSettings.border.width > 5) {\n                x = x + (this.heatMap.cellSettings.border.width / 2);\n            }\n            if (this.heatMap.xAxis.isInversed && this.heatMap.cellSettings.border.width > 5) {\n                x = x - (this.heatMap.cellSettings.border.width / 2);\n            }\n            var options = new TextOption(heatMap.element.id + '_XAxis_Label' + i, new TextBasic(x, y, (angle % 360 === 0) ? 'start' : 'middle', label, angle, transform), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, label);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, labelElement, label);\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStrtX = lableStrtX + (!axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStrtX = lableStrtX + (!axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n            }\n            if (label.indexOf('...') !== -1) {\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(x, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n            if (compactInterval !== 0) {\n                i = i + (compactInterval - 1);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawYAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.height / axis.axisLabelSize;\n        var compactInterval = 0;\n        var tempintervel = rect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        var label;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.height / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n        }\n        var padding = 10;\n        var lableStartY = rect.y + (axis.isInversed ? 0 : rect.height);\n        var anchor = axis.opposedPosition ? 'start' : 'end';\n        padding = axis.opposedPosition ? padding : -padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var labelRect = new Rect(rect.x, lableStartY, rect.width, interval);\n            var position = labelRect.height / 2; //titlePositionY(lableRect, 0, 0, axis.textStyle);\n            var axisWidth = this.heatMap.cellSettings.border.width >= 20 ? (this.heatMap.cellSettings.border.width / 2) : 0;\n            var x = labelRect.x + padding + (axis.opposedPosition ? axisWidth : -axisWidth);\n            var indexValue = this.heatMap.cellSettings.border.width > 5 ?\n                (((this.heatMap.cellSettings.border.width / 2) / len) * (axis.isInversed ? (i) : (len - i))) : 0;\n            var y = (labelRect.y - indexValue) + (axis.isInversed ? position : -position);\n            label = axis.enableTrim ? textTrim(axis.maxLabelLength, labels[i], axis.textStyle) : labels[i];\n            var options = new TextOption(heatMap.element.id + '_YAxis_Label' + i, new TextBasic(x, y, anchor, label, 0, 'rotate(' + 0 + ',' + (x) + ',' + (y) + ')', 'middle'), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                options.dy = '1ex';\n            }\n            this.drawSvgCanvas.createText(options, labelElement, label);\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStartY = lableStartY + (axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStartY = lableStartY + (axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n                i = i + (compactInterval - 1);\n            }\n            var elementSize = measureText(label, axis.textStyle);\n            this.drawYAxisBorder(axis, borderElement, axis.rect, y, elementSize.height, i);\n            if (label.indexOf('...') !== -1) {\n                var xValue = axis.opposedPosition ? x : (x - elementSize.width);\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(xValue, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisBorder = function (axis, parent, rect, lableX, width, index) {\n        var interval = rect.width / axis.axisLabelSize;\n        var path = '';\n        var padding = 10;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = axis.isInversed ? rect.x + rect.width - (interval * index * axisInterval) :\n            rect.x + (interval * index * axisInterval);\n        var startY = rect.y;\n        var endX;\n        var endY;\n        endY = startY + (axis.opposedPosition ? -(axis.maxLabelSize.height + padding) : axis.maxLabelSize.height + padding);\n        endX = axis.isInversed ? startX - interval : startX + interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY);\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_1 = 3;\n                endY = startY + ((endY - startY) / 2) + (axis.opposedPosition ? 0 : 5);\n                var endY1 = axis.isInversed ? (lableX + width + padding_1) : (lableX - padding_1);\n                var endY2 = axis.isInversed ? (lableX - padding_1) : (lableX + width + padding_1);\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endY1 + ' ' + endY + ' ' + 'M' + ' ' + endY2 +\n                    ' ' + endY + ' ' + 'L' +\n                    ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    AxisHelper.prototype.drawYAxisBorder = function (axis, parent, rect, lableY, height, index) {\n        var interval = rect.height / axis.axisLabelSize;\n        var path = '';\n        var padding = 20;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = rect.x;\n        var startY = axis.isInversed ? rect.y + (interval * index * axisInterval) :\n            rect.y + rect.height - (interval * index * axisInterval);\n        var endX;\n        var endY;\n        endX = startX + (!axis.opposedPosition ? -(axis.maxLabelSize.width + padding) : axis.maxLabelSize.width + padding);\n        endY = axis.isInversed ? startY + interval : startY - interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY;\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endX = startX - (startX - endX) / 2;\n                var endY1 = axis.isInversed ? lableY - height / 2 : lableY + height / 2;\n                var endY2 = axis.isInversed ? lableY + height / 2 : lableY - height / 2;\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY1 + ' ' + 'M' + ' ' +\n                    endX + ' ' + endY2 + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY;\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createAxisBorderElement = function (axis, labelBorder, parent, index) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? '_XAxis_Label_Border' : '_YAxis_Label_Border';\n        var pathOptions = new PathOption(this.heatMap.element.id + id + index, 'transparent', axis.border.width, axis.border.color, 1, 'none', labelBorder);\n        if (!this.heatMap.enableCanvasRendering) {\n            var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    AxisHelper.prototype.drawMultiLevels = function (parent, axis) {\n        var element;\n        if (!this.heatMap.enableCanvasRendering) {\n            element = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_' + axis.orientation + '_MultiLevelLabel' });\n        }\n        axis.orientation === 'Horizontal' ? this.renderXAxisMultiLevelLabels(axis, element, axis.rect) :\n            this.renderYAxisMultiLevelLabels(axis, element, axis.rect);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(element);\n        }\n    };\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endX = 0;\n        var tooltip;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var width;\n        var textLength;\n        var position = (isInversed ? axis.rect.width : 0) + axis.rect.x;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_XAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                tooltip = false;\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startX = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startY = axis.multiLevelPosition[level].y;\n                endX = position + _this.calculateWidth(axis, categoryLabel.end, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endX - startX) : categoryLabel.maximumTextWidth) - padding;\n                y = startY + (opposedPosition ? -((axis.xAxisMultiLabelHeight[level] - labelSize.height)) : labelSize.height);\n                width = categoryLabel.maximumTextWidth ? categoryLabel.maximumTextWidth : labelSize.width;\n                x = !isInversed ? startX + padding : startX - gap;\n                if (multiLevel.alignment === 'Center') {\n                    x = ((endX - startX) / 2) + startX;\n                    x -= (labelSize.width > gap ? gap : labelSize.width) / 2;\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    x = !isInversed ? endX - padding : startX - padding;\n                    x -= (labelSize.width > gap ? gap : labelSize.width);\n                }\n                else {\n                    x = !isInversed ? startX + padding : endX + padding;\n                }\n                if (multiLevel.overflow === 'None' && labelSize.width > Math.abs(endX - startX)) {\n                    x = !isInversed ? startX + padding : startX - labelSize.width - padding;\n                    anchor = 'start';\n                }\n                var textBasic = new TextBasic(x, y, anchor, categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_XAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                if (multiLevel.overflow === 'Wrap') {\n                    options.text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    textLength = options.text.length;\n                }\n                else if (multiLevel.overflow === 'Trim') {\n                    options.text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    textLength = 1;\n                }\n                if (multiLevel.overflow === 'Wrap' && options.text.length > 1) {\n                    _this.drawSvgCanvas.createWrapText(options, multiLevel.textStyle, labelElement);\n                    for (var i_2 = 0; i_2 < options.text.length; i_2++) {\n                        if (options.text[i_2].indexOf('...') !== -1) {\n                            tooltip = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n                if (options.text.indexOf('...') !== -1 || options.text[0].indexOf('...') !== -1 || tooltip) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height * textLength)));\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderXAxisLabelBorder(level, axis, startX, startY, endX, pathRect, level, labelSize, gap, x);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisLabelBorder = function (labelIndex, axis, startX, startY, endX, path, level, labelSize, gap, x) {\n        var path1;\n        var path2;\n        var endY = startY + (axis.opposedPosition ? -(axis.xAxisMultiLabelHeight[labelIndex]) :\n            axis.xAxisMultiLabelHeight[labelIndex]);\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding = 3;\n                path1 = axis.isInversed ? (labelSize.width > gap ? gap : labelSize.width) + x + padding : x - padding;\n                path2 = axis.isInversed ? x - padding : (labelSize.width > gap ? gap : labelSize.width) + x + padding;\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + (endY - startY) / 2) + ' ' +\n                    'L' + ' ' + path1 + ' ' + (startY + (endY - startY) / 2) + ' ' + 'M' + ' ' + path2 + ' ' + (startY +\n                    (endY - startY) / 2) + ' ' + 'L' + ' ' + endX + ' ' + (startY + (endY - startY) / 2) +\n                    ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var startY2;\n        var endY;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var interval = (axis.rect.height / axis.axisLabelSize) / axis.increment;\n        var text;\n        var position = (!isInversed ? axis.rect.height : 0) + axis.rect.y;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            startY2 = axis.multiLevelPosition[level].y;\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_YAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startY = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startX = axis.multiLevelPosition[level].x;\n                endY = position + _this.calculateWidth(axis, categoryLabel.start, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(startX) : categoryLabel.maximumTextWidth) - padding;\n                var maxWidth = Math.abs(startX - (startX - axis.multiLevelSize[level].width - 2 * padding)) / 2 -\n                    (labelSize.width / 2);\n                x = (axis.opposedPosition ? startX : startX - axis.multiLevelSize[level].width - 2 * padding) + maxWidth;\n                y = startY + padding;\n                if (multiLevel.overflow !== 'None') {\n                    if (multiLevel.overflow === 'Wrap') {\n                        text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    }\n                    else {\n                        text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    }\n                }\n                if (multiLevel.alignment === 'Center') {\n                    y += ((endY - startY) / 2 - (text.length * labelSize.height) / 2);\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    y = isInversed ? endY - labelSize.height / 2 : y - labelSize.height;\n                }\n                else {\n                    y = isInversed ? y + labelSize.height / 2 : endY + labelSize.height;\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderYAxisLabelBorder(level, axis, startX, startY, endY, pathRect, level, labelSize, gap, y);\n                }\n                var textBasic = new TextBasic(x, y, 'start', categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_YAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                options.text = text;\n                _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                if (options.text.indexOf('...') !== -1) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height)));\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisLabelBorder = function (labelIndex, axis, startX, startY, endY, path, level, labelSize, gap, y) {\n        var padding = 20;\n        var path1;\n        var path2;\n        var endX = startX - (axis.opposedPosition ? -(axis.multiLevelSize[labelIndex].width + padding) :\n            (axis.multiLevelSize[labelIndex].width + padding));\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_2 = 10;\n                path1 = axis.isInversed ? (y - padding_2 - 5) : (y + (labelSize.height) - padding_2);\n                path2 = axis.isInversed ? (y + (labelSize.height) - padding_2) : (y - padding_2 - 5);\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + startY + ' ' +\n                    'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + path1 + ' ' + 'M' + ' ' + (startX + (endX - startX) / 2) +\n                    ' ' + path2 + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' +\n                    endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createBorderElement = function (borderIndex, axis, path, parent) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? 'XAxis' : 'YAxis';\n        var pathOptions = new PathOption(this.heatMap.element.id + '_' + id + '_MultiLevel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color, 1, '', path);\n        var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    /**\n     * calculate left position of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateLeftPosition = function (axis, start, label, rect) {\n        var value;\n        var interval;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                start -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * start * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(start, axis, true, rect);\n            value = axis.isInversed ? -interval : interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    /**\n     * calculate width of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateWidth = function (axis, label, end, rect) {\n        var interval;\n        var value;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                end -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * (end + 1) * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(end, axis, false, rect);\n            value = interval;\n            value = axis.isInversed ? -value : value;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    AxisHelper.prototype.calculateNumberOfDays = function (date, axis, start, rect) {\n        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        var oneMinute = 60 * 1000;\n        var oneHour = 60 * 60 * 1000;\n        var firstDate;\n        var secondDate;\n        var labels = axis.labelValue;\n        var position;\n        var interval = (axis.orientation === 'Horizontal' ? rect.width : rect.height) / axis.axisLabelSize;\n        var givenDate = new Date(Number(date));\n        var days = 0;\n        for (var index = 0; index < axis.axisLabelSize; index++) {\n            firstDate = new Date(Number(labels[index]));\n            secondDate = axis.isInversed ? new Date(Number(labels[index - 1])) : new Date(Number(labels[index + 1]));\n            if (index === (axis.isInversed ? 0 : axis.axisLabelSize - 1)) {\n                secondDate = new Date(Number(labels[index]));\n                if (axis.intervalType === 'Hours') {\n                    secondDate = new Date(Number(secondDate.setHours(secondDate.getHours() + 1)));\n                }\n                else if ((axis.intervalType === 'Minutes')) {\n                    secondDate = new Date(Number(secondDate.setMinutes(secondDate.getMinutes() + 1)));\n                }\n                else if ((axis.intervalType === 'Days')) {\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + 1)));\n                }\n                else {\n                    var numberOfDays = axis.intervalType === 'Months' ?\n                        new Date(secondDate.getFullYear(), secondDate.getMonth() + 1, 0).getDate() :\n                        secondDate.getFullYear() % 4 === 0 ? 366 : 365;\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + numberOfDays)));\n                }\n            }\n            if (Number(firstDate) <= date && Number(secondDate) >= date) {\n                if (axis.intervalType === 'Minutes' || axis.intervalType === 'Hours') {\n                    var totalMinutes = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneMinute)));\n                    var minutesInHours = Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneMinute));\n                    days = (interval / totalMinutes) * minutesInHours;\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n                else {\n                    var numberOfDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n                    start ? givenDate.getDate() : givenDate.setDate(givenDate.getDate() + 1);\n                    if (numberOfDays !== 0) {\n                        days = (interval / numberOfDays) * (Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneDay)));\n                    }\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    return AxisHelper;\n}());\nexport { AxisHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, extend, merge, Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, TextBasic, Path, PathAttributes, RectOption, CircleOption, TextOption, CurrentRect, DrawSvgCanvas } from '../utils/helper';\nimport { convertHexToColor, colorNameToHex, formatValue } from '../utils/helper';\nimport { CellColor } from '../utils/colorMapping';\nimport { Border, Font, BubbleTooltipData, BubbleSize } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the CellSettings property in the Heatmap.\n */\nvar CellSettings = /** @class */ (function (_super) {\n    __extends(CellSettings, _super);\n    function CellSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"enableCellHighlighting\", void 0);\n    __decorate([\n        Complex({}, BubbleSize)\n    ], CellSettings.prototype, \"bubbleSize\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], CellSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.rectLabelFont, Font)\n    ], CellSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Rect')\n    ], CellSettings.prototype, \"tileType\", void 0);\n    __decorate([\n        Property('Color')\n    ], CellSettings.prototype, \"bubbleType\", void 0);\n    __decorate([\n        Property(false)\n    ], CellSettings.prototype, \"isInversedBubbleSize\", void 0);\n    return CellSettings;\n}(ChildProperty));\nexport { CellSettings };\nvar Series = /** @class */ (function () {\n    function Series(heatMap) {\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(this.heatMap);\n        this.cellColor = new CellColor(this.heatMap);\n    }\n    /**\n     * To render rect series.\n     * @return {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Series.prototype.renderRectSeries = function () {\n        this.createSeriesGroup();\n        var heatMap = this.heatMap;\n        var isValueInRange = false;\n        heatMap.xLength = heatMap.axisCollections[0].axisLabelSize;\n        heatMap.yLength = heatMap.axisCollections[1].axisLabelSize; // Series Part\n        var tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n        var tempY = Math.round(heatMap.initialClipRect.y * 100) / 100;\n        var dataXIndex = 0;\n        var dataYIndex = 0;\n        var cellSetting = heatMap.cellSettings;\n        var tempWidth = Math.round(((heatMap.initialClipRect.width -\n            (cellSetting.border.width / 2)) / heatMap.xLength) * 100) / 100;\n        var tempHeight = Math.round(((heatMap.initialClipRect.height -\n            (cellSetting.border.width / 2)) / heatMap.yLength) * 100) / 100;\n        var tempVal = 0;\n        var themeStyle = heatMap.themeStyle;\n        var tempBorder;\n        var tempRectPosition = [];\n        var circleRadius;\n        tempBorder = cellSetting.border;\n        var borderColor;\n        var displayText;\n        this.rectPositionCollection = [];\n        this.color = '';\n        this.bubbleColorValue = [];\n        if (heatMap.yAxis.opposedPosition) {\n            tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n        }\n        circleRadius = this.getBubbleRadius(tempWidth, tempHeight);\n        for (var x = 0; x < (heatMap.xLength * heatMap.yLength); x++) {\n            if (heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataYIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataYIndex];\n            }\n            else if (heatMap.paletteSettings.colorGradientMode === 'Row' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataXIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataXIndex];\n            }\n            this.setTextAndColor(dataXIndex, dataYIndex);\n            var rectPosition = new CurrentRect(0, 0, 0, 0, 0, '', 0, 0, 0, 0, true, '', '', true);\n            borderColor = tempBorder.color;\n            if (this.heatMap.bubbleSizeWithColor) {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, extend('', this.bubbleColorValue, null, true), x, dataYIndex, dataXIndex);\n            }\n            else {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, this.text, x, dataYIndex, dataXIndex);\n            }\n            if (cellSetting.showLabel) {\n                displayText = this.getFormatedText(this.text, cellSetting.format);\n            }\n            else {\n                displayText = '';\n            }\n            rectPosition.displayText = displayText;\n            if (!isNullOrUndefined(this.heatMap.cellRender)) {\n                displayText = this.cellRendering(rectPosition, displayText);\n            }\n            if ((heatMap.renderingMode === 'Canvas' && parseFloat(tempBorder.width.toString()) === 0) || (!borderColor &&\n                cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                borderColor = this.color;\n            }\n            if (cellSetting.tileType === 'Rect') { // Rectangle/Tile Series\n                this.renderTileCell(rectPosition, tempBorder, x, this.color, borderColor);\n                this.updateLabelVisibleStatus(tempWidth, tempHeight, displayText);\n            }\n            else {\n                if (cellSetting.bubbleType === 'Color') { // Bubble by same size and different color Series\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, circleRadius);\n                    this.updateLabelVisibleStatus((circleRadius * 2) - 12, (circleRadius * 2) - 6, displayText); // 6, 12 - circle padding\n                }\n                else if (!isNullOrUndefined(this.text) && (cellSetting.bubbleType === 'Size' || cellSetting.bubbleType === 'SizeAndColor')\n                    && this.text.toString() !== '') { // Bubble by same color and different size Series\n                    if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                        this.heatMap.minColorValue = !isFinite(this.heatMap.minColorValue) ?\n                            this.heatMap.dataSourceMinValue : this.heatMap.minColorValue;\n                        this.heatMap.maxColorValue = !isFinite(this.heatMap.maxColorValue) ?\n                            this.heatMap.dataSourceMaxValue : this.heatMap.maxColorValue;\n                    }\n                    var tempCircleRadius = this.getRadiusBypercentage(parseFloat(this.text.toString()), heatMap.dataSourceMinValue, heatMap.dataSourceMaxValue, circleRadius);\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, tempCircleRadius);\n                    this.updateLabelVisibleStatus((tempCircleRadius * 2) - 12, (tempCircleRadius * 2) - 6, displayText);\n                }\n                else if (cellSetting.bubbleType === 'Sector' && !isNullOrUndefined(this.text) && this.text.toString() !== '') {\n                    this.renderSectorCell(rectPosition, tempBorder, x.toString(), this.color, borderColor, circleRadius, this.text);\n                    this.checkLabelXDisplay = false;\n                    this.checkLabelYDisplay = false;\n                }\n            }\n            tempRectPosition.push(rectPosition);\n            if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                isValueInRange = this.isCellValueInRange(dataXIndex, dataYIndex);\n                rectPosition.visible = isValueInRange;\n            }\n            if (cellSetting.showLabel && this.checkLabelYDisplay && this.checkLabelXDisplay) {\n                var themeCellTextStyle = cellSetting.textStyle;\n                var options = new TextOption(heatMap.element.id + '_HeatMapRectLabels_' + x, new TextBasic(Math.round((tempX + tempWidth / 2) * 100) / 100, Math.round((tempY + tempHeight / 2) * 100) / 100, 'middle', displayText, null, null, 'middle'), themeCellTextStyle, themeCellTextStyle.color || this.getSaturatedColor(this.color));\n                rectPosition.textId = options.id;\n                if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                    options.fill = isValueInRange ? options.fill : this.heatMap.themeStyle.toggledColor;\n                }\n                if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                    options.dy = this.heatMap.cellSettings.tileType === 'Bubble' ? '0.5ex' : '1ex';\n                }\n                this.drawSvgCanvas.createText(options, this.containerTextObject, displayText);\n            }\n            if (tempVal === heatMap.xLength - 1) {\n                tempY = Math.round((tempY + tempHeight) * 100) / 100;\n                tempVal = 0;\n                dataYIndex = 0;\n                if (heatMap.yAxis.opposedPosition) {\n                    tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n                }\n                else {\n                    tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n                }\n                this.rectPositionCollection.push(tempRectPosition);\n                tempRectPosition = [];\n                dataXIndex++;\n            }\n            else {\n                tempX = Math.round((tempX + tempWidth) * 100) / 100;\n                tempVal++;\n                dataYIndex++;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            heatMap.svgObject.appendChild(this.containerRectObject);\n            if (cellSetting.showLabel && !(cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                heatMap.svgObject.appendChild(this.containerTextObject);\n            }\n        }\n    };\n    /**\n     * To toggle the cell text color based on legend selection.\n     */\n    Series.prototype.isCellValueInRange = function (dataXIndex, dataYIndex) {\n        var isValueInRange = false;\n        for (var i = 0; i < this.heatMap.toggleValue.length; i++) {\n            var minValue = void 0;\n            var maxValue = void 0;\n            minValue = (i === 0) && !this.heatMap.isColorRange ? this.heatMap.dataSourceMinValue : this.heatMap.isColorRange ?\n                this.heatMap.toggleValue[i].startValue : this.heatMap.toggleValue[i].value;\n            if (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor') {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.maxColorValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            else {\n                maxValue = (i === this.heatMap.toggleValue.length - 1 && !this.heatMap.isColorRange) ?\n                    this.heatMap.dataSourceMaxValue : this.heatMap.isColorRange ?\n                    this.heatMap.toggleValue[i].endValue : this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            // tslint:disable-next-line:no-any\n            var clonedDataSource = this.heatMap.clonedDataSource;\n            var bubbleText = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '';\n            var text = parseFloat(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor' ?\n                bubbleText.toString() : this.text.toString());\n            if (isNaN(text)) {\n                isValueInRange = true;\n            }\n            else if (!isNaN(text) && text >= minValue && text <= maxValue) {\n                if (!this.heatMap.toggleValue[i].visible) {\n                    isValueInRange = false;\n                    break;\n                }\n                else {\n                    isValueInRange = true;\n                    break;\n                }\n            }\n            else if (this.heatMap.isColorRange &&\n                maxValue >= this.heatMap.toggleValue[i].endValue && i === this.heatMap.toggleValue.length - 1) {\n                isValueInRange = true;\n                break;\n            }\n        }\n        return isValueInRange;\n    };\n    /**\n     * To customize the cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.cellRendering = function (rectPosition, text) {\n        var xAxis = this.heatMap.axisCollections[0];\n        var yAxis = this.heatMap.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var yLabelValue = yAxis.labelValue.slice().reverse();\n        var argData = {\n            heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n            cancel: false,\n            name: 'cellRender',\n            value: rectPosition.value,\n            xLabel: xLabels[rectPosition.xIndex].toString(),\n            yLabel: yLabels[rectPosition.yIndex].toString(),\n            displayText: text,\n            xValue: xAxis.labelValue[rectPosition.xIndex],\n            yValue: yLabelValue[rectPosition.yIndex],\n            cellColor: this.color\n        };\n        this.heatMap.trigger('cellRender', argData);\n        this.color = argData.cellColor;\n        return argData.displayText;\n    };\n    /**\n     * To set color and text details.\n     * @private\n     */\n    Series.prototype.setTextAndColor = function (dataXIndex, dataYIndex) {\n        var cellSetting = this.heatMap.cellSettings;\n        this.bubbleColorValue = [];\n        var adaptData = this.heatMap.dataSourceSettings;\n        // tslint:disable-next-line:no-any\n        var clonedDataSource = this.heatMap.clonedDataSource;\n        if (this.heatMap.bubbleSizeWithColor) {\n            this.text = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][0]) &&\n                clonedDataSource[dataXIndex][dataYIndex][0].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][0] : '';\n            this.color = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ?\n                this.cellColor.getColorByValue(clonedDataSource[dataXIndex][dataYIndex][1])\n                : this.heatMap.isColorValueExist ? this.heatMap.emptyPointColor : this.cellColor.getColorByValue(this.text);\n            var tempBubbleCollection = new BubbleTooltipData(adaptData.isJsonData && adaptData.adaptorType === 'Cell' ? adaptData.bubbleDataMapping.size : null, this.text, 'Size');\n            this.bubbleColorValue.push(tempBubbleCollection);\n            this.bubbleColorValue.push({\n                mappingName: adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                    adaptData.bubbleDataMapping.color : null,\n                bubbleData: !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                    clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '',\n                valueType: 'Color'\n            });\n        }\n        else {\n            this.text = clonedDataSource[dataXIndex][dataYIndex];\n            this.color = this.cellColor.getColorByValue(this.text);\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.createSeriesGroup = function () {\n        if (!this.heatMap.enableCanvasRendering) {\n            this.containerRectObject = this.heatMap.renderer.createGroup({\n                id: this.heatMap.element.id + '_Container_RectGroup'\n            });\n            if (this.heatMap.cellSettings.showLabel &&\n                !(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                this.containerTextObject = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_Container_TextGroup', transform: 'translate( 0, 0)' });\n            }\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.updateRectDetails = function (rectPosition, tempX, tempY, tempWidth, tempHeight, text, x, dataXIndex, dataYIndex) {\n        rectPosition.x = tempX;\n        rectPosition.y = tempY;\n        rectPosition.width = tempWidth;\n        rectPosition.height = tempHeight;\n        rectPosition.value = text;\n        rectPosition.id = this.heatMap.element.id + '_HeatMapRect_' + x;\n        rectPosition.xIndex = dataXIndex;\n        rectPosition.yIndex = dataYIndex;\n    };\n    /**\n     * To Render Tile Cell.\n     * @private\n     */\n    Series.prototype.renderTileCell = function (rectPosition, tempBorder, x, color, borderColor) {\n        var rect = new RectOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, new Rect(rectPosition.x, rectPosition.y, rectPosition.width, rectPosition.height), borderColor || this.heatMap.themeStyle.cellBorder, tempBorder.radius, tempBorder.radius);\n        this.drawSvgCanvas.drawRectangle(rect, this.containerRectObject, true);\n    };\n    /**\n     * To get bubble radius.\n     * @private\n     */\n    Series.prototype.getBubbleRadius = function (width, height) {\n        var radius = (width / 2) - 2;\n        if (height / 2 < width / 2) {\n            radius = (height / 2) - 2;\n        }\n        return radius < 0 ? 0 : radius;\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderSectorCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius, text) {\n        var curve;\n        var startAngle;\n        var endAngle;\n        var cX;\n        var cY;\n        var X1;\n        var Y1;\n        var tempcX;\n        var tempcY;\n        var pathBorderWidth;\n        var centerX = Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100;\n        var centerY = Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100;\n        var tempColor = color;\n        var sectorContibution = this.getRadiusBypercentage(text, this.heatMap.dataSourceMinValue, this.heatMap.dataSourceMaxValue, 360); // Circle total angle.\n        for (var y = 0; y < 2; y++) {\n            pathBorderWidth = parseFloat(tempBorder.width.toString());\n            if (y === 0) {\n                curve = sectorContibution >= 180 ? 1 : 0;\n                startAngle = -90;\n                if (sectorContibution === 0) {\n                    endAngle = 270; // (360 - 90) for zero position adjustment.\n                }\n                else {\n                    endAngle = (sectorContibution - 90);\n                }\n                cX = Math.round((centerX + circleRadius * Math.cos((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                cY = Math.round((centerY + circleRadius * Math.sin((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                X1 = Math.round(centerX * 100) / 100;\n                Y1 = Math.round((centerY - circleRadius) * 100) / 100;\n                if (sectorContibution === 0) {\n                    tempColor = this.heatMap.emptyPointColor;\n                }\n            }\n            else {\n                curve = sectorContibution >= 180 ? 0 : 1;\n                startAngle = endAngle;\n                endAngle = 270; // (360 - 90) for zero position adjustment.\n                tempColor = this.heatMap.emptyPointColor;\n                x = x + '_Unfilled';\n                tempcX = cX;\n                tempcY = cY;\n                cX = X1;\n                cY = Y1;\n                X1 = tempcX;\n                Y1 = tempcY;\n                if (sectorContibution === 0) {\n                    pathBorderWidth = 1;\n                    borderColor = color;\n                }\n            }\n            var path = new Path('', false, centerX, centerY, X1, Y1, cX, cY, startAngle, endAngle, circleRadius, true);\n            var sector = new PathAttributes(this.heatMap.element.id + '_HeatMapRect_' + x, path, tempColor, tempBorder, pathBorderWidth, 1, borderColor);\n            this.calculateShapes(sector, path, sectorContibution, curve);\n            this.drawSvgCanvas.drawPath(sector, path, this.containerRectObject);\n            if (sectorContibution === 360) {\n                break;\n            }\n        }\n    };\n    /**\n     * To Render sector Cell.\n     * @private\n     */\n    Series.prototype.calculateShapes = function (options, path, sectorContibution, curve) {\n        var pathString;\n        var clockWise;\n        switch (sectorContibution) {\n            case 360:\n            case 0:\n                if (sectorContibution === 0 && path.start === path.end) {\n                    pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x + ' ' + (path.y - path.radius);\n                }\n                else {\n                    pathString = !this.heatMap.enableCanvasRendering ? 'M' + ' ' + options.x + ' ' + options.y + ' ' : '';\n                    pathString = pathString + 'm' + ' ' + (-path.radius) + ' ' + '0' + ' ' +\n                        'a' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (path.radius * 2) + ' ' + '0' + ' ' + 'a' + ' ' + path.radius +\n                        ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (-(path.radius * 2)) + ' ' + '0' + ' ';\n                }\n                merge(options, { 'd': pathString });\n                break;\n            default:\n                pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x1 + ' ' + path.y1 + ' ' +\n                    'A' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + curve + ' ' + '1' + ' ' +\n                    path.cx + ' ' + path.cy + ' ' + 'Z';\n                merge(options, { 'd': pathString });\n                break;\n        }\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderBubbleCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius) {\n        var circle = new CircleOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, borderColor || this.heatMap.themeStyle.cellBorder, Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100, Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100, circleRadius);\n        this.drawSvgCanvas.drawCircle(circle, this.containerRectObject);\n    };\n    /**\n     * To find whether the X,Y Label need to display or not.\n     * @private\n     */\n    Series.prototype.updateLabelVisibleStatus = function (tempWidth, tempHeight, displayText) {\n        if (this.heatMap.cellSettings.showLabel) {\n            this.checkLabelYDisplay = tempHeight > parseInt(this.heatMap.cellSettings.textStyle.size, 10) ? true : false;\n            this.checkLabelXDisplay = tempWidth > (displayText.length *\n                (parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2)) ? true : false;\n        }\n    };\n    /**\n     * To find percentage value.\n     * @private\n     */\n    Series.prototype.getRadiusBypercentage = function (text, min, max, radius) {\n        var minimum = parseInt(this.heatMap.cellSettings.bubbleSize.minimum, 10);\n        var maximum = parseInt(this.heatMap.cellSettings.bubbleSize.maximum, 10);\n        if (minimum < 0 || minimum > 100 || isNaN(minimum)) {\n            minimum = 0;\n        }\n        if (maximum < 0 || maximum > 100 || isNaN(maximum)) {\n            maximum = 100;\n        }\n        var valueInPrecentage = ((text - min) /\n            (max - min)) * 100;\n        valueInPrecentage = isNaN(valueInPrecentage) ? 100 : valueInPrecentage;\n        if ((this.heatMap.bubbleSizeWithColor ||\n            (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Size'))) {\n            if (this.heatMap.cellSettings.isInversedBubbleSize) {\n                valueInPrecentage = 100 - valueInPrecentage;\n            }\n            valueInPrecentage = ((valueInPrecentage * (maximum - minimum)) / 100) + minimum;\n        }\n        radius = radius * (valueInPrecentage / 100);\n        return (Math.round(radius * 100) / 100) < 0 ? 0 : (Math.round(radius * 100) / 100);\n    };\n    /**\n     * To find saturated color for datalabel.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.R * 299 + rgbValue.G * 587 + rgbValue.B * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    /**\n     * To highlight the mouse hovered rect cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.highlightSvgRect = function (tempID) {\n        if (tempID.indexOf('Celltooltip') === -1) {\n            if (tempID.indexOf('_HeatMapRect') !== -1) {\n                if (tempID.indexOf('_HeatMapRectLabels_') !== -1) {\n                    var tempIndex = tempID.indexOf('_HeatMapRectLabels_') + 19;\n                    tempID = this.heatMap.element.id + '_HeatMapRect_' + tempID.slice(tempIndex);\n                }\n                var element = document.getElementById(tempID);\n                if (this.heatMap.tempRectHoverClass !== tempID) {\n                    if (this.heatMap.cellSettings.enableCellHighlighting) {\n                        var oldElement = void 0;\n                        if (this.heatMap.tempRectHoverClass) {\n                            oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                        }\n                        if (oldElement && !this.heatMap.rectSelected) {\n                            oldElement.setAttribute('opacity', '1');\n                        }\n                        if (element && !this.heatMap.rectSelected) {\n                            element.setAttribute('opacity', '0.65');\n                        }\n                    }\n                    this.heatMap.tempRectHoverClass = tempID;\n                }\n            }\n            else {\n                if (this.heatMap.cellSettings.enableCellHighlighting) {\n                    var oldElement = void 0;\n                    if (this.heatMap.tempRectHoverClass) {\n                        oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                    }\n                    if (oldElement && !this.heatMap.rectSelected) {\n                        oldElement.setAttribute('opacity', '1');\n                        this.heatMap.tempRectHoverClass = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To get the value depends to format.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getFormatedText = function (val, getFormat) {\n        var format = getFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = this.heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        var value = '';\n        if (val.toString() !== '') {\n            value = formatValue(isCustom, format, val, this.format);\n        }\n        return value;\n    };\n    /**\n     * To get mouse hovered cell details.\n     * @return {CurrentRect}\n     * @private\n     */\n    Series.prototype.getCurrentRect = function (x, y) {\n        var currentRect;\n        var firstRectDetails = [];\n        firstRectDetails.push(this.heatMap.heatMapSeries.rectPositionCollection[0][0]);\n        var rectX = Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) <\n            this.heatMap.axisCollections[0].axisLabelSize ?\n            Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) :\n            this.heatMap.axisCollections[0].axisLabelSize;\n        var rectY = Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) <\n            this.heatMap.axisCollections[1].axisLabelSize ?\n            Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) :\n            this.heatMap.axisCollections[1].axisLabelSize - 1;\n        rectX = rectX === 0 ? 1 : rectX;\n        currentRect = this.heatMap.heatMapSeries.rectPositionCollection[rectY][rectX - 1];\n        this.hoverXAxisLabel = this.heatMap.axisCollections[0].tooltipLabels[rectX - 1];\n        this.hoverXAxisValue = this.heatMap.axisCollections[0].labelValue[rectX - 1];\n        this.hoverYAxisLabel = this.heatMap.axisCollections[1].tooltipLabels[(this.heatMap.axisCollections[1].tooltipLabels.length - 1) - rectY];\n        this.hoverYAxisValue = this.heatMap.axisCollections[1].labelValue[(this.heatMap.axisCollections[1].labelValue.length - 1) - rectY];\n        return currentRect;\n    };\n    return Series;\n}());\nexport { Series };\n","/**\n * HeatMap tool tip file\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\nimport { TooltipBorder, Font, } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the color property in Heatmap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({}, TooltipBorder)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.tooltipFont, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n *\n * The `Tooltip` module is used to render the tooltip for heatmap series.\n */\nvar Tooltip = /** @class */ (function () {\n    function Tooltip(heatMap) {\n        /* private */\n        this.isFirst = true;\n        /* private */\n        this.isFadeout = false;\n        this.heatMap = heatMap;\n    }\n    /**\n     * Get module name\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'Tooltip';\n    };\n    /**\n     * To show/hide Tooltip.\n     * @private\n     */\n    Tooltip.prototype.showHideTooltip = function (isShow, isFadeout) {\n        var ele = document.getElementById(this.heatMap.element.id + 'Celltooltipcontainer');\n        if (!isShow) {\n            if (ele && ele.style.visibility !== 'hidden') {\n                if (this.tooltipObject && isFadeout && this.heatMap.isRectBoundary) {\n                    this.tooltipObject.fadeOut();\n                }\n                else {\n                    if (this.tooltipObject && this.tooltipObject.element) {\n                        var tooltipElement = this.tooltipObject.element.firstChild;\n                        tooltipElement.setAttribute('opacity', '0');\n                    }\n                }\n                ele.style.visibility = 'hidden';\n            }\n            this.isFadeout = true;\n        }\n        else {\n            ele.style.visibility = 'visible';\n        }\n    };\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.destroy = function (heatMap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    ;\n    /**\n     * To add Tooltip to the rect cell.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltip = function (currentRect, x, y, tempTooltipText) {\n        var offset = null;\n        if (this.heatMap.cellSettings.showLabel && this.heatMap.heatMapSeries.checkLabelXDisplay &&\n            this.heatMap.heatMapSeries.checkLabelYDisplay) {\n            offset = parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2;\n        }\n        this.tooltipObject = new tool({\n            enableAnimation: false,\n            offset: offset,\n            location: { x: x, y: y },\n            availableSize: this.heatMap.availableSize,\n            data: {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                value: currentRect.value,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n            },\n            theme: this.heatMap.theme,\n            content: tempTooltipText,\n            fill: this.heatMap.tooltipSettings.fill,\n            template: this.heatMap.tooltipSettings.template === '' ? null : this.heatMap.tooltipSettings.template,\n            border: {\n                width: this.heatMap.tooltipSettings.border.width,\n                color: this.heatMap.tooltipSettings.border.color\n            },\n            textStyle: {\n                size: this.heatMap.tooltipSettings.textStyle.size,\n                fontWeight: this.heatMap.tooltipSettings.textStyle.fontWeight.toLowerCase(),\n                color: this.heatMap.tooltipSettings.textStyle.color,\n                fontStyle: this.heatMap.tooltipSettings.textStyle.fontStyle.toLowerCase(),\n                fontFamily: this.heatMap.tooltipSettings.textStyle.fontFamily\n            },\n            areaBounds: {\n                height: this.heatMap.initialClipRect.height + this.heatMap.initialClipRect.y,\n                width: this.heatMap.initialClipRect.width, x: this.heatMap.initialClipRect.x\n            },\n        }, '#' + this.heatMap.element.id + 'Celltooltipcontainer');\n    };\n    /**\n     * To create div container for tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltipDiv = function (heatMap) {\n        var position = 'absolute';\n        var top = heatMap.enableCanvasRendering && heatMap.allowSelection ? heatMap.availableSize.height : 0;\n        var element2 = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipcontainer',\n            styles: 'position:' + position + '; z-index: 3;top:-' + top + 'px'\n        });\n        this.heatMap.element.appendChild(createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipparent',\n            styles: 'position:relative'\n        })\n            .appendChild(element2));\n    };\n    /**\n     * To get default tooltip content.\n     * @private\n     */\n    Tooltip.prototype.getTooltipContent = function (currentRect, hetmapSeries) {\n        var value;\n        var content;\n        var heatMap = this.heatMap;\n        var adaptData = this.heatMap.dataSourceSettings;\n        if (heatMap.bubbleSizeWithColor) {\n            var xAxis = heatMap.xAxis.title && heatMap.xAxis.title.text !== '' ? heatMap.xAxis.title.text : 'X-Axis';\n            var yAxis = heatMap.yAxis.title && heatMap.yAxis.title.text !== '' ? heatMap.yAxis.title.text : 'Y-Axis';\n            var value1 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.size : 'Value 1';\n            var value2 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.color : 'Value 2';\n            value = hetmapSeries.getFormatedText(currentRect.value[0].bubbleData, this.heatMap.cellSettings.format);\n            content = [xAxis + ' : ' + hetmapSeries.hoverXAxisLabel + '<br/>'\n                    + yAxis + ' : ' + hetmapSeries.hoverYAxisLabel + '<br/>'\n                    + value1 + ' : ' + value + '<br/>'\n                    + value2 + ' : '\n                    + hetmapSeries.getFormatedText(currentRect.value[1].bubbleData, this.heatMap.cellSettings.format)];\n        }\n        else {\n            value = currentRect.value;\n            content = [hetmapSeries.hoverXAxisLabel + ' | ' + hetmapSeries.hoverYAxisLabel + ' : ' +\n                    hetmapSeries.getFormatedText(value, this.heatMap.cellSettings.format)];\n        }\n        return content;\n    };\n    /**\n     * To render tooltip.\n     * @private\n     */\n    Tooltip.prototype.renderTooltip = function (currentRect) {\n        var _this = this;\n        var hetmapSeries = this.heatMap.heatMapSeries;\n        var tempTooltipText = [''];\n        var showTooltip = this.heatMap.bubbleSizeWithColor ?\n            !isNullOrUndefined(currentRect.value) && !isNullOrUndefined(currentRect.value[0].bubbleData)\n                && currentRect.value[0].bubbleData.toString() !== '' ? true : false\n            : isNullOrUndefined(currentRect.value) || (!isNullOrUndefined(currentRect.value) &&\n                currentRect.value.toString() === '') ? false : true;\n        if (!showTooltip) {\n            this.showHideTooltip(false, false);\n            if (!currentRect.visible) {\n                this.showHideTooltip(false, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.heatMap.tooltipRender)) {\n                // this.tooltipObject.header = '';\n                // this.tooltipObject.content = this.getTemplateText(\n                //     currentRect, this.heatMap.tooltipTemplate, hetmapSeries.hoverXAxisLabel,\n                //     hetmapSeries.hoverYAxisLabel);\n                var content = this.getTooltipContent(currentRect, hetmapSeries);\n                var argData = {\n                    heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n                    cancel: false,\n                    name: 'tooltipRender',\n                    value: currentRect.value,\n                    xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                    yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                    xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                    yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                    content: content\n                };\n                this.heatMap.trigger('tooltipRender', argData, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        tempTooltipText = observedArgs.content;\n                        _this.tooltipCallback(currentRect, tempTooltipText);\n                    }\n                    else {\n                        if (_this.tooltipObject) {\n                            _this.showHideTooltip(false);\n                        }\n                    }\n                });\n            }\n            else {\n                //  this.tooltipObject.header = hetmapSeries.hoverYAxisLabel.toString();\n                tempTooltipText = this.getTooltipContent(currentRect, hetmapSeries);\n                this.tooltipCallback(currentRect, tempTooltipText);\n            }\n        }\n    };\n    /**\n     * To render tooltip.\n     */\n    Tooltip.prototype.tooltipCallback = function (currentRect, tempTooltipText) {\n        if (!this.tooltipObject) {\n            this.createTooltip(currentRect, currentRect.x + (currentRect.width / 2), currentRect.y + (currentRect.height / 2), tempTooltipText);\n        }\n        else {\n            this.tooltipObject.content = tempTooltipText;\n            this.tooltipObject.data = {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                value: currentRect.value,\n            };\n        }\n        this.showHideTooltip(true);\n        this.tooltipObject.enableAnimation = (this.isFirst || this.isFadeout) ? false : true;\n        this.isFirst = (this.isFirst) ? false : this.isFirst;\n        this.isFadeout = (this.isFadeout) ? false : this.isFadeout;\n        this.tooltipObject.location.x = currentRect.x + (currentRect.width / 2);\n        this.tooltipObject.location.y = currentRect.y + (currentRect.height / 2);\n        if (!currentRect.visible) {\n            this.showHideTooltip(false, false);\n        }\n    };\n    return Tooltip;\n}());\nexport { Tooltip };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar TwoDimensional = /** @class */ (function () {\n    function TwoDimensional(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To reconstruct proper two dimensional dataSource depends on min and max values.\n     *  @private\n     */\n    TwoDimensional.prototype.processDataSource = function (dataSource) {\n        // tslint:disable-next-line:no-any\n        var tempCloneData = extend([], dataSource, null, true);\n        this.heatMap.clonedDataSource = [];\n        this.completeDataSource = [];\n        var axis = this.heatMap.axisCollections;\n        var dataLength = axis[0].maxLength + 1;\n        var labelLength = axis[0].axisLabelSize + (axis[0].min > 0 ? axis[0].min : 0);\n        var xLength = dataLength > labelLength ? dataLength : labelLength;\n        var minVal;\n        var maxVal;\n        dataLength = axis[1].maxLength + 1;\n        labelLength = axis[1].axisLabelSize + (axis[1].min > 0 ? axis[1].min : 0);\n        var yLength = dataLength > labelLength ? dataLength : labelLength;\n        // tslint:disable-next-line:no-any \n        var tempVariable;\n        var cloneDataIndex = 0;\n        var minMaxDatasource = [];\n        this.tempSizeArray = [];\n        this.tempColorArray = [];\n        this.heatMap.minColorValue = null;\n        this.heatMap.maxColorValue = null;\n        this.heatMap.dataMax = [];\n        this.heatMap.dataMin = [];\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && xLength < yLength) {\n            xLength = yLength;\n        }\n        for (var z = axis[1].valueType === 'Category' ? axis[1].min : 0; z < (this.heatMap.paletteSettings.colorGradientMode === 'Column' ? xLength : yLength); z++) {\n            var tempIndex = axis[0].valueType === 'Category' ? axis[0].min : 0;\n            this.completeDataSource.push([]);\n            while (tempIndex < xLength) {\n                if (tempIndex >= axis[0].min && tempIndex <= axis[0].max) {\n                    this.processDataArray(tempCloneData, tempIndex, z, cloneDataIndex);\n                }\n                tempIndex++;\n            }\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                tempVariable = extend([], tempCloneData[cloneDataIndex], null, true);\n                for (var i = 0; i < tempVariable.length; i++) {\n                    if (typeof (tempVariable[i]) === 'object' && (tempVariable[i]) !== null || undefined || '') {\n                        tempVariable[i] = tempVariable[i][0];\n                    }\n                }\n            }\n            else {\n                tempVariable = extend([], this.completeDataSource[cloneDataIndex], null, true);\n            }\n            var minMaxVal = this.getMinMaxValue(minVal, maxVal, tempVariable);\n            if ((this.heatMap.paletteSettings.colorGradientMode === 'Column' ||\n                this.heatMap.paletteSettings.colorGradientMode === 'Row') && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataMax[z] = minMaxVal[1];\n                this.heatMap.dataMin[z] = minMaxVal[0];\n            }\n            minVal = minMaxVal[0];\n            maxVal = minMaxVal[1];\n            if (this.heatMap.xAxis.isInversed) {\n                this.completeDataSource[cloneDataIndex] = this.completeDataSource[cloneDataIndex].reverse();\n            }\n            if (z >= this.heatMap.axisCollections[1].min && z <= this.heatMap.axisCollections[1].max) {\n                minMaxDatasource.push(this.completeDataSource[cloneDataIndex]);\n            }\n            cloneDataIndex++;\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Row' && !this.heatMap.yAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.xAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (!this.heatMap.yAxis.isInversed) {\n            this.completeDataSource.reverse();\n            minMaxDatasource.reverse();\n        }\n        this.heatMap.clonedDataSource = minMaxDatasource;\n        this.heatMap.dataSourceMinValue = isNullOrUndefined(minVal) ? 0 : parseFloat(minVal.toString());\n        this.heatMap.dataSourceMaxValue = isNullOrUndefined(maxVal) ? 0 : parseFloat(maxVal.toString());\n        this.heatMap.isColorValueExist = isNullOrUndefined(this.heatMap.minColorValue) ? false : true;\n        this.heatMap.minColorValue = isNullOrUndefined(this.heatMap.minColorValue) ?\n            this.heatMap.dataSourceMinValue : parseFloat(this.heatMap.minColorValue.toString());\n        this.heatMap.maxColorValue = isNullOrUndefined(this.heatMap.maxColorValue) ?\n            this.heatMap.dataSourceMaxValue : parseFloat(this.heatMap.maxColorValue.toString());\n    };\n    /**\n     * To process and create a proper data array.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.processDataArray = function (tempCloneData, tempIndex, z, cloneDataIndex) {\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (tempCloneData[tempIndex] && !isNullOrUndefined(tempCloneData[tempIndex][z])\n                && typeof (tempCloneData[tempIndex][z]) === 'object') {\n                // tslint:disable-next-line:no-any \n                var internalArray = tempCloneData[tempIndex][z];\n                for (var tempx = 0; tempx < internalArray.length; tempx++) {\n                    if (isNullOrUndefined(internalArray[tempx]) || isNaN(internalArray[tempx])) {\n                        internalArray[tempx] = '';\n                    }\n                    if (tempx === 0) {\n                        this.tempSizeArray.push(internalArray[tempx]);\n                    }\n                    else if (tempx === 1) {\n                        this.tempColorArray.push(internalArray[tempx]);\n                        break;\n                    }\n                }\n                this.completeDataSource[cloneDataIndex].push(internalArray);\n            }\n            else {\n                if (!isNullOrUndefined(tempCloneData[tempIndex]) && (tempCloneData[tempIndex][z] ||\n                    (tempCloneData[tempIndex][z] === 0 &&\n                        tempCloneData[tempIndex][z].toString() !== ''))) {\n                    this.completeDataSource[cloneDataIndex].push([tempCloneData[tempIndex][z]]);\n                    this.tempSizeArray.push(tempCloneData[tempIndex][z]);\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push('');\n                }\n            }\n        }\n        else {\n            if (tempCloneData[tempIndex] && (tempCloneData[tempIndex][z] ||\n                (tempCloneData[tempIndex][z] === 0 &&\n                    tempCloneData[tempIndex][z].toString() !== ''))) {\n                if (typeof (tempCloneData[tempIndex][z]) === 'object') {\n                    if (tempCloneData[tempIndex][z].length > 0 && !isNullOrUndefined(tempCloneData[tempIndex][z][0])) {\n                        this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z][0]);\n                    }\n                    else {\n                        this.completeDataSource[cloneDataIndex].push('');\n                    }\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z]);\n                }\n            }\n            else {\n                this.completeDataSource[cloneDataIndex].push('');\n            }\n        }\n    };\n    /**\n     * To get minimum and maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinMaxValue = function (minVal, maxVal, tempVariable) {\n        var minMaxValue = [];\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.tempSizeArray = tempVariable;\n            }\n            minMaxValue.push(this.getMinValue(minVal, this.tempSizeArray));\n            minMaxValue.push(this.getMaxValue(maxVal, this.tempSizeArray));\n            this.heatMap.minColorValue = this.getMinValue(this.heatMap.minColorValue, this.tempColorArray);\n            this.heatMap.maxColorValue = this.getMaxValue(this.heatMap.maxColorValue, this.tempColorArray);\n        }\n        else {\n            minMaxValue.push(this.getMinValue(minVal, tempVariable));\n            minMaxValue.push(this.getMaxValue(maxVal, tempVariable));\n        }\n        return minMaxValue;\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinValue = function (minVal, tempVariable) {\n        if (isNullOrUndefined(minVal)) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if (this.performSort(tempVariable) < minVal) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            minVal = this.performSort(tempVariable);\n        }\n        return !isNullOrUndefined(minVal) ? parseFloat(minVal.toString()) : minVal;\n    };\n    /**\n     * To get maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMaxValue = function (maxVal, tempVariable) {\n        if (isNullOrUndefined(maxVal) && tempVariable.length > 0) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if (Math.max.apply(Math, tempVariable) > maxVal) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        return !isNullOrUndefined(maxVal) ? parseFloat(maxVal.toString()) : maxVal;\n    };\n    /**\n     * To perform sort operation.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.performSort = function (tempVariable) {\n        return tempVariable.sort(function (a, b) { return a - b; }).filter(this.checkmin)[0];\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.checkmin = function (val) {\n        return !isNullOrUndefined(val) && val.toString() !== '';\n    };\n    return TwoDimensional;\n}());\nexport { TwoDimensional };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DrawSvgCanvas, TextOption, TextBasic, PathOption, Line, LineOption, GradientPointer, textTrim } from '../utils/helper';\nimport { Size, measureText, getTitle, getElement, CanvasTooltip, formatValue, LegendRange, ToggleVisibility, sum } from '../utils/helper';\nimport { Font, Title } from '../model/base';\nimport { Rect, RectOption, Gradient, GradientColor, showTooltip, stringToNumber, CurrentLegendRect, removeElement } from '../utils/helper';\nimport { Theme } from '../model/theme';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\n/**\n * Configures the Legend\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.titleFont }, Title)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Property('Right')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showGradientPointer\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"enableSmartLegend\", void 0);\n    __decorate([\n        Property('All')\n    ], LegendSettings.prototype, \"labelDisplayType\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n *\n * The `Legend` module is used to render legend for the heatmap.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(heatMap) {\n        this.maxLegendLabelSize = new Size(0, 0);\n        this.gradientScaleSize = 10;\n        this.segmentCollections = [];\n        this.segmentCollectionsLabels = [];\n        this.textWrapCollections = [];\n        this.labelCollections = [];\n        this.labelCollection = [];\n        this.legendSize = 10;\n        this.previousOptions = new GradientPointer(0, 0, 0, 0, 0, 0);\n        this.listPerPage = 0;\n        this.numberOfPages = 1;\n        this.listWidth = 0;\n        this.fillRect = new Rect(0, 0, 0, 0);\n        this.legendRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 1;\n        this.lastList = [];\n        this.navigationCollections = [];\n        this.pagingRect = new Rect(0, 0, 0, 0);\n        this.listInterval = 10; // padding between two lists\n        this.legendLabelTooltip = [];\n        this.legendTitleTooltip = [];\n        this.labelXCollections = [];\n        this.labelYCollections = [];\n        this.legendXCollections = [];\n        this.legendYCollections = [];\n        /** @private */\n        this.legendRectPositionCollection = [];\n        /** @private */\n        this.legendRange = [];\n        /** @private */\n        this.legendTextRange = [];\n        /** @private */\n        this.visibilityCollections = [];\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    ;\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (heatMap) {\n        /**\n         * destory code\n         */\n    };\n    ;\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendItems = function () {\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var tempBorder = { color: 'transparent', width: 0, };\n        this.legend = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_Legend' });\n        var rectItems = new RectOption(heatMap.element.id + '_LegendBound', 'none', tempBorder, 1, this.legendGroup);\n        this.drawSvgCanvas.drawRectangle(rectItems, this.legend);\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n        var fill;\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            var colorCollection = (!heatMap.legendSettings.enableSmartLegend) ?\n                heatMap.colorCollection : heatMap.legendColorCollection;\n            this.legendRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendRange;\n            this.legendTextRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendTextRange;\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            for (var i = 0; i < colorCollection.length; i++) {\n                var visibility = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                heatMap.toggleValue.push(new ToggleVisibility(visibility, colorCollection[i].value, colorCollection[i].startValue, colorCollection[i].endValue));\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend === true)) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                if (heatMap.enableCanvasRendering) {\n                    var grd = void 0;\n                    var ctx_1 = heatMap.canvasRenderer.ctx;\n                    if (heatMap.horizontalGradient) {\n                        grd = ctx_1.createLinearGradient(legendBound.x, 0, legendBound.x + legendBound.width, 0);\n                    }\n                    else {\n                        grd = ctx_1.createLinearGradient(0, legendBound.y, 0, legendBound.y + legendBound.height);\n                    }\n                    if (heatMap.legendSettings.title.text) {\n                        ctx_1.clip();\n                    }\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var value = (((this.heatMap.isColorRange ? heatMap.legendColorCollection[i].startValue :\n                            heatMap.legendColorCollection[i].value) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue));\n                        value = isNaN(value) ? 0 : value;\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateCanvasColorRange(i, grd);\n                        }\n                        else {\n                            grd.addColorStop(value, heatMap.legendColorCollection[i].color);\n                        }\n                    }\n                    ctx_1.fillStyle = grd;\n                    fill = grd.toString();\n                }\n                else {\n                    var gradientOptions = void 0;\n                    var gradientColor = void 0;\n                    var gradientColor1 = void 0;\n                    var cgradientColors = [];\n                    var gradientColor2 = void 0;\n                    var gradientColor3 = void 0;\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateColorRange(i, cgradientColors);\n                        }\n                        else {\n                            var gradientPercentage = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue)) * 100;\n                            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n                            gradientColor = new GradientColor(heatMap.legendColorCollection[i].color, gradientPercentage + '%');\n                            cgradientColors.push(gradientColor);\n                        }\n                        if (this.legendMaxValue === this.legendMinValue) {\n                            break;\n                        }\n                    }\n                    if (heatMap.horizontalGradient) {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '100%', '0%', '0%');\n                    }\n                    else {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '0%', '0%', '100%');\n                    }\n                    var linearGradient = heatMap.renderer.drawGradient('linearGradient', gradientOptions, cgradientColors);\n                    this.legend.appendChild(linearGradient);\n                    fill = 'url(#' + heatMap.element.id + '_lineargradient)';\n                }\n                var rectItem = new RectOption(heatMap.element.id + '_Gradient_Legend', fill, tempBorder, 1, rectItemsSvg);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                this.renderElements(rectItemsSvg);\n            }\n            else {\n                this.renderSmartLegend();\n                this.renderTitle(rectItemsSvg);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                heatMap.svgObject.appendChild(this.legend);\n            }\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.legendScale = heatMap.renderer.createGroup({ id: heatMap.element.id + 'Heatmap_GradientScale' });\n            var listRect = new RectOption(heatMap.element.id + '_Gradient_Scale', 'none', tempBorder, 1, this.legendRectScale);\n            this.drawSvgCanvas.drawRectangle(listRect, this.legendScale);\n            this.renderTitle(rectItemsSvg);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(this.legendScale);\n            }\n            this.translategroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_translate' });\n            this.calculateListPerPage(rectItemsSvg);\n            if (this.numberOfPages > 1) {\n                this.paginggroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_navigation' });\n            }\n            this.renderListLegendMode(rectItemsSvg, true);\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n        }\n    };\n    Legend.prototype.renderElements = function (rectItemsSvg) {\n        this.renderTitle(rectItemsSvg);\n        this.renderColorAxisGrid(rectItemsSvg);\n    };\n    Legend.prototype.calculateCanvasColorRange = function (i, grd) {\n        var heatMap = this.heatMap;\n        var value = ((((heatMap.legendColorCollection[i].startValue < heatMap.dataSourceMinValue &&\n            heatMap.legendColorCollection[i].endValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : heatMap.legendColorCollection[i].startValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue));\n        value = isNaN(value) ? 0 : value;\n        var value1 = ((heatMap.legendColorCollection[i].endValue >= this.heatMap.dataSourceMaxValue ?\n            this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i].endValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue);\n        if (this.heatMap.legendColorCollection[0].startValue !== this.heatMap.dataSourceMinValue && i === 0 &&\n            this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n            value = (this.heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value / 2, this.heatMap.paletteSettings.fillColor.minColor);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n        grd.addColorStop(value, heatMap.legendColorCollection[i].minColor);\n        grd.addColorStop(value1, heatMap.legendColorCollection[i].maxColor);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue) &&\n            this.heatMap.legendColorCollection[i].endValue < this.heatMap.dataSourceMaxValue) {\n            value = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.minColor);\n            value = ((i === this.heatMap.legendColorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n    };\n    Legend.prototype.calculateColorRange = function (i, cgradientColors) {\n        if (cgradientColors === void 0) { cgradientColors = []; }\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var gradientPercentage;\n        var gradientOptions;\n        var gradientColor;\n        var gradientColor1;\n        var gradientColor2;\n        var gradientColor3;\n        if (this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue && i === 0) {\n            gradientPercentage = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.minColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n            gradientPercentage = (heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.maxColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n        }\n        gradientPercentage = ((heatMap.legendColorCollection[i].startValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue)) * 100;\n        gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n        gradientColor = new GradientColor(heatMap.legendColorCollection[i].minColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor);\n        gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue) * 100;\n        gradientColor1 = new GradientColor(heatMap.legendColorCollection[i].maxColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor1);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue)) {\n            gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor2 = new GradientColor(this.heatMap.paletteSettings.fillColor.minColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor2);\n            gradientPercentage = ((i === (this.heatMap.legendColorCollection.length - 1) ?\n                this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor3 = new GradientColor(this.heatMap.paletteSettings.fillColor.maxColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor3);\n        }\n    };\n    Legend.prototype.renderTitle = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.legendSettings.title.text) {\n            var title = heatMap.legendSettings.title;\n            var titleSize = measureText(title.text, title.textStyle);\n            var padding = !heatMap.legendSettings.showLabel ? heatMap.horizontalGradient ? 10 : 6 : this.labelPadding;\n            var y = void 0;\n            var anchor = 'start';\n            var maxWidth = void 0;\n            var dominantBaseline = void 0;\n            var text = title.text;\n            var options = void 0;\n            var yValue = void 0;\n            if (heatMap.legendSettings.title.textStyle.textOverflow === 'Trim') {\n                maxWidth = this.width - 10;\n                text = textTrim(maxWidth, text, title.textStyle);\n            }\n            if (!heatMap.horizontalGradient) {\n                padding = -(padding + titleSize.height / 4);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, rect.y - titleSize.height, maxWidth, titleSize.height)));\n                }\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x, rect.y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            else {\n                y = rect.y + (heatMap.legendSettings.position === 'Top' ? 0 :\n                    -(10 + titleSize.height + padding));\n                padding = heatMap.legendSettings.position === 'Top' ? -(padding + titleSize.height / 4) :\n                    (padding + (3 * titleSize.height / 4));\n                yValue = heatMap.legendSettings.position === 'Bottom' ? y : y - titleSize.height;\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, yValue, maxWidth, titleSize.height)));\n                }\n                titleSize.width = rect.width < titleSize.width ? rect.width : titleSize.width;\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x + (rect.width / 2) - (titleSize.width / 2), y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            this.drawSvgCanvas.createText(options, this.legend, text);\n        }\n    };\n    Legend.prototype.renderSmartLegend = function () {\n        var heatMap = this.heatMap;\n        var colorCollection = heatMap.colorCollection;\n        var smartLegendRect;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        var legendBound = this.legendRectScale;\n        var legendX;\n        var legendY;\n        var legendWidth;\n        var legendHeight;\n        var width = legendBound.width / colorCollection.length;\n        var height = legendBound.height / colorCollection.length;\n        this.legendRectPositionCollection = [];\n        this.legendRange = [];\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            var rectPosition = new CurrentLegendRect(0, 0, 0, 0, '', '');\n            if (heatMap.horizontalGradient) {\n                legendX = legendBound.x + (i * width);\n                legendY = legendBound.y;\n                legendWidth = width;\n                legendHeight = legendBound.height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendX + width : legendX);\n            }\n            else {\n                legendX = legendBound.x;\n                legendY = legendBound.y + (i * height);\n                legendWidth = legendBound.width;\n                legendHeight = height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendY + height : legendY);\n            }\n            smartLegendRect = new Rect(legendX, legendY, legendWidth, legendHeight);\n            var legendRange = new LegendRange(0, 0, 0, 0, 0, true, 0);\n            legendRange.x = legendX;\n            legendRange.y = legendY;\n            legendRange.width = legendWidth;\n            legendRange.height = legendHeight;\n            legendRange.value = this.heatMap.isColorRange ?\n                heatMap.legendColorCollection[i].endValue : heatMap.legendColorCollection[i].value;\n            legendRange.currentPage = this.currentPage;\n            if (colorCollection.length !== heatMap.legendColorCollection.length && i === heatMap.legendColorCollection.length - 1) {\n                heatMap.horizontalGradient ? legendRange.width = 0 : legendRange.height = 0;\n                this.visibilityCollections[i] = this.visibilityCollections[i - 1];\n            }\n            legendRange.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n            this.legendRange.push(legendRange);\n            if (!heatMap.legendColorCollection[i].isHidden) {\n                var color = heatMap.legendOnLoad ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : this.legendRange[i].visible ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : '#D3D3D3';\n                var rectItem = new RectOption(heatMap.element.id + '_Smart_Legend' + i, color, tempBorder, 1, smartLegendRect);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                rectPosition.x = legendX;\n                rectPosition.y = legendY;\n                rectPosition.width = legendWidth;\n                rectPosition.height = legendHeight;\n                rectPosition.label = this.labelCollections[i];\n                rectPosition.id = heatMap.element.id + '_Smart_Legend' + i;\n                this.legendRectPositionCollection.push(rectPosition);\n                var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, this.textWrapCollections[i]);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    var elementSize = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                    this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(rectPosition.x, rectPosition.y, elementSize.width, elementSize.height)));\n                }\n            }\n        }\n    };\n    Legend.prototype.colorRangeLegendPosition = function (i, labelX) {\n        if (this.segmentCollections.length !== this.segmentCollectionsLabels.length) {\n            for (var k = 0; k < this.segmentCollections.length; k++) {\n                if (this.segmentCollectionsLabels[i] === this.segmentCollections[k]) {\n                    labelX = this.segmentCollectionsLabels[i] + (((k === this.segmentCollections.length - 1 ?\n                        (this.heatMap.horizontalGradient ? this.width : this.height) :\n                        this.segmentCollections[k + 1]) - this.segmentCollections[k]) / 2);\n                    break;\n                }\n            }\n        }\n        else {\n            labelX = this.segmentCollectionsLabels[i] + (((i === this.segmentCollectionsLabels.length - 1 ?\n                (this.heatMap.horizontalGradient ? this.width : this.height) :\n                this.segmentCollectionsLabels[i + 1]) - this.segmentCollectionsLabels[i]) / 2);\n        }\n        this.labelPosition = labelX;\n    };\n    Legend.prototype.renderLegendLabel = function (rect) {\n        var heatMap = this.heatMap;\n        this.legendTextRange = [];\n        if (heatMap.legendSettings.showLabel && (heatMap.paletteSettings.type === 'Gradient' ||\n            (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType !== 'None'))) {\n            var anchor = 'start';\n            var dominantBaseline = void 0;\n            var legendLabel = void 0;\n            var textWrapWidth = 0;\n            var text = void 0;\n            this.legendLabelTooltip = [];\n            var elementSize = void 0;\n            var isColorRange = heatMap.isColorRange;\n            var colorCollection = heatMap.legendColorCollection;\n            if (heatMap.enableCanvasRendering) {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.rect(this.legendGroup.x, this.legendGroup.y, this.legendGroup.width, this.legendGroup.height);\n                ctx.save();\n                ctx.clip();\n                ctx.restore();\n            }\n            else {\n                legendLabel = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_LegendLabel' });\n            }\n            var labelX = void 0;\n            var labelY = void 0;\n            for (var i = 0; i < colorCollection.length; i++) {\n                var value = ((colorCollection[i].value - (Math.round(this.legendMinValue * 100) / 100)) /\n                    ((Math.round(this.legendMaxValue * 100) / 100) - (Math.round(this.legendMinValue * 100) / 100))) * 100;\n                if (heatMap.horizontalGradient) {\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelX);\n                        labelX = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelX = this.segmentCollections[i] + ((rect.width / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelX = this.segmentCollections[i];\n                    }\n                    labelY = rect.y + rect.height + this.labelPadding;\n                    anchor = (((Math.round(value * 100) / 100) === 0 && !isColorRange) || (heatMap.paletteSettings.type === 'Fixed' &&\n                        i === 0)) ? 'start' : (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient' &&\n                        !isColorRange) || (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                        heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType === 'Edge') ? 'end' : 'middle';\n                    dominantBaseline = 'hanging';\n                }\n                else {\n                    labelX = rect.x + rect.width + this.labelPadding;\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelY);\n                        labelY = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelY = this.segmentCollections[i] + ((rect.height / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelY = this.segmentCollections[i];\n                    }\n                    dominantBaseline = (((Math.round(value * 100) / 100) === 0 && !isColorRange) || (i === 0 &&\n                        heatMap.paletteSettings.type === 'Fixed')) ? 'hanging' : (((Math.round(value * 100) / 100) === 100 &&\n                        !isColorRange && heatMap.paletteSettings.type === 'Gradient') ||\n                        (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                            heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                        heatMap.paletteSettings.type === 'Fixed') ? 'auto' : 'middle';\n                }\n                textWrapWidth = heatMap.horizontalGradient ? this.textWrapCollections[i] : this.width - (this.legendRectScale.width +\n                    this.labelPadding + this.legendRectPadding);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                elementSize = measureText(text[0], heatMap.legendSettings.textStyle);\n                if (heatMap.paletteSettings.type === 'Fixed') {\n                    var rectY = dominantBaseline === 'hanging' ? labelY : dominantBaseline === 'middle' ?\n                        labelY - elementSize.height / 2 : labelY - elementSize.height;\n                    var rectX = anchor === 'end' ? labelX - elementSize.width : anchor === 'middle' ?\n                        labelX - elementSize.width / 2 : labelX;\n                    var textPosition = new LegendRange(rectX, rectY, elementSize.width, elementSize.height, colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n                if (this.labelCollections[i] !== '') {\n                    if (text.length !== 0 && text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, elementSize.width, elementSize.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, anchor, text, 0, 'translate(0,0)', dominantBaseline);\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill :\n                        (heatMap.paletteSettings.type === 'Fixed' && !this.legendRange[i].visible) ? '#D3D3D3' : options.fill;\n                    if (text.length > 1) {\n                        this.drawSvgCanvas.createWrapText(options, heatMap.legendSettings.textStyle, legendLabel);\n                    }\n                    else {\n                        this.drawSvgCanvas.createText(options, legendLabel, text[0]);\n                    }\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        if (dominantBaseline === 'middle') {\n                            legendLabel.lastChild.setAttribute('dy', '0.6ex');\n                        }\n                        else if (dominantBaseline === 'hanging') {\n                            legendLabel.lastChild.setAttribute('dy', '1.5ex');\n                        }\n                    }\n                }\n                if (this.legendMaxValue === this.legendMinValue && heatMap.paletteSettings.type === 'Gradient') {\n                    break;\n                }\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n                this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n                this.legend.appendChild(legendLabel);\n                var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_clipPath' });\n                var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n                clippath.appendChild(clipRect);\n                heatMap.svgObject.appendChild(clippath);\n                this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderGradientPointer = function (e, pageX, pageY) {\n        var heatMap = this.heatMap;\n        var currentRect = heatMap.heatMapSeries.getCurrentRect(pageX, pageY);\n        var cellValue = heatMap.bubbleSizeWithColor ? currentRect.value[0].bubbleData.toString() !== '' ?\n            !this.heatMap.isColorValueExist ? currentRect.value[0].bubbleData.toString() :\n                currentRect.value[1].bubbleData.toString() : '' : currentRect.value.toString();\n        var rect = this.legendRectScale;\n        var legendPart;\n        var direction;\n        var options;\n        var legendPath;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        var pathX3;\n        var pathY3;\n        if (cellValue.toString() !== '') {\n            if (!heatMap.horizontalGradient) {\n                legendPart = rect.height / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x - 1;\n                pathY1 = rect.y + legendPath;\n                pathX2 = pathX3 = rect.x - 8;\n                pathY2 = rect.y - 5 + legendPath;\n                pathY3 = rect.y + 5 + legendPath;\n            }\n            else {\n                legendPart = rect.width / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x + legendPath;\n                pathY1 = rect.y + rect.height;\n                pathX2 = rect.x - 5 + legendPath;\n                pathY2 = pathY3 = rect.y + rect.height + 8;\n                pathX3 = rect.x + 5 + legendPath;\n            }\n            direction = 'M' + ' ' + pathX1 + ' ' + pathY1 + ' ' +\n                'L' + ' ' + pathX2 + ' ' + pathY2 + ' ' + 'L' + ' ' + pathX3 + ' ' + pathY3 + ' ' + 'Z';\n            options = new PathOption(heatMap.element.id + '_Gradient_Pointer', 'gray', 0.01, '#A0A0A0', 1, '0,0', direction);\n            if (!heatMap.enableCanvasRendering) {\n                this.gradientPointer = heatMap.renderer.drawPath(options);\n                this.gradientPointer.style.visibility = 'visible';\n                this.legend.appendChild(this.gradientPointer);\n            }\n            else {\n                this.removeGradientPointer();\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(options, canvasTranslate);\n                this.previousOptions.pathX1 = pathX1;\n                this.previousOptions.pathY1 = pathY1;\n                this.previousOptions.pathX2 = pathX2;\n                this.previousOptions.pathY2 = pathY2;\n                this.previousOptions.pathX3 = pathX3;\n                this.previousOptions.pathY3 = pathY3;\n            }\n        }\n        else {\n            this.removeGradientPointer();\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.removeGradientPointer = function () {\n        var heatMap = this.heatMap;\n        if (this.gradientPointer && !heatMap.enableCanvasRendering) {\n            this.gradientPointer.style.visibility = 'hidden';\n        }\n        else if (heatMap.enableCanvasRendering) {\n            if (Object.keys(this.previousOptions).length !== 0) {\n                if (heatMap.horizontalGradient) {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY1;\n                    this.fillRect.width = this.previousOptions.pathX3 - this.previousOptions.pathX2 + 2;\n                    this.fillRect.height = this.previousOptions.pathY2 + 1 - this.previousOptions.pathY1;\n                }\n                else {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY2 - 1;\n                    this.fillRect.width = this.previousOptions.pathX1 - this.previousOptions.pathX2 + 1;\n                    this.fillRect.height = this.previousOptions.pathY3 - this.previousOptions.pathY2 + 2;\n                }\n            }\n            heatMap.canvasRenderer.ctx.fillStyle = heatMap.themeStyle.background;\n            heatMap.canvasRenderer.ctx.fillRect(this.fillRect.x, this.fillRect.y, this.fillRect.width, this.fillRect.height);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        this.labelCollection = [];\n        this.labelCollections = [];\n        var colorCollection = heatMap.legendColorCollection;\n        if (legendSettings.position !== 'Bottom' && legendSettings.position !== 'Top' &&\n            legendSettings.position !== 'Right' && legendSettings.position !== 'Left') {\n            legendSettings.position = 'Right';\n        }\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        heatMap.horizontalGradient = legendSettings.position === 'Bottom' || legendSettings.position === 'Top';\n        this.legendRectPadding = heatMap.horizontalGradient ? heatMap.legendSettings.title.text ?\n            titleSize.height + 16 : 16 : 10; // padding between rect and legend\n        this.labelPadding = legendSettings.showLabel ? this.heatMap.horizontalGradient ? 10 : 6 : 0; // padding between list and label\n        this.legendHeight = legendSettings.height;\n        this.legendWidth = legendSettings.width;\n        var format = heatMap.legendSettings.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatMap.intl.getNumberFormat({ format: isCustom ? '' : format });\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].label ? colorCollection[i].label : this.heatMap.isColorRange ?\n                    colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() : formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender' };\n                this.labelCollection.push(label);\n                this.heatMap.trigger('legendRender', legendEventArg);\n                if (heatMap.legendRender) {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        if (!legendEventArg.cancel) {\n                            this.labelCollections.push(legendEventArg.text);\n                        }\n                        else {\n                            this.labelCollections.push('');\n                        }\n                    }\n                }\n                else {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].isHidden ? '' : colorCollection[i].label ? colorCollection[i].label :\n                    this.heatMap.isColorRange ? colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() :\n                        formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender', };\n                if (!colorCollection[i].isHidden) {\n                    this.heatMap.trigger('legendRender', legendEventArg);\n                }\n                if (heatMap.legendRender) {\n                    if (!legendEventArg.cancel) {\n                        if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                            this.labelCollections.push('');\n                        }\n                        else {\n                            if (!legendEventArg.cancel) {\n                                this.labelCollections.push(legendEventArg.text);\n                            }\n                            else {\n                                this.labelCollections.push('');\n                            }\n                        }\n                    }\n                    else {\n                        this.labelCollections.push('');\n                    }\n                }\n                else {\n                    if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend)) {\n            this.maxLegendLabelSize = this.getMaxLabelSize();\n            if (heatMap.horizontalGradient && legendSettings.height === '') {\n                this.legendHeight = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            else if (!heatMap.horizontalGradient && legendSettings.width === '' && (legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.width).toString();\n            }\n            this.calculateTitleBounds();\n        }\n        else {\n            this.calculateListLegendBounds(rect);\n        }\n        this.legendHeight = this.legendHeight ? this.legendHeight : heatMap.horizontalGradient ? '50' : '100%';\n        this.legendWidth = this.legendWidth ? this.legendWidth : heatMap.horizontalGradient ?\n            '100%' : heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ? '70' : '50';\n        this.height = stringToNumber(this.legendHeight, rect.height);\n        this.width = stringToNumber(this.legendWidth, rect.width);\n        if (heatMap.horizontalGradient) {\n            this.height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.height < 50 ? 50 : this.height : this.height;\n            if (legendSettings.position === 'Top') {\n                rect.y += this.height;\n            }\n            rect.height -= this.height;\n        }\n        else {\n            this.width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.width < 50 ? 50 : this.width : this.width;\n            if (legendSettings.position === 'Left') {\n                rect.x += this.width;\n            }\n            rect.width -= this.width;\n        }\n    };\n    Legend.prototype.calculateTitleBounds = function () {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.legendSettings.title.text) {\n            if ((heatMap.legendSettings.position === 'Top' || heatMap.legendSettings.position === 'Bottom') &&\n                heatMap.legendSettings.height === '') {\n                this.legendHeight = (((2 * this.legendRectPadding) - titleSize.height) +\n                    this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            if (heatMap.legendSettings.width === '' && (heatMap.legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                if (heatMap.legendSettings.position === 'Right') {\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) +\n                        this.legendSize + this.maxLegendLabelSize.width).toString();\n                }\n                else if (heatMap.legendSettings.position === 'Left') {\n                    titleSize.width = titleSize.width > this.maxLegendLabelSize.width ? titleSize.width : this.maxLegendLabelSize.width;\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) + this.legendSize).toString();\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateListLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        this.listWidth = 0;\n        this.listHeight = 0;\n        this.currentPage = 1;\n        var padding = 10; // padding of paging elements\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var height = (titleSize.height + 50).toString();\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < heatMap.colorCollection.length; i++) {\n                var size = 0;\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                var perListWidth = this.legendSize + this.labelPadding + size + this.listInterval;\n                this.listWidth += perListWidth;\n            }\n            this.listWidth += this.listInterval + padding;\n            if (this.legendWidth === '') {\n                this.legendWidth = this.listWidth > rect.width ? rect.width.toString() : this.listWidth.toString();\n            }\n            if (this.legendHeight === '') {\n                this.numberOfRows = Math.ceil(this.listWidth / stringToNumber(this.legendWidth, rect.width));\n                this.numberOfRows = this.numberOfRows > 3 ? 3 : this.numberOfRows;\n                this.legendHeight = (this.listWidth > rect.width || this.listWidth > stringToNumber(this.legendWidth, rect.width)) &&\n                    this.numberOfRows > 3 ? (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding +\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) + padding).toString() :\n                    (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding).toString();\n            }\n        }\n        else {\n            this.listHeight = ((this.legendSize + this.listInterval) * heatMap.colorCollection.length)\n                + this.listInterval + (heatMap.legendSettings.title.text ? titleSize.height : 0);\n            if (this.legendHeight === '') {\n                this.legendHeight = this.listHeight > rect.height ? rect.height.toString() : this.listHeight.toString();\n            }\n            if (this.legendWidth === '' && heatMap.legendSettings.textStyle.textOverflow !== 'Trim') {\n                this.maxLegendLabelSize = this.getMaxLabelSize();\n                this.maxLegendLabelSize.width = titleSize.width > this.maxLegendLabelSize.width ?\n                    titleSize.width : this.maxLegendLabelSize.width;\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.labelPadding +\n                    this.maxLegendLabelSize.width).toString();\n            }\n        }\n        if (stringToNumber(this.legendHeight, rect.height) < 50) {\n            this.legendHeight = height;\n        }\n        if (stringToNumber(this.legendWidth, rect.width) < 70) {\n            this.legendWidth = '70';\n        }\n    };\n    Legend.prototype.getMaxLabelSize = function () {\n        var heatMap = this.heatMap;\n        this.maxLegendLabelSize = new Size(0, 0);\n        if (!heatMap.legendSettings.showLabel || (heatMap.horizontalGradient && heatMap.paletteSettings.type === 'Fixed' &&\n            !heatMap.legendSettings.enableSmartLegend) || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.labelDisplayType === 'None')) {\n            return this.maxLegendLabelSize;\n        }\n        else {\n            var labelSize = this.maxLegendLabelSize;\n            for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                var size = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n            return labelSize;\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendSize = function (rect, legendTop) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var left;\n        var top;\n        var padding = 10; // inner padding for axis title and axil labels\n        var alignment = legendSettings.alignment;\n        var width;\n        var height = stringToNumber(this.legendHeight, rect.height);\n        if (!heatMap.legendSettings.title.text) {\n            width = stringToNumber(this.legendWidth, rect.width);\n        }\n        else {\n            width = this.width;\n        }\n        var axis = heatMap.axisCollections;\n        var axisTitlePadding = 0;\n        if (heatMap.horizontalGradient) {\n            width = width > rect.width ? rect.width : width;\n            height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                height > 50 ? height : 50 : this.height;\n            left = alignment === 'Near' ? rect.x : alignment === 'Far' ? rect.x + rect.width - width :\n                rect.x + (rect.width / 2) - (width / 2);\n            if (heatMap.xAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.xAxis.title.text, heatMap.xAxis.textStyle).height + padding;\n            }\n            var axisHeight = axis[0].opposedPosition ? 0 : sum(axis[0].xAxisMultiLabelHeight) + axis[0].maxLabelSize.height +\n                axisTitlePadding + padding;\n            top = legendSettings.position === 'Top' ? heatMap.titleSettings.text ? legendTop :\n                heatMap.margin.top : rect.y + rect.height + axisHeight;\n        }\n        else {\n            height = height > rect.height ? rect.height : height;\n            width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                width > 50 ? width : 50 : width;\n            top = alignment === 'Near' ? rect.y : alignment === 'Far' ? rect.y + rect.height - height :\n                rect.y + (rect.height / 2) - (height / 2);\n            if (heatMap.yAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.yAxis.title.text, heatMap.yAxis.textStyle).height + padding;\n            }\n            var axisWidth = axis[1].opposedPosition ? sum(axis[1].yAxisMultiLabelHeight) +\n                axis[1].maxLabelSize.width + axisTitlePadding + 2 * padding : 0;\n            left = legendSettings.position === 'Right' ? rect.x + rect.width + axisWidth : heatMap.margin.left;\n        }\n        this.legendGroup = new Rect(left, top, width, height);\n        this.calculateGradientScale(this.legendGroup);\n    };\n    // calculating number of lists per page\n    Legend.prototype.measureListLegendBound = function (rect) {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var padding = 15; // padding of paging element\n        this.numberOfPages = 1;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.horizontalGradient) {\n            if (this.listWidth > this.width) {\n                this.numberOfRows = Math.ceil(this.listWidth / this.width);\n                this.listHeight = ((this.legendSize + this.listInterval) * this.numberOfRows);\n                this.listPerPage = this.numberOfRows <= 3 ? this.numberOfRows : Math.ceil((this.height - padding -\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) -\n                    this.legendRectPadding) / (this.legendSize + this.listInterval));\n                this.numberOfPages = Math.ceil(this.numberOfRows / this.listPerPage);\n            }\n            else {\n                this.listPerPage = 1;\n            }\n        }\n        else {\n            if (this.listHeight > rect.height || this.listHeight > this.height) {\n                var maxHeight = stringToNumber(this.legendHeight, rect.height);\n                maxHeight = maxHeight > rect.height ? rect.height : maxHeight;\n                maxHeight = heatMap.legendSettings.title.text ? maxHeight - titleSize.height : maxHeight;\n                this.listPerPage = Math.floor(maxHeight / (this.legendSize + this.listInterval) - 1);\n                this.numberOfPages = Math.max(1, Math.ceil(heatMap.colorCollection.length / this.listPerPage));\n            }\n            else {\n                this.listPerPage = heatMap.colorCollection.length;\n                this.legendHeight = this.listHeight.toString();\n            }\n        }\n    };\n    Legend.prototype.renderPagingElements = function () {\n        var heatMap = this.heatMap;\n        if (this.numberOfPages > 1) {\n            this.navigationCollections = [];\n            this.legend.appendChild(this.paginggroup);\n            var iconSize = 10;\n            var rightArrowX = this.legendGroup.x + this.legendGroup.width - iconSize;\n            var rightArrowY = this.legendGroup.y + this.legendGroup.height - iconSize;\n            var text = this.currentPage + '/' + this.numberOfPages;\n            var textSize = measureText(text, heatMap.legendSettings.textStyle);\n            var textX = rightArrowX - textSize.width - 15;\n            var textBasic = new TextBasic(textX, rightArrowY, 'start', text, 0, 'translate(0,0)', 'middle');\n            var options = new TextOption(heatMap.element.id + '_paging', textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n            this.drawSvgCanvas.createText(options, this.paginggroup, text);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                this.paginggroup.lastChild.setAttribute('dy', '0.6ex');\n            }\n            this.pagingRect = new Rect(textX, rightArrowY - textSize.height / 2, textSize.width, textSize.height);\n            var pagingTextRect = new RectOption(heatMap.element.id + '_pagingText', 'none', { color: 'transparent', width: 0 }, 1, this.pagingRect);\n            this.drawSvgCanvas.drawRectangle(pagingTextRect, this.paginggroup);\n            var rightArrowRect = new RectOption(heatMap.element.id + '_rightArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(rightArrowX - iconSize, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(rightArrowRect, this.paginggroup);\n            var rightArrow = 'M' + ' ' + (rightArrowX) + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (rightArrowX - iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (rightArrowX - iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftX = textX - 15;\n            var leftArrow = 'M' + ' ' + leftX + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (leftX + iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (leftX + iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftArrowRect = new RectOption(heatMap.element.id + '_leftArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(leftX, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(leftArrowRect, this.paginggroup);\n            var leftOption = new PathOption(heatMap.element.id + '_Legend_leftarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', leftArrow);\n            var rightOption = new PathOption(heatMap.element.id + '_Legend_rightarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', rightArrow);\n            this.navigationCollections.push(rightArrowRect);\n            this.navigationCollections.push(leftArrowRect);\n            if (!heatMap.enableCanvasRendering) {\n                var arrow = heatMap.renderer.drawPath(leftOption);\n                var rightarrow = heatMap.renderer.drawPath(rightOption);\n                this.paginggroup.appendChild(arrow);\n                this.paginggroup.appendChild(rightarrow);\n            }\n            else {\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(leftOption, canvasTranslate);\n                heatMap.canvasRenderer.drawPath(rightOption, canvasTranslate);\n            }\n        }\n    };\n    Legend.prototype.calculateGradientScale = function (scale) {\n        var heatMap = this.heatMap;\n        var padding = 10; // padding between legend bounds and gradient scale\n        var left;\n        var top;\n        var height;\n        var width;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var titleHeight = heatMap.legendSettings.title.text ? titleSize.height : 0;\n        if (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) {\n            this.measureListLegendBound(heatMap.initialClipRect);\n        }\n        if (heatMap.horizontalGradient) {\n            left = scale.x + padding;\n            top = scale.y + this.legendRectPadding;\n            width = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                scale.width - (2 * this.listInterval) : scale.width - 2 * padding;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : this.gradientScaleSize;\n        }\n        else {\n            left = scale.x + this.legendRectPadding;\n            top = scale.y + padding + titleHeight;\n            width = (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) ?\n                scale.width - padding : this.gradientScaleSize;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval :\n                scale.height - 2 * padding - titleHeight;\n        }\n        this.legendRectScale = new Rect(left, top, width, height);\n        if (heatMap.paletteSettings.type === 'Gradient' || heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend) {\n            this.calculateColorAxisGrid(this.legendRectScale);\n        }\n    };\n    Legend.prototype.calculateColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var rect = this.legendRectScale;\n        var legendPart;\n        var text;\n        var maxTextWrapLength = 0;\n        this.segmentCollectionsLabels = [];\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        var pathX1;\n        var pathY1;\n        var colorCollection = heatMap.paletteSettings.type === 'Gradient' ?\n            heatMap.legendColorCollection : heatMap.colorCollection;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        this.legendMinValue = this.heatMap.isColorRange ? (colorCollection[0].startValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : colorCollection[0].startValue : ((colorCollection[0].value > minValue) ? minValue :\n            colorCollection[0].value);\n        this.legendMaxValue = this.heatMap.isColorRange ? (colorCollection[colorCollection.length - 1].endValue <\n            heatMap.dataSourceMaxValue) ? heatMap.dataSourceMaxValue : colorCollection[colorCollection.length - 1].endValue :\n            (colorCollection[colorCollection.length - 1].value < maxValue ? maxValue : colorCollection[colorCollection.length - 1].value);\n        if (heatMap.paletteSettings.type === 'Gradient') {\n            for (var index = 0; index < colorCollection.length; index++) {\n                var value = void 0;\n                legendPart = (this.heatMap.isColorRange && heatMap.horizontalGradient ? rect.width : rect.height) / 100;\n                if (this.heatMap.isColorRange) {\n                    if (colorCollection[0].startValue !== this.heatMap.dataSourceMinValue && index === 0 &&\n                        colorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n                        value = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    value = ((((colorCollection[index].startValue < heatMap.dataSourceMinValue && colorCollection[index].endValue >\n                        heatMap.dataSourceMaxValue) ? heatMap.dataSourceMinValue : colorCollection[index].startValue) -\n                        this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                    this.segmentCollections.push(pathY1);\n                    this.segmentCollectionsLabels.push(pathY1);\n                    if (colorCollection[index].endValue !== ((index === colorCollection.length - 1) ?\n                        this.heatMap.dataSourceMaxValue : colorCollection[index + 1].startValue) &&\n                        this.heatMap.legendColorCollection[index].endValue < this.heatMap.dataSourceMaxValue) {\n                        if (index === colorCollection.length - 1) {\n                            value = (colorCollection[index].endValue - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue) * 100;\n                            pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                            this.segmentCollections.push(pathY1);\n                        }\n                        value = ((index === colorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                            colorCollection[index].endValue) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                }\n                else {\n                    value = ((colorCollection[index].value - this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    if (!heatMap.horizontalGradient) {\n                        legendPart = rect.height / 100;\n                        pathY1 = legendRect.y + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    else {\n                        legendPart = rect.width / 100;\n                        pathX1 = legendRect.x + (legendPart * value);\n                        this.segmentCollections.push(pathX1);\n                    }\n                }\n            }\n        }\n        var textWrapWidth;\n        if (heatMap.horizontalGradient) {\n            var segmentWidth = this.heatMap.isColorRange ? this.segmentCollectionsLabels : this.segmentCollections;\n            for (var i = 0; i < colorCollection.length; i++) {\n                if (heatMap.paletteSettings.type === 'Gradient') {\n                    var previousSegmentWidth = (segmentWidth[i] - segmentWidth[i - 1]) / 2;\n                    var nextSegmentWidth = (segmentWidth[i + 1] - segmentWidth[i]) / 2;\n                    if (i === colorCollection.length - 1) {\n                        textWrapWidth = this.heatMap.isColorRange ? (legendRect.width - segmentWidth[i - 1]) / 2 : previousSegmentWidth;\n                    }\n                    else if (i === 0) {\n                        textWrapWidth = nextSegmentWidth;\n                    }\n                    else {\n                        textWrapWidth = (previousSegmentWidth < nextSegmentWidth && !this.heatMap.isColorRange) ?\n                            previousSegmentWidth : nextSegmentWidth;\n                    }\n                }\n                else {\n                    var width = this.legendRectScale.width / heatMap.colorCollection.length;\n                    textWrapWidth = heatMap.legendSettings.labelDisplayType === 'Edge' ? width : width / 2;\n                }\n                this.textWrapCollections.push(textWrapWidth);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                maxTextWrapLength = text.length > maxTextWrapLength ? text.length : maxTextWrapLength;\n            }\n            if (heatMap.legendSettings.position === 'Bottom') {\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendGroup.y -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n            else {\n                heatMap.initialClipRect.y += (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n        }\n    };\n    Legend.prototype.renderColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var legendElement;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        if (!heatMap.enableCanvasRendering) {\n            legendElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + '_ColorAxis_Grid' });\n        }\n        for (var i = 0; i < (heatMap.isColorRange ? this.segmentCollections.length : heatMap.legendColorCollection.length); i++) {\n            if (!heatMap.horizontalGradient) {\n                pathX1 = legendRect.x;\n                pathY1 = pathY2 = this.segmentCollections[i];\n                pathX2 = legendRect.x + legendRect.width;\n            }\n            else {\n                pathX1 = pathX2 = this.segmentCollections[i];\n                pathY1 = legendRect.y;\n                pathY2 = legendRect.y + legendRect.height;\n            }\n            var direction = new Line(pathX1, pathY1, pathX2, pathY2);\n            var line = new LineOption(this.heatMap.element.id + '_ColorAxis_Grid' + i, direction, '#EEEEEE', 1);\n            this.drawSvgCanvas.drawLine(line, legendElement);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(legendElement);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendTitleTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_legendTitle') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            showTooltip(this.heatMap.legendSettings.title.text, pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_legendTitle_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n            document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip').style.visibility = 'visible';\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendLabelTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_Legend_Label') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.heatMap.element.id + '_Legend_Label');\n            if (targetId.length === 2) {\n                var index = void 0;\n                if (targetId[1].length === 1 || this.heatMap.legendSettings.textStyle.textOverflow === 'Trim') {\n                    index = parseInt(targetId[1], 10);\n                }\n                else {\n                    index = parseInt(targetId[1].substring(0, targetId[1].length - 1), 10);\n                }\n                showTooltip(this.labelCollections[index], pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_LegendLabel_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n                document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip').style.visibility = 'visible';\n            }\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    Legend.prototype.calculateListPerPage = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.horizontalGradient) {\n            this.lastList = [];\n            var legendX = rect.x;\n            var legendY = rect.y;\n            var size = 0;\n            var division = 0;\n            var labelX = 0;\n            var labelY = 0;\n            var interval = 20;\n            var i = void 0;\n            var legendSize = 10;\n            var padding = 5;\n            this.labelXCollections = [];\n            this.labelYCollections = [];\n            this.legendXCollections = [];\n            this.legendYCollections = [];\n            for (i = 0; i < heatMap.colorCollection.length; i++) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                labelX = legendX + legendSize + padding;\n                labelY = legendY + padding;\n                var maxWidth = heatMap.legendSettings.showLabel ? labelX + size : legendX + this.legendSize + this.listInterval;\n                if (i !== 0 && maxWidth > this.legendGroup.width + this.legendGroup.x - this.listInterval) {\n                    division += 1;\n                    legendX = rect.x;\n                    legendY = rect.y + (division * interval);\n                    labelX = legendX + legendSize + padding;\n                    labelY = legendY + padding;\n                    if (division % (this.listPerPage) === 0) {\n                        this.lastList.push(i);\n                        legendY = rect.y;\n                        labelY = legendY + padding;\n                        division = 0;\n                    }\n                }\n                this.labelXCollections.push(labelX);\n                this.labelYCollections.push(labelY);\n                this.legendXCollections.push(legendX);\n                this.legendYCollections.push(legendY);\n                legendX = legendX + this.legendSize + this.labelPadding + size + this.listInterval;\n            }\n            this.lastList.push(i);\n            this.numberOfPages = this.lastList.length;\n        }\n    };\n    Legend.prototype.renderListLegendMode = function (rect, translate) {\n        var heatMap = this.heatMap;\n        var legendSize = 10;\n        var tempBorder = {\n            color: 'transparent', width: 0,\n        };\n        var padding = 5; // padding for legend label from top\n        this.legendLabelTooltip = [];\n        var listRect;\n        var size = new Size(0, 0);\n        var labelX = 0;\n        var labelY = 0;\n        var legendX = rect.x;\n        var legendY = rect.y;\n        if (translate) {\n            this.renderPagingElements();\n        }\n        var x;\n        var y;\n        var textWrapWidth = heatMap.legendSettings.title.text ? this.width - (2 * (this.legendSize + this.labelPadding)) :\n            this.legendGroup.width - (this.legendSize + this.legendRectPadding + this.labelPadding);\n        if (!heatMap.horizontalGradient) {\n            x = (this.currentPage * (this.listPerPage)) - (this.listPerPage);\n            y = x + this.listPerPage;\n            y = y < heatMap.colorCollection.length ? y : heatMap.colorCollection.length;\n        }\n        else {\n            x = this.currentPage === 1 ? 0 : this.lastList[this.currentPage - 2];\n            y = this.lastList[this.currentPage - 1];\n        }\n        for (var i = x; i < y; i++) {\n            if (heatMap.legendSettings.showLabel) {\n                var text = this.labelCollections[i];\n                size = measureText(text, heatMap.legendSettings.textStyle);\n            }\n            var legendEventArgs = {\n                cancel: false, text: this.labelCollection[i], name: 'legendRender',\n            };\n            if (heatMap.horizontalGradient) {\n                legendX = this.legendXCollections[i];\n                legendY = this.legendYCollections[i];\n                labelX = this.labelXCollections[i];\n                labelY = this.labelYCollections[i];\n            }\n            labelX = legendX + this.legendSize + this.labelPadding;\n            labelY = legendY + padding;\n            this.heatMap.trigger('legendRender', legendEventArgs);\n            if (translate && heatMap.rendering && this.legendRange.length <= heatMap.colorCollection.length) {\n                var rectPosition = new LegendRange(legendX, legendY, legendSize, legendSize, heatMap.colorCollection[i].value, true, this.currentPage);\n                rectPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                if (!legendEventArgs.cancel) {\n                    this.legendRange.push(rectPosition);\n                }\n                else {\n                    var rectPosition_1 = new LegendRange(legendX, legendY, 0, 0, heatMap.colorCollection[i].value, true, this.currentPage);\n                    this.legendRange.push(rectPosition_1);\n                }\n                if (heatMap.legendSettings.showLabel) {\n                    var textPosition = new LegendRange(labelX, (labelY - size.height / 2), size.width, size.height, heatMap.colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n            }\n            if (!legendEventArgs.cancel) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                    if (text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, size.width, size.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, 'start', text, 0, 'translate(0,0)', 'middle');\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill : this.legendRange[i].visible ? options.fill : '#D3D3D3';\n                    this.drawSvgCanvas.createText(options, this.translategroup, text[0]);\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        this.translategroup.lastChild.setAttribute('dy', '0.6ex');\n                    }\n                }\n                listRect = new Rect(legendX, legendY, legendSize, legendSize);\n                var listColor = heatMap.legendOnLoad ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                    heatMap.colorCollection[i].color :\n                    this.legendRange[i].visible ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                        heatMap.colorCollection[i].color : '#D3D3D3';\n                var rectItems = new RectOption(heatMap.element.id + '_legend_list' + i, listColor, tempBorder, 1, listRect);\n                this.drawSvgCanvas.drawRectangle(rectItems, this.translategroup);\n                heatMap.horizontalGradient ? legendX = legendX + this.legendSize + this.labelPadding + size.width + this.listInterval :\n                    legendY += this.legendSize + this.listInterval;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n            this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n            var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_LegendScale_ClipPath' });\n            var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n            clippath.appendChild(clipRect);\n            this.translategroup.appendChild(clippath);\n            this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.legendScale.appendChild(this.translategroup);\n            heatMap.svgObject.appendChild(this.legend);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.translatePage = function (heatMap, page, isNext) {\n        var padding = 5;\n        if ((isNext && page >= 1 && page < this.numberOfPages) || (!isNext && page > 1 && page <= this.numberOfPages)) {\n            if (isNext) {\n                this.currentPage += 1;\n                this.legendRect.y += this.legendRect.height;\n            }\n            else {\n                this.currentPage -= 1;\n                this.legendRect.y -= this.legendRect.height;\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.paginggroup.removeChild(this.paginggroup.firstChild);\n                while (this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            else {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.fillRect(this.legendRectScale.x - padding, this.legendRectScale.y - padding, this.legendRectScale.width +\n                    padding, this.legendRectScale.height + (2 * padding));\n                ctx.fillRect(this.pagingRect.x, this.pagingRect.y, this.pagingRect.width, this.pagingRect.height);\n            }\n            this.renderListLegendMode(this.legendRectScale, true);\n        }\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection && heatMap.rectSelected) {\n            var ctx = heatMap.secondaryCanvasRenderer.ctx;\n            var position = heatMap.legendSettings.position;\n            var initialRect = heatMap.initialClipRect;\n            var rectX = position === 'Right' ? initialRect.x + initialRect.width : 0;\n            var rectY = position === 'Bottom' ? initialRect.y + initialRect.height : 0;\n            var rectWidth = position === 'Right' ? heatMap.availableSize.width - (initialRect.x +\n                initialRect.width) : position === 'Left' ? initialRect.x : heatMap.availableSize.width;\n            var rectHeight = position === 'Top' ? initialRect.y : position === 'Bottom' ?\n                heatMap.availableSize.height - (initialRect.y + initialRect.height) : heatMap.availableSize.height;\n            ctx.save();\n            ctx.clearRect(rectX, rectY, rectWidth, rectHeight);\n            ctx.restore();\n            var oldCanvas = document.getElementById(heatMap.element.id + '_canvas');\n            var newCanvas = document.getElementById(heatMap.element.id + '_secondary_canvas');\n            var rectImage = oldCanvas.getContext('2d').getImageData(rectX, rectY, rectWidth, rectHeight);\n            newCanvas.getContext('2d').putImageData(rectImage, rectX, rectY);\n            oldCanvas.style.opacity = '0.3';\n        }\n    };\n    /**\n     * To create div container for tooltip which appears on hovering the smart legend.\n     * @param heatmap\n     * @private\n     */\n    Legend.prototype.createTooltipDiv = function (heatMap) {\n        var element = createElement('div', {\n            id: this.heatMap.element.id + 'legendLabelTooltipContainer',\n            styles: 'position:absolute'\n        });\n        this.heatMap.element.appendChild(element);\n    };\n    /**\n     * To render tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.renderTooltip = function (currentLegendRect) {\n        var heatMap = this.heatMap;\n        var tempTooltipText = [currentLegendRect.label];\n        var offset = null;\n        offset = parseInt(heatMap.legendSettings.textStyle.size, 10) / 2;\n        this.tooltipObject = new tool({\n            offset: offset,\n            theme: heatMap.theme,\n            content: tempTooltipText,\n            location: {\n                x: currentLegendRect.x + (currentLegendRect.width / 2),\n                y: currentLegendRect.y + (currentLegendRect.height / 2)\n            },\n            inverted: heatMap.horizontalGradient ? false : true,\n            areaBounds: {\n                height: this.legendGroup.height + this.legendGroup.y,\n                width: this.legendGroup.width + this.legendGroup.x,\n                x: heatMap.legendSettings.position === 'Right' ? 0 : this.legendGroup.x,\n                y: heatMap.legendSettings.position === 'Top' ? heatMap.titleSettings.text === '' ? this.legendGroup.height -\n                    this.legendGroup.y : this.legendGroup.y : 0\n            }\n        }, '#' + this.heatMap.element.id + 'legendLabelTooltipContainer');\n        this.tooltipObject.element.style.visibility = 'visible';\n    };\n    /**\n     * To create tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.createTooltip = function (pageX, pageY) {\n        var currentLegendRect;\n        for (var i = 0; i < this.heatMap.colorCollection.length; i++) {\n            var position = this.legendRectPositionCollection[i];\n            if (position && pageX > position.x && pageX < position.width + position.x &&\n                pageY > position.y && pageY < position.height + position.y) {\n                currentLegendRect = this.legendRectPositionCollection[i];\n                break;\n            }\n        }\n        var ele = document.getElementById(this.heatMap.element.id + 'legendLabelTooltipContainer');\n        if (ele && ele.style.visibility === 'visible' && this.tooltipObject && !this.heatMap.isTouch) {\n            this.tooltipObject.fadeOut();\n            ele.style.visibility = 'hidden';\n        }\n        if (currentLegendRect) {\n            this.renderTooltip(currentLegendRect);\n        }\n    };\n    /**\n     * Toggle the visibility of cells based on legend selection\n     * @private\n     */\n    Legend.prototype.legendRangeSelection = function (index) {\n        var heatMap = this.heatMap;\n        var legendRange = this.legendRange;\n        var padding = 5;\n        var legendPadding = heatMap.horizontalGradient ? 10 : 0;\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        heatMap.rangeSelection = true;\n        if (heatMap.enableCanvasRendering) {\n            var ctx_2 = heatMap.canvasRenderer.ctx;\n            if (heatMap.legendSettings.enableSmartLegend) {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, (legendBound.width + this.labelPadding +\n                    this.maxLegendLabelSize.width) + padding, legendBound.height + 2 * (padding + legendPadding));\n            }\n            else {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, legendBound.width +\n                    padding, legendBound.height + (2 * padding));\n            }\n        }\n        else {\n            if (heatMap.legendSettings.enableSmartLegend) {\n                while (this.legend && this.legend.childNodes.length) {\n                    this.legend.removeChild(this.legend.firstChild);\n                }\n            }\n            else {\n                while (this.translategroup && this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            removeElement(heatMap.heatMapSeries.containerRectObject.id);\n            if (heatMap.cellSettings.showLabel) {\n                removeElement(heatMap.heatMapSeries.containerTextObject.id);\n            }\n        }\n        if (heatMap.legendSettings.enableSmartLegend) {\n            if (heatMap.colorCollection.length !== heatMap.legendColorCollection.length) {\n                if (index === heatMap.legendColorCollection.length - 1) {\n                    heatMap.toggleValue[index - 1].visible = this.visibilityCollections[index - 1] =\n                        legendRange[index - 1].visible = !legendRange[index].visible;\n                }\n                else {\n                    if (index === heatMap.colorCollection.length - 1) {\n                        heatMap.toggleValue[index + 1].visible = this.visibilityCollections[index + 1] =\n                            legendRange[index + 1].visible = !legendRange[index].visible;\n                    }\n                }\n            }\n        }\n        heatMap.toggleValue[index].visible = this.visibilityCollections[index] = legendRange[index].visible = !legendRange[index].visible;\n        heatMap.legendOnLoad = false;\n        if (heatMap.legendSettings.enableSmartLegend) {\n            this.renderSmartLegend();\n            var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n            this.renderLegendLabel(rectItemsSvg);\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            if (heatMap.renderingMode === 'SVG') {\n                this.renderTitle(rectItemsSvg);\n            }\n        }\n        else {\n            this.renderListLegendMode(this.legendRectScale, false);\n        }\n        if (heatMap.enableCanvasRendering) {\n            ctx.restore();\n        }\n        heatMap.heatMapSeries.renderRectSeries();\n        heatMap.clearSelection();\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection) {\n            // heatMap.createSvg();\n            // heatMap.refreshBound();\n            // heatMap.createMultiCellDiv(false);\n        }\n    };\n    /**\n     * update visibility collections of legend and series\n     * @private\n     */\n    Legend.prototype.updateLegendRangeCollections = function () {\n        var heatMap = this.heatMap;\n        heatMap.rangeSelection = !heatMap.legendOnLoad ? true : false;\n        this.visibilityCollections = !heatMap.legendOnLoad ? this.visibilityCollections : [];\n        heatMap.toggleValue = !heatMap.legendOnLoad ? heatMap.toggleValue : [];\n        this.legendRange = !heatMap.legendOnLoad ? this.legendRange : [];\n        this.legendTextRange = !heatMap.legendOnLoad ? this.legendTextRange : [];\n    };\n    return Legend;\n}());\nexport { Legend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { increaseDateTimeInterval } from '../utils/helper';\nimport { BubbleData } from '../model/base';\n/**\n * Configures the Adaptor Property in the Heatmap.\n */\nvar Data = /** @class */ (function (_super) {\n    __extends(Data, _super);\n    function Data() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Data.prototype, \"isJsonData\", void 0);\n    __decorate([\n        Property('None')\n    ], Data.prototype, \"adaptorType\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"xDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"yDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"valueMapping\", void 0);\n    __decorate([\n        Complex({}, BubbleData)\n    ], Data.prototype, \"bubbleDataMapping\", void 0);\n    return Data;\n}(ChildProperty));\nexport { Data };\nvar AdaptiveMinMax = /** @class */ (function () {\n    function AdaptiveMinMax() {\n    }\n    return AdaptiveMinMax;\n}());\nexport { AdaptiveMinMax };\n/**\n *\n * The `Adaptor` module is used to handle JSON and Table data.\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(heatMap) {\n        this.reconstructedXAxis = [];\n        this.reconstructedYAxis = [];\n        this.adaptiveXMinMax = new AdaptiveMinMax();\n        this.adaptiveYMinMax = new AdaptiveMinMax();\n        this.heatMap = heatMap;\n    }\n    /**\n     * Method to construct Two Dimentional Datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructDatasource = function (dataSource, dataSourceSettings) {\n        if (dataSourceSettings.adaptorType === 'Cell') {\n            var xAxis = this.heatMap.xAxis;\n            var yAxis = this.heatMap.yAxis;\n            this.adaptiveXMinMax.min = xAxis.minimum;\n            this.adaptiveXMinMax.max = xAxis.maximum;\n            this.adaptiveYMinMax.min = yAxis.minimum;\n            this.adaptiveYMinMax.max = yAxis.maximum;\n            if (((xAxis.valueType === 'Numeric' || xAxis.valueType === 'DateTime') &&\n                (isNullOrUndefined(xAxis.minimum) || isNullOrUndefined(xAxis.maximum))) ||\n                ((yAxis.valueType === 'Numeric' || yAxis.valueType === 'DateTime') &&\n                    (isNullOrUndefined(yAxis.minimum) || isNullOrUndefined(yAxis.maximum)))) {\n                this.getMinMaxValue(dataSource, dataSourceSettings, xAxis, yAxis);\n            }\n            this.heatMap.isCellData = true;\n        }\n        if (dataSourceSettings.adaptorType === 'None') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = this.processJsonTableData(dataSource, dataSourceSettings);\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.heatMap.completeAdaptDataSource = this.processJsonCellData(dataSource, dataSourceSettings);\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.constructAdaptiveAxis();\n            this.heatMap.completeAdaptDataSource = this.processCellData(dataSource);\n            this.heatMap.isCellData = true;\n        }\n    };\n    /**\n     * Method to construct Axis Collection.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructAdaptiveAxis = function () {\n        var xAxis = this.heatMap.xAxis;\n        var yAxis = this.heatMap.yAxis;\n        var intervalType;\n        if (xAxis.valueType === 'Numeric') {\n            this.reconstructedXAxis = this.getNumericAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.increment);\n        }\n        if (yAxis.valueType === 'Numeric') {\n            this.reconstructedYAxis = this.getNumericAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.increment);\n        }\n        if (xAxis.valueType === 'DateTime') {\n            this.reconstructedXAxis = this.getDateAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.intervalType, xAxis.increment);\n        }\n        if (yAxis.valueType === 'DateTime') {\n            this.reconstructedYAxis = this.getDateAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.intervalType, yAxis.increment);\n        }\n    };\n    /**\n     * Method to calculate Numeric Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getNumericAxisCollection = function (min, max, increment) {\n        var loopIndex = min;\n        var tempAxisColl = [];\n        while (loopIndex <= max) {\n            tempAxisColl.push(loopIndex.toString());\n            loopIndex = loopIndex + increment;\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate DateTime Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getDateAxisCollection = function (min, max, intervalType, increment) {\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.heatMap.intl.getDateParser(option);\n        var dateFormatter = this.heatMap.intl.getDateFormat(option);\n        min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: min }).val))));\n        var tempInterval = min;\n        var tempAxisColl = [];\n        while (tempInterval <= max) {\n            tempAxisColl.push(new Date(tempInterval).toString());\n            tempInterval = increaseDateTimeInterval(tempInterval, 1, intervalType, increment).getTime();\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate Maximum and Minimum Value from datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.getMinMaxValue = function (dataSource, adapData, xAxis, yAxis) {\n        var data = dataSource;\n        var label = Object.keys(data[0]);\n        if (data.length > 0) {\n            this.adaptiveXMinMax.min = !isNullOrUndefined(xAxis.minimum) ? xAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.min = !isNullOrUndefined(yAxis.minimum) ? yAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n            this.adaptiveXMinMax.max = !isNullOrUndefined(xAxis.maximum) ? xAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.max = !isNullOrUndefined(yAxis.maximum) ? yAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n        }\n        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n            // tslint:disable-next-line:no-any\n            var xDataIndex = adapData.isJsonData ? data[dataIndex][label[0]] : data[dataIndex][0];\n            // tslint:disable-next-line:no-any\n            var yDataIndex = adapData.isJsonData ? data[dataIndex][label[1]] : data[dataIndex][1];\n            if (xDataIndex < this.adaptiveXMinMax.min && isNullOrUndefined(xAxis.minimum)) {\n                this.adaptiveXMinMax.min = xDataIndex;\n            }\n            if (xDataIndex > this.adaptiveXMinMax.max && isNullOrUndefined(xAxis.maximum)) {\n                this.adaptiveXMinMax.max = xDataIndex;\n            }\n            if (yDataIndex < this.adaptiveYMinMax.min && isNullOrUndefined(yAxis.minimum)) {\n                this.adaptiveYMinMax.min = yDataIndex;\n            }\n            if (yDataIndex > this.adaptiveYMinMax.max && isNullOrUndefined(yAxis.maximum)) {\n                this.adaptiveYMinMax.max = yDataIndex;\n            }\n        }\n    };\n    /**\n     * Method to process Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processCellData = function (dataSource) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.reconstructedXAxis;\n        var yLabels = this.reconstructedYAxis;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        this.reconstructData = [];\n        if (tempDataCollection && tempDataCollection.length) {\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                if (this.heatMap.xAxis.valueType === 'Category') {\n                    currentDataXIndex = tempDataCollection[xindex][0];\n                }\n                else {\n                    currentDataXIndex = xLabels.indexOf(tempDataCollection[xindex][0].toString());\n                }\n                if (currentDataXIndex > -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    if (this.heatMap.yAxis.valueType === 'Category') {\n                        currentDataYIndex = tempDataCollection[xindex][1];\n                    }\n                    else {\n                        currentDataYIndex = yLabels.indexOf(tempDataCollection[xindex][1].toString());\n                    }\n                    if (currentDataYIndex !== -1) {\n                        while (this.reconstructData[currentDataXIndex][currentDataYIndex] !== '') {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        this.reconstructData[currentDataXIndex][currentDataYIndex] = isNullOrUndefined(tempDataCollection[xindex][2]) ?\n                            '' : tempDataCollection[xindex][2];\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to process JSON Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonCellData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xAxisLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yAxisLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var axisCollections = this.heatMap.axisCollections;\n        if (xAxisLabels.length === 0 || yAxisLabels.length === 0) {\n            this.generateAxisLabels(dataSource, adaptordata);\n        }\n        var xLabels = (this.heatMap.xAxis.valueType === 'Category') ? (xAxisLabels.length > 0 ?\n            this.heatMap.xAxis.labels : axisCollections[0].jsonCellLabel) : axisCollections[0].labelValue;\n        var yLabels = (this.heatMap.yAxis.valueType === 'Category') ? (yAxisLabels.length > 0 ?\n            this.heatMap.yAxis.labels : axisCollections[1].jsonCellLabel) : axisCollections[1].labelValue;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var index = 0; index < tempDataCollection.length; index++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    currentDataYIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, yLabels, adaptordata.yDataMapping.split('.'), this.heatMap.yAxis.valueType);\n                    if (currentDataYIndex !== -1) {\n                        while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        if (this.heatMap.bubbleSizeWithColor) {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = [\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.size.split('.'), ''),\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.color.split('.'), '')\n                            ];\n                        }\n                        else {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.valueMapping.split('.'), '');\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to generate axis labels when labels are not given.\n     * @return {string}\n     * @private\n     */\n    Adaptor.prototype.generateAxisLabels = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var hasXLabels = xLabels.length > 0 ? true : false;\n        var hasYLabels = yLabels.length > 0 ? true : false;\n        var axisCollection = this.heatMap.axisCollections;\n        for (var index = 0; index < axisCollection.length; index++) {\n            var valueType = axisCollection[index].valueType;\n            var axis = axisCollection[index];\n            if (valueType === 'Category') {\n                var hasLabels = void 0;\n                var dataMapping = void 0;\n                var labels = void 0;\n                if (axis.orientation === 'Horizontal') {\n                    hasLabels = hasXLabels;\n                    dataMapping = adaptordata.xDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                else {\n                    hasLabels = hasYLabels;\n                    dataMapping = adaptordata.yDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                if (!hasLabels) {\n                    for (var i = 0; i < tempDataCollection.length; i++) {\n                        if (dataMapping in tempDataCollection[i]) {\n                            var xValue = tempDataCollection[i][dataMapping].toString();\n                            if (labels.indexOf(xValue.toString()) === -1) {\n                                labels.push(xValue);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (valueType === 'DateTime') {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n        }\n    };\n    /**\n     * Method to get data from complex mapping.\n     * @return {number|string}\n     * @private\n     */\n    Adaptor.prototype.getSplitDataValue = function (\n    // tslint:disable-next-line:no-any \n    tempSplitDataCollection, adaptordata, labels, tempSplitData, valueType) {\n        var value = -1;\n        this.tempSplitDataCollection = tempSplitDataCollection;\n        for (var splitIndex = 0; splitIndex < tempSplitData.length; splitIndex++) {\n            value = !isNullOrUndefined(labels) ? (!(valueType === 'DateTime') ?\n                labels.indexOf(this.tempSplitDataCollection[tempSplitData[splitIndex]]) :\n                labels.map(Number).indexOf(+this.tempSplitDataCollection[tempSplitData[splitIndex]])) : null;\n            if (!isNullOrUndefined(this.tempSplitDataCollection)) {\n                this.tempSplitDataCollection = value !== -1 && !isNullOrUndefined(labels) ?\n                    this.tempSplitDataCollection : this.tempSplitDataCollection[tempSplitData[splitIndex]];\n            }\n            if (isNullOrUndefined(this.tempSplitDataCollection)) {\n                break;\n            }\n        }\n        value = !isNullOrUndefined(labels) ? value : isNullOrUndefined(this.tempSplitDataCollection) ||\n            this.tempSplitDataCollection.toString() === '' ? '' : parseFloat(this.tempSplitDataCollection.toString());\n        return value;\n    };\n    /**\n     * Method to process JSON Table datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonTableData = function (dataSource, adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = dataSource;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var key;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[xindex], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    for (var index = 0; index < Object.keys(this.tempSplitDataCollection).length; index++) {\n                        key = Object.keys(this.tempSplitDataCollection)[index];\n                        currentDataYIndex = key !== adaptordata.xDataMapping ? yLabels.indexOf(key) : -1;\n                        if (currentDataYIndex !== -1) {\n                            while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                                this.reconstructData[currentDataXIndex].push('');\n                            }\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                                isNullOrUndefined(this.tempSplitDataCollection[key]) ?\n                                    '' : this.tempSplitDataCollection[key];\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * To destroy the Adaptor.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.destroy = function (heatMap) {\n        /**\n         * No Lines\n         */\n    };\n    ;\n    /**\n     * To get Module name\n     */\n    Adaptor.prototype.getModuleName = function () {\n        return 'Adaptor';\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n","import { createElement, isNullOrUndefined, Browser, print as printWindow } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement } from '../utils/helper';\nimport { SizeF } from '@syncfusion/ej2-pdf-export';\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Heatmap\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     * @private\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var controlValue = this.getControlsValue();\n        var width = controlValue.width;\n        var height = controlValue.height;\n        var element = this.control.svgObject;\n        var isCanvas = this.control.enableCanvasRendering;\n        var image;\n        if (!isCanvas) {\n            element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': width.toString(),\n                    'height': height.toString()\n                }\n            });\n        }\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            controlValue.svg.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            if (Browser.info.name === 'msie') {\n                var svg = new Blob([(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'application/octet-stream' });\n                window.navigator.msSaveOrOpenBlob(svg, fileName + '.' + type.toLocaleLowerCase());\n            }\n            else {\n                this.triggerDownload(fileName, type, url, isDownload);\n            }\n        }\n        else if (Browser.info.name === 'msie') {\n            var canvas = element;\n            if (!isCanvas) {\n                canvas = this.createCanvas();\n            }\n            image = canvas.toDataURL(type);\n            if (type === 'PDF') {\n                this.exportPdf(canvas, orientation, width, height, isDownload, fileName);\n            }\n            else {\n                this.doExport(type, image, fileName);\n            }\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    _this.exportPdf(element, orientation, width, height, isDownload, fileName);\n                }\n                else {\n                    if (window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(element.msToBlob(), fileName + '.' + type.toLocaleLowerCase());\n                    }\n                    else {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                }\n            });\n            image_1.src = url;\n        }\n        if (!isCanvas) {\n            var id = document.getElementById(this.control.element.id);\n            removeElement(id + '_canvas');\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     * @private\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    /**\n     * To get the maximum size value\n     * @param controls\n     * @param name\n     */\n    ExportUtils.prototype.getControlsValue = function () {\n        var width = 0;\n        var height = 0;\n        var isCanvas = this.control.enableCanvasRendering;\n        var svgObject = new SvgRenderer('').createSvg({\n            id: 'Svg_Export_Element',\n            width: 200, height: 200\n        });\n        var svg = this.control.svgObject.cloneNode(true);\n        var groupEle = this.control.renderer.createGroup({\n            style: 'transform: translateY(' + height + 'px)'\n        });\n        if (!isCanvas) {\n            groupEle.appendChild(svg);\n        }\n        width = Math.max(this.control.availableSize.width, width);\n        height = height + this.control.availableSize.height;\n        if (!isCanvas) {\n            svgObject.appendChild(groupEle);\n        }\n        if (!isCanvas) {\n            svgObject.setAttribute('width', width + '');\n            svgObject.setAttribute('height', height + '');\n        }\n        return {\n            'width': width,\n            'height': height,\n            'svg': svgObject\n        };\n    };\n    ExportUtils.prototype.createCanvas = function () {\n        var heatmap = this.control;\n        var renderMode = heatmap.renderingMode;\n        heatmap.renderingMode = 'Canvas';\n        heatmap.refresh();\n        var canvas = heatmap.svgObject;\n        heatmap.renderingMode = renderMode;\n        heatmap.refresh();\n        return canvas;\n    };\n    ExportUtils.prototype.exportPdf = function (element, orientation, width, height, isDownload, fileName) {\n        var document = new PdfDocument();\n        var margin = document.pageSettings.margins;\n        var pdfDefaultWidth = document.pageSettings.width;\n        var pdfDefaultHeight = document.pageSettings.height;\n        var exactWidth;\n        var exactHeight;\n        var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n        document.pageSettings.orientation = orientation;\n        exactWidth = (pdfDefaultWidth < width) ? (width + margin.left + margin.right) : pdfDefaultWidth;\n        exactHeight = (pdfDefaultHeight < height) ? (height + margin.top + margin.bottom) : pdfDefaultHeight;\n        document.pageSettings.size = new SizeF(exactWidth, exactHeight);\n        imageString = imageString.slice(imageString.indexOf(',') + 1);\n        document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, width, height);\n        if (isDownload) {\n            document.save(fileName + '.pdf');\n            document.destroy();\n        }\n    };\n    ExportUtils.prototype.doExport = function (type, image, fileName) {\n        var images = [];\n        var fileType = type || 'JPG';\n        images = [image];\n        this.exportImage(images, fileName, fileType, image);\n    };\n    ExportUtils.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        for (var j = 0; j < buffers.length; j++) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType.toLocaleLowerCase());\n            }\n        }\n    };\n    /**\n     * To print the heatmap elements.\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.print = function () {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        if (this.control.renderingMode === 'SVG') {\n            printWindow(this.getHTMLContent(), this.printWindow);\n        }\n        else {\n            var element = this.control.svgObject;\n            var dataUrl = element.toDataURL();\n            var image_2 = new Image();\n            var ctx_2 = element.getContext('2d');\n            image_2.onload = (function () {\n                ctx_2.drawImage(image_2, 0, 0);\n            });\n            image_2.src = dataUrl;\n            printWindow(image_2, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the heatmap.\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function () {\n        var div = createElement('div');\n        div.appendChild(this.control.element.cloneNode(true));\n        return div;\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Heat Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { remove, Event, EventHandler, Touch } from '@syncfusion/ej2-base';\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\nimport { Size, stringToNumber, RectOption, Rect, TextBasic, measureText } from './utils/helper';\nimport { DrawSvgCanvas, TextOption, titlePositionX, getTitle, showTooltip, getElement, SelectedCellDetails } from './utils/helper';\nimport { removeElement, CanvasTooltip, getTooltipText } from './utils/helper';\nimport { Margin, Title } from './model/base';\nimport { Theme, getThemeColor } from './model/theme';\nimport { Axis } from './axis/axis';\nimport { AxisHelper } from './axis/axis-helpers';\nimport { Series, CellSettings } from './series/series';\nimport { PaletteSettings, CellColor } from './utils/colorMapping';\nimport { TooltipSettings } from './utils/tooltip';\nimport { TwoDimensional } from './datasource/twodimensional';\nimport { LegendSettings } from '../heatmap/legend/legend';\nimport { Data } from './datasource/adaptor';\nimport { ExportUtils } from '../heatmap/utils/export';\nvar HeatMap = /** @class */ (function (_super) {\n    __extends(HeatMap, _super);\n    function HeatMap() {\n        /**\n         * The width of the heatmap as a string accepts input as both like '100px' or '100%'.\n         * If specified as '100%, heatmap renders to the full width of its parent element.\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.enableCanvasRendering = false;\n        /** @private */\n        _this.isColorRange = false;\n        /** @private */\n        _this.isCellTapHold = false;\n        /** @private */\n        _this.selectedCellCount = 0;\n        /** @private */\n        _this.toggleValue = [];\n        /** @private */\n        _this.legendOnLoad = true;\n        /** @private */\n        _this.resizing = false;\n        /** @private */\n        _this.rendering = true;\n        /** @private */\n        _this.horizontalGradient = _this.legendSettings.position === 'Bottom' || _this.legendSettings.position === 'Top';\n        /** @private */\n        _this.multiSelection = false;\n        /** @private */\n        _this.rectSelected = false;\n        /** @private */\n        _this.previousSelectedCellsRect = [];\n        /** @private */\n        _this.multiCellCollection = [];\n        /** @private */\n        _this.selectedMultiCellCollection = [];\n        /** @private */\n        _this.tempMultiCellCollection = [];\n        /**\n         * @private\n         */\n        _this.tooltipCollection = [];\n        /**\n         * @private\n         */\n        _this.isCellData = false;\n        /** @private */\n        _this.isBlazor = false;\n        return _this;\n    }\n    HeatMap.prototype.preRender = function () {\n        this.initPrivateVariable();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Handles the export method for heatmap control.\n     * @param type\n     * @param fileName\n     * @param orientation\n     */\n    HeatMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    HeatMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.canvasRenderer = new CanvasRenderer(this.element.id);\n        this.secondaryCanvasRenderer = new CanvasRenderer(this.element.id + '_secondary');\n        this.heatMapAxis = new AxisHelper(this);\n        this.heatMapSeries = new Series(this);\n        this.drawSvgCanvas = new DrawSvgCanvas(this);\n        this.twoDimensional = new TwoDimensional(this);\n        this.cellColor = new CellColor(this);\n        this.tempRectHoverClass = '';\n        this.tempTooltipRectId = '';\n        this.setCulture();\n        this.isBlazor = isBlazor();\n    };\n    /**\n     * Method to set culture for heatmap\n     */\n    HeatMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    HeatMap.prototype.render = function () {\n        this.updateBubbleHelperProperty();\n        this.trigger('load', { heatmap: (this.isBlazor ? null : this) });\n        this.initAxis();\n        this.processInitData();\n        this.setTheme();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.createSvg();\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n        this.renderElements();\n        this.appendSvgObject();\n        if (this.tooltipModule) {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.renderComplete();\n    };\n    /**\n     * To re-calculate the datasource while changing datasource property dynamically.\n     * @private\n     */\n    HeatMap.prototype.reRenderDatasource = function () {\n        this.dataSourceMinValue = null;\n        this.dataSourceMaxValue = null;\n        this.processInitData();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n    };\n    /**\n     * To process datasource property.\n     * @private\n     */\n    HeatMap.prototype.processInitData = function () {\n        if (this.adaptorModule) {\n            this.adaptorModule.constructDatasource(this.dataSource, this.dataSourceSettings);\n        }\n        else {\n            this.completeAdaptDataSource = this.dataSource;\n        }\n    };\n    /**\n     * To set render mode of heatmap as SVG or Canvas.\n     * @private\n     */\n    HeatMap.prototype.setRenderMode = function () {\n        if (this.renderingMode === 'Canvas') {\n            this.enableCanvasRendering = true;\n        }\n        else if (this.renderingMode === 'Auto' &&\n            (this.axisCollections[0].axisLabelSize * this.axisCollections[1].axisLabelSize) >= 10000) {\n            this.enableCanvasRendering = true;\n        }\n        else {\n            this.enableCanvasRendering = false;\n        }\n    };\n    /**\n     * To set bubble helper private property.\n     * @private\n     */\n    HeatMap.prototype.updateBubbleHelperProperty = function () {\n        if (this.cellSettings.tileType === 'Bubble' &&\n            (this.cellSettings.bubbleType === 'Size' || this.cellSettings.bubbleType === 'Sector')) {\n            this.legendVisibilityByCellType = false;\n        }\n        else if (this.legendModule && this.legendSettings.visible) {\n            this.legendVisibilityByCellType = true;\n        }\n        if (this.cellSettings.tileType === 'Bubble' && this.cellSettings.bubbleType === 'SizeAndColor') {\n            this.bubbleSizeWithColor = true;\n        }\n        else {\n            this.bubbleSizeWithColor = false;\n        }\n    };\n    HeatMap.prototype.renderElements = function () {\n        this.tooltipCollection = [];\n        this.renderSecondaryElement();\n        this.renderBorder();\n        this.renderTitle();\n        this.heatMapAxis.renderAxes();\n        if (this.tooltipModule && this.showTooltip) {\n            this.tooltipModule.tooltipObject = null;\n            this.tooltipModule.createTooltipDiv(this);\n        }\n        this.heatMapSeries.renderRectSeries();\n        if (this.legendModule && this.legendSettings.visible\n            && this.legendVisibilityByCellType) {\n            this.legendModule.renderLegendItems();\n            if (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltipDiv(this);\n            }\n        }\n    };\n    /**\n     * Get component name\n     */\n    HeatMap.prototype.getModuleName = function () {\n        return 'heatmap';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    HeatMap.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    HeatMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        var isUpdateSelection = true;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'renderingMode':\n                    this.rendering = false;\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'cellSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendModule && ((newProp.cellSettings.tileType !==\n                        oldProp.cellSettings.tileType) || (newProp.cellSettings.bubbleType !== oldProp.cellSettings.bubbleType))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    if (this.cellSettings.tileType === 'Bubble') {\n                        isUpdateSelection = false;\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'showTooltip':\n                    refreshBounds = true;\n                    break;\n                case 'dataSource':\n                case 'dataSourceSettings':\n                    this.isCellData = false;\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'titleSettings':\n                case 'width':\n                case 'height':\n                case 'margin':\n                    refreshBounds = true;\n                    break;\n                case 'legendSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType && (((newProp.legendSettings.visible !== oldProp.legendSettings.visible) ||\n                        (newProp.legendSettings.enableSmartLegend !== oldProp.legendSettings.enableSmartLegend)))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    else {\n                        this.legendOnLoad = false;\n                    }\n                    refreshBounds = true;\n                    break;\n                case 'yAxis':\n                case 'xAxis':\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    refreshBounds = true;\n                    break;\n                case 'paletteSettings':\n                    this.paletteCellSelectionUpdation();\n                    this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n                    this.cellColor.getColorCollection();\n                    this.calculateBounds();\n                    renderer = true;\n                    break;\n                case 'theme':\n                    this.setTheme();\n                    renderer = true;\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.tooltipObject.fill = this.tooltipSettings.fill;\n                        this.tooltipModule.tooltipObject.border = this.tooltipSettings.border;\n                        this.tooltipModule.tooltipObject.textStyle = this.tooltipSettings.textStyle;\n                        this.tooltipModule.tooltipObject.template = this.tooltipSettings.template;\n                        this.tooltipModule.tooltipObject.refresh();\n                    }\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.createSvg();\n            this.renderElements();\n            this.appendSvgObject();\n            this.trigger('created');\n            if (!isUpdateSelection) {\n                this.clearSelection();\n            }\n        }\n        else if (refreshBounds) {\n            this.createSvg();\n            this.refreshBound();\n            this.appendSvgObject();\n            this.trigger('created');\n        }\n        if (this.allowSelection && this.rectSelected) {\n            if (isUpdateSelection) {\n                this.updateCellSelection();\n            }\n            else {\n                this.clearSelection();\n            }\n        }\n        this.rendering = true;\n    };\n    HeatMap.prototype.paletteCellSelectionUpdation = function () {\n        this.updateBubbleHelperProperty();\n        if (this.legendVisibilityByCellType) {\n            this.legendOnLoad = true;\n            this.legendModule.updateLegendRangeCollections();\n        }\n    };\n    /**\n     * create svg or canvas element\n     * @private\n     */\n    HeatMap.prototype.createSvg = function () {\n        this.removeSvg();\n        this.setRenderMode();\n        this.calculateSize();\n        if (!this.enableCanvasRendering) {\n            this.svgObject = this.renderer.createSvg({\n                id: this.element.id + '_svg',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.cellSettings.border.width.toString() === '0' && this.cellSettings.tileType === 'Rect') {\n                this.svgObject.setAttribute('shape-rendering', 'crispEdges');\n            }\n        }\n        else {\n            this.svgObject = this.canvasRenderer.createCanvas({\n                id: this.element.id + '_canvas',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.allowSelection) {\n                this.createMultiCellDiv(true);\n            }\n        }\n    };\n    /**\n     *  To Remove the SVG.\n     * @private\n     */\n    HeatMap.prototype.removeSvg = function () {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        if (document.getElementById(this.element.id + 'Celltooltipcontainer')) {\n            remove(document.getElementById(this.element.id + 'Celltooltipcontainer'));\n        }\n        if (document.getElementById(this.element.id + 'legendLabelTooltipContainer')) {\n            remove(document.getElementById(this.element.id + 'legendLabelTooltipContainer'));\n        }\n        if (document.getElementById(this.element.id + '_Multi_CellSelection_Canvas')) {\n            remove(document.getElementById(this.element.id + '_Multi_CellSelection_Canvas'));\n        }\n        if (document.getElementById(this.element.id + '_CellSelection_Container')) {\n            remove(document.getElementById(this.element.id + '_CellSelection_Container'));\n        }\n        if (this.svgObject) {\n            var svgElement = document.getElementById(this.svgObject.id);\n            if (svgElement) {\n                while (this.svgObject.childNodes.length) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                remove(this.svgObject);\n            }\n        }\n    };\n    HeatMap.prototype.renderSecondaryElement = function () {\n        var tooltipDiv = this.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        this.element.appendChild(tooltipDiv);\n        var divElement = this.createElement('div', {\n            id: this.element.id + '_CellSelection_Container',\n            styles: 'position:absolute; z-index: 2 ; top:' + this.initialClipRect.y + 'px' + '; left:' + this.initialClipRect.x + 'px',\n        });\n        this.element.appendChild(divElement);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return{ModuleDeclaration[]}\n     * @private\n     */\n    HeatMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showTooltip) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        if (this.legendSettings) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.dataSource) {\n            modules.push({\n                member: 'Adaptor',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of Heatmap\n     */\n    HeatMap.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        this.element.classList.remove('e-heatmap');\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     * @method destroy\n     * @return {void}.\n     */\n    HeatMap.prototype.refresh = function () {\n        _super.prototype.refresh.call(this);\n        this.element.classList.add('e-heatmap');\n    };\n    /**\n     * Appending svg object to the element\n     * @private\n     */\n    HeatMap.prototype.appendSvgObject = function () {\n        if (this.enableCanvasRendering && this.allowSelection) {\n            this.createMultiCellDiv(false);\n        }\n        else {\n            this.element.appendChild(this.svgObject);\n        }\n    };\n    HeatMap.prototype.renderBorder = function () {\n        this.border = {\n            width: 0\n        };\n        var width = 0;\n        var rect = new RectOption(this.element.id + '_HeatmapBorder', this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.drawSvgCanvas.drawRectangle(rect, this.svgObject);\n    };\n    HeatMap.prototype.calculateSize = function () {\n        var width = stringToNumber(this.width, this.element.offsetWidth) || this.element.offsetWidth || 600;\n        var height = stringToNumber(this.height, this.element.offsetHeight) || this.element.offsetHeight || 450;\n        this.availableSize = new Size(width, height);\n        var alignElement = this.element;\n        while (alignElement.parentNode) {\n            if (alignElement.tagName === 'BODY') {\n                break;\n            }\n            var align = alignElement.align;\n            if (align === 'center') {\n                var containerWidth = this.availableSize.width.toString();\n                this.element.style.width = containerWidth + 'px';\n                this.element.style.margin = '0 auto';\n                break;\n            }\n            alignElement = alignElement.parentElement;\n        }\n    };\n    HeatMap.prototype.renderTitle = function () {\n        if (this.titleSettings.text) {\n            var titleStyle = this.titleSettings.textStyle;\n            var anchor = titleStyle.textAlignment === 'Near' ? 'start' :\n                titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.titleCollection[0], titleStyle);\n            var options = new TextOption(this.element.id + '_HeatmapTitle', new TextBasic(titlePositionX(this.availableSize.width - this.margin.left - this.margin.right, this.margin.left, this.margin.right, titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection), titleStyle, titleStyle.color || this.themeStyle.heatMapTitle);\n            if (this.titleCollection.length > 1) {\n                this.drawSvgCanvas.createWrapText(options, titleStyle, this.svgObject);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, this.svgObject, this.titleCollection[0]);\n                if (this.titleCollection[0].indexOf('...') !== -1 && this.enableCanvasRendering) {\n                    this.tooltipCollection.push(new CanvasTooltip(this.titleSettings.text, new Rect(this.margin.left, this.margin.top, this.elementSize.width, this.elementSize.height)));\n                }\n            }\n        }\n    };\n    HeatMap.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId === (this.element.id + '_HeatmapTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.titleSettings.text, x, y, this.element.offsetWidth, this.element.id + '_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch, this);\n        }\n        else {\n            removeElement(this.element.id + '_Title_Tooltip');\n        }\n    };\n    HeatMap.prototype.axisTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId.indexOf(this.element.id + '_XAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_XAxis_MultiLevel') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_MultiLevel') !== -1)) {\n            var tooltipText = getTooltipText(this.tooltipCollection, x, y);\n            if (tooltipText) {\n                showTooltip(tooltipText, x, y, this.element.offsetWidth, this.element.id + '_axis_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n            }\n            else {\n                removeElement(this.element.id + '_axis_Tooltip');\n            }\n        }\n        else {\n            removeElement(this.element.id + '_axis_Tooltip');\n        }\n    };\n    HeatMap.prototype.isHeatmapRect = function (x, y) {\n        var firstRectDetails = [];\n        var lastRectDetails = [];\n        var isRect;\n        var borderBoundary = 5;\n        firstRectDetails.push(this.heatMapSeries.rectPositionCollection[0][0]);\n        lastRectDetails.push(this.heatMapSeries.rectPositionCollection[this.yLength - 1][this.xLength - 1]);\n        if (this.cellSettings.border.width > borderBoundary && (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n            x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n            y <= (lastRectDetails[0].y + lastRectDetails[0].height)) && this.cellSettings.tileType === 'Rect') {\n            var currentRect = this.heatMapSeries.getCurrentRect(x, y);\n            var rectHeight = lastRectDetails[0].height;\n            var rectWidth = lastRectDetails[0].width;\n            var cellBorder = this.cellSettings.border.width / 2;\n            if ((x >= (currentRect.x + cellBorder) && (y >= (currentRect.y + cellBorder)) &&\n                (x <= (currentRect.x + (rectWidth - cellBorder)) &&\n                    (y <= (currentRect.y + (rectHeight - cellBorder)))))) {\n                isRect = true;\n                this.isRectBoundary = true;\n            }\n            else {\n                isRect = false;\n                this.isRectBoundary = false;\n            }\n        }\n        else {\n            isRect = (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n                x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n                y <= (lastRectDetails[0].y + lastRectDetails[0].height));\n            this.isRectBoundary = isRect;\n        }\n        return isRect;\n    };\n    HeatMap.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    };\n    HeatMap.prototype.calculateBounds = function () {\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        var padding = (this.legendModule && this.legendSettings.position === 'Top'\n            && this.legendVisibilityByCellType) || this.titleSettings.textStyle.size === '0px' ? 0 : 16; // title padding\n        var left = margin.left;\n        var width = this.availableSize.width - left - margin.right;\n        if ((this.paletteSettings.colorGradientMode === 'Column' || this.paletteSettings.colorGradientMode === 'Row') &&\n            this.paletteSettings.type === 'Gradient') {\n            if (this.paletteSettings.palette.length === 0) {\n                this.legendVisibilityByCellType = false;\n            }\n            else {\n                for (var i = 0; i < this.paletteSettings.palette.length; i++) {\n                    if (this.paletteSettings.palette[i].value !== null || '') {\n                        this.legendVisibilityByCellType = true;\n                    }\n                    else if (this.paletteSettings.palette[i].value === null || '') {\n                        this.legendVisibilityByCellType = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.titleSettings.text) {\n            this.titleCollection = getTitle(this.titleSettings.text, this.titleSettings.textStyle, width);\n            titleHeight = (measureText(this.titleSettings.text, this.titleSettings.textStyle).height * this.titleCollection.length) +\n                padding;\n        }\n        var top = margin.top + titleHeight;\n        this.titleRect = new Rect(margin.left, margin.top, this.availableSize.width - margin.left - margin.right, titleHeight);\n        var height = this.availableSize.height - top - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        var legendTop = this.initialClipRect.y;\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect);\n        }\n        this.heatMapAxis.measureAxis(this.initialClipRect);\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendSize(this.initialClipRect, legendTop);\n        }\n        this.heatMapAxis.calculateAxisSize(this.initialClipRect);\n    };\n    HeatMap.prototype.refreshBound = function () {\n        this.updateBubbleHelperProperty();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    HeatMap.prototype.initAxis = function () {\n        var axis;\n        var axes = [this.xAxis, this.yAxis];\n        this.axisCollections = [];\n        for (var i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.orientation = (i === 0) ? 'Horizontal' : 'Vertical';\n            axis.jsonCellLabel = [];\n            this.axisCollections.push(axis);\n        }\n    };\n    /**\n     * Method to bind events for HeatMap\n     */\n    HeatMap.prototype.wireEvents = function () {\n        var _this = this;\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick, this);\n        EventHandler.add(this.element, start, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, stop, this.heatMapMouseLeave, this);\n        EventHandler.add(this.element, move, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, cancel, this.heatMapMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize.bind(this));\n        var heatmap = this;\n        /**\n         * Support for touch tapHold and tap for HeatMap\n         */\n        var touchObj = new Touch(this.element, {\n            tapHold: function () {\n                heatmap.isCellTapHold = true;\n                heatmap.getDataCollection();\n                heatmap.currentRect.allowCollection = false;\n                heatmap.setCellOpacity();\n                var argData = {\n                    heatmap: (_this.isBlazor ? null : heatmap),\n                    cancel: false,\n                    name: 'cellSelected',\n                    data: heatmap.multiCellCollection\n                };\n                heatmap.trigger('cellSelected', argData);\n            },\n            tap: function () {\n                var isCellTap = false;\n                if (!heatmap.isCellTapHold) {\n                    isCellTap = true;\n                }\n                heatmap.tooltipOnMouseMove(null, heatmap.currentRect, isCellTap);\n            }\n        });\n        this.setStyle(this.element);\n    };\n    /**\n     * Applying styles for heatmap element\n     */\n    HeatMap.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * Method to print the heatmap.\n     */\n    HeatMap.prototype.print = function () {\n        var exportChart = new ExportUtils(this);\n        exportChart.print();\n    };\n    /**\n     * Method to unbind events for HeatMap\n     */\n    HeatMap.prototype.unWireEvents = function () {\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick);\n        EventHandler.remove(this.element, start, this.heatMapMouseMove);\n        EventHandler.remove(this.element, move, this.heatMapMouseLeave);\n        EventHandler.remove(this.element, move, this.heatMapMouseMove);\n        EventHandler.remove(this.element, cancel, this.heatMapMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize);\n    };\n    /**\n     * Handles the heatmap resize.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapResize = function (e) {\n        var _this = this;\n        this.resizing = true;\n        var argData = {\n            heatmap: (this.isBlazor ? null : this),\n            cancel: false,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n        };\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTimer);\n                return;\n            }\n            _this.createSvg();\n            argData.currentSize = _this.availableSize;\n            _this.trigger('resized', argData);\n            _this.refreshBound();\n            _this.appendSvgObject();\n            if (_this.allowSelection) {\n                _this.updateCellSelection();\n            }\n            _this.trigger('loaded', (_this.isBlazor ? null : { heatmap: _this }));\n            _this.resizing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to bind selection after window resize for HeatMap\n     */\n    HeatMap.prototype.updateCellSelection = function () {\n        var wSize = this.initialClipRect.width / this.axisCollections[0].axisLabelSize;\n        var hSize = this.initialClipRect.height / this.axisCollections[1].axisLabelSize;\n        var x = this.initialClipRect.x;\n        var y = this.initialClipRect.y;\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                for (var i = 0; i < containersRect.childNodes.length; i++) {\n                    containersRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    }\n                }\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClass = this.multiCellCollection[i].cellElement;\n                    var cellIndex = collectionClass.id.replace(this.element.id + '_HeatMapRect_', '');\n                    var index = parseInt(cellIndex, 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                        this.addSvgClass(containersRect.childNodes[index]);\n                    }\n                }\n            }\n        }\n        else if (this.enableCanvasRendering) {\n            var rect = this.multiCellCollection;\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectHeight = initialRect.y + initialRect.height;\n            var rectWidth = initialRect.x + initialRect.width;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                this.multiCellCollection[i].width = rect[i].width = wSize;\n                this.multiCellCollection[i].height = rect[i].height = hSize;\n                this.multiCellCollection[i].x = rect[i].x = x + wSize * this.multiCellCollection[i].xPosition;\n                this.multiCellCollection[i].y = rect[i].y = y + hSize * this.multiCellCollection[i].yPosition;\n                var rectImage = oldCanvas.getContext('2d').getImageData(rect[i].x, rect[i].y, rect[i].width, rect[i].height);\n                newCanvas.getContext('2d').putImageData(rectImage, rect[i].x, rect[i].y);\n                oldCanvas.style.opacity = '0.3';\n            }\n            var topPositions = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPositions, 0, 0);\n            var bottomPositions = oldCanvas.getContext('2d').getImageData(0, rectHeight, this.availableSize.width, this.availableSize.height - rectHeight);\n            newCanvas.getContext('2d').putImageData(bottomPositions, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').\n                getImageData(rectWidth, 0, this.availableSize.width - rectWidth, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, rectWidth, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n            removeElement(this.element.id + '_selectedCells');\n        }\n    };\n    HeatMap.prototype.clearSVGSelection = function () {\n        var rect = document.getElementById(this.element.id + '_Container_RectGroup');\n        var text = document.getElementById(this.element.id + '_Container_TextGroup');\n        for (var i = 0; i < rect.childNodes.length; i++) {\n            var elementClassName = rect.childNodes[i].getAttribute('class');\n            if (elementClassName === this.element.id + '_selected') {\n                this.removeSvgClass(rect.childNodes[i], elementClassName);\n            }\n            rect.childNodes[i].setAttribute('opacity', '1');\n            if (this.cellSettings.showLabel && text.childNodes[i]) {\n                text.childNodes[i].setAttribute('opacity', '1');\n            }\n        }\n    };\n    /**\n     * Get the maximum length of data source for both horizontal and vertical\n     * @private\n     */\n    HeatMap.prototype.calculateMaxLength = function () {\n        var dataSource = this.completeAdaptDataSource;\n        if (dataSource && dataSource.length > 0) {\n            var xAxisMax = dataSource.length - 1;\n            var yAxisMax = 0;\n            for (var i = 0; i <= xAxisMax; i++) {\n                var length_1 = dataSource[i].length;\n                yAxisMax = yAxisMax > length_1 ? yAxisMax : length_1;\n            }\n            this.axisCollections[0].maxLength = xAxisMax;\n            this.axisCollections[1].maxLength = yAxisMax - 1;\n        }\n        else {\n            this.axisCollections[0].maxLength = 0;\n            this.axisCollections[1].maxLength = 0;\n        }\n    };\n    /**\n     * To find mouse x, y for aligned heatmap element svg position\n     */\n    HeatMap.prototype.setMouseXY = function (pageX, pageY) {\n        var rect = this.element.getBoundingClientRect();\n        var svgCanvasRect;\n        if (this.enableCanvasRendering) {\n            svgCanvasRect = document.getElementById(this.element.id + '_canvas').getBoundingClientRect();\n        }\n        else {\n            svgCanvasRect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        }\n        this.mouseX = (pageX - rect.left) - Math.max(svgCanvasRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgCanvasRect.top - rect.top, 0);\n    };\n    HeatMap.prototype.heatMapMouseClick = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = false;\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n        if (isheatmapRect) {\n            var currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n            this.trigger('cellClick', {\n                heatmap: (this.isBlazor ? null : this),\n                value: currentRect.value,\n                x: currentRect.x,\n                y: currentRect.y,\n                xLabel: this.heatMapSeries.hoverXAxisLabel,\n                yLabel: this.heatMapSeries.hoverYAxisLabel,\n                xValue: this.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMapSeries.hoverYAxisValue,\n                cellElement: this.enableCanvasRendering ? null : document.getElementById(currentRect.id),\n                event: e\n            });\n        }\n        this.notify('click', e);\n        if (this.paletteSettings.type !== 'Gradient' && this.legendModule\n            && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            var page = this.legendModule.navigationCollections;\n            if (page.length && pageX > page[0].x && pageX < page[0].x + page[0].width &&\n                pageY > page[0].y && pageY < page[0].y + page[0].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, true);\n            }\n            else if (page.length && pageX > page[1].x && pageX < page[1].x + page[1].width &&\n                pageY > page[1].y && pageY < page[1].y + page[1].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, false);\n            }\n            var legendRange = this.legendModule.legendRange;\n            var legendTextRange = this.legendModule.legendTextRange;\n            var loop = true;\n            for (var i = 0; i < legendRange.length; i++) {\n                if (this.legendModule && this.legendSettings.toggleVisibility &&\n                    this.legendModule.currentPage === legendRange[i].currentPage) {\n                    if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                        (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                        ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                            pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                            (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                        this.legendModule.legendRangeSelection(i);\n                        loop = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseMove = function (e) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = false;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        this.setMouseXY(pageX, pageY);\n        this.mouseAction(e, pageX, pageY, touchArg, elementRect);\n        return true;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     */\n    HeatMap.prototype.mouseAction = function (e, pageX, pageY, touchArg, elementRect) {\n        var tooltipText;\n        if (e.target && e.target.id) {\n            var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n            if (this.legendModule) {\n                if (isheatmapRect) {\n                    if (this.paletteSettings.type === 'Gradient' &&\n                        this.legendSettings.showGradientPointer && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                        this.legendModule.renderGradientPointer(e, pageX, pageY);\n                    }\n                }\n                else {\n                    this.legendModule.removeGradientPointer();\n                }\n                this.renderMousePointer(pageX, pageY);\n            }\n            var isshowTooltip = void 0;\n            var currentRect = void 0;\n            isshowTooltip = this.showTooltip && this.tooltipModule ? isheatmapRect : false;\n            if (isheatmapRect) {\n                currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n                if (e.which !== 2 && e.which !== 3) {\n                    isshowTooltip = this.cellSelectionOnMouseMove(e, currentRect, pageX, pageY, isshowTooltip);\n                }\n            }\n            this.tooltipOnMouseMove(e, currentRect, isshowTooltip, isheatmapRect);\n            if (this.legendModule && this.legendSettings.visible && this.paletteSettings.type === 'Fixed' &&\n                this.legendSettings.enableSmartLegend && this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltip(pageX, pageY);\n            }\n            if (!this.enableCanvasRendering) {\n                if (this.titleSettings.text && this.titleSettings.textStyle.textOverflow === 'Trim') {\n                    this.titleTooltip(e, pageX, pageY, this.isTouch);\n                }\n                this.axisTooltip(e, pageX, pageY, this.isTouch);\n                if (this.legendModule && this.legendSettings.visible && this.legendSettings.showLabel && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendLabelTooltip(e, pageX, pageY);\n                }\n                if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendTitleTooltip(e, pageX, pageY);\n                }\n            }\n            else {\n                elementRect = this.element.getBoundingClientRect();\n                var tooltipRect = (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                    this.legendSettings.labelDisplayType === 'None') ? false : true;\n                tooltipText = getTooltipText(this.tooltipCollection, pageX, pageY) ||\n                    (this.legendModule && tooltipRect && (getTooltipText(this.legendModule.legendLabelTooltip, pageX, pageY)\n                        || getTooltipText(this.legendModule.legendTitleTooltip, pageX, pageY)));\n                if (tooltipText) {\n                    showTooltip(tooltipText, pageX, pageY, this.element.offsetWidth, this.element.id + '_canvas_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Triggering cell selection\n     */\n    HeatMap.prototype.cellSelectionOnMouseMove = function (e, currentRect, pageX, pageY, isshowTooltip) {\n        if ((this.cellSettings.tileType === 'Rect' && e.type === 'mousedown' || e.type === 'touchstart'\n            || e.type === 'pointerdown') && this.allowSelection) {\n            this.previousRect = currentRect;\n            this.multiSelection = true;\n            this.rectSelected = true;\n            this.initialCellX = pageX;\n            this.initialCellY = pageY;\n            e.preventDefault();\n        }\n        if (this.cellSettings.tileType === 'Rect' && this.multiSelection && currentRect) {\n            isshowTooltip = false;\n            this.highlightSelectedCells(this.previousRect, currentRect, pageX, pageY, e);\n        }\n        return isshowTooltip;\n    };\n    /**\n     * Rendering tooltip on mouse move\n     */\n    HeatMap.prototype.tooltipOnMouseMove = function (e, currentRect, isshowTooltip, isheatmapRect) {\n        var _this = this;\n        if (isshowTooltip && currentRect) {\n            if (this.tempTooltipRectId !== currentRect.id) {\n                if (this.showTooltip) {\n                    if ((this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n                        && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(currentRect.id);\n                    }\n                    this.tooltipModule.renderTooltip(currentRect);\n                    if (this.isTouch) {\n                        if (this.tooltipTimer) {\n                            window.clearTimeout(this.tooltipTimer);\n                        }\n                        this.tooltipTimer = setTimeout(function () {\n                            _this.tooltipModule.tooltipObject.fadeOut();\n                            _this.tooltipModule.isFadeout = true;\n                        }, 1500);\n                        if (e) {\n                            if (e.type === 'touchmove') {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }\n                this.tempTooltipRectId = currentRect.id;\n            }\n        }\n        else {\n            if (e !== null) {\n                var borderBoundary = 5;\n                if (!isheatmapRect) {\n                    if ((this.cellSettings.enableCellHighlighting || this.showTooltip) && !this.enableCanvasRendering &&\n                        this.cellSettings.border.width < borderBoundary) {\n                        this.heatMapSeries.highlightSvgRect(e.target.id);\n                    }\n                    if (this.tooltipModule && this.showTooltip) {\n                        this.tooltipModule.showHideTooltip(false, true);\n                    }\n                }\n                else if (!this.showTooltip && this.cellSettings.border.width > borderBoundary) {\n                    this.heatMapSeries.highlightSvgRect(e.target.id);\n                }\n            }\n            this.tempTooltipRectId = '';\n        }\n    };\n    /**\n     * To select the multiple cells on mouse move action\n     */\n    HeatMap.prototype.highlightSelectedCells = function (previousRect, currentRect, pageX, pageY, e) {\n        var pXIndex = previousRect.xIndex;\n        var pYIndex = previousRect.yIndex;\n        var cXIndex = currentRect.xIndex;\n        var cYIndex = currentRect.yIndex;\n        this.currentRect = currentRect;\n        this.selectedCellsRect = new Rect(0, 0, 0, 0);\n        this.selectedCellsRect.x = previousRect.x > currentRect.x ? currentRect.x : previousRect.x;\n        this.selectedCellsRect.y = previousRect.y > currentRect.y ? currentRect.y : previousRect.y;\n        this.selectedCellsRect.width = ((previousRect.x > currentRect.x ? (pXIndex - cXIndex) :\n            (cXIndex - pXIndex)) + 1) * currentRect.width;\n        this.selectedCellsRect.height = ((previousRect.y > currentRect.y ? (pYIndex - cYIndex) :\n            (cYIndex - pYIndex)) + 1) * currentRect.height;\n        if (e.type === 'touchstart') {\n            this.isCellTapHold = true;\n        }\n        else {\n            this.isCellTapHold = false;\n        }\n        e.preventDefault();\n        if (e.ctrlKey === false && e.type !== 'touchstart' && e.type !== 'touchmove') {\n            this.removeSelectedCellsBorder();\n        }\n        var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n        var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n        var parentDiv = document.getElementById(this.element.id + '_CellSelection_Container');\n        var svgObject = this.renderer.createSvg({\n            id: this.element.id + '_CellSelection_Container_svg',\n            width: this.initialClipRect.width,\n            height: this.initialClipRect.height,\n        });\n        parentDiv.appendChild(svgObject);\n        var parent = document.getElementById(this.element.id + '_CellSelection_Container_svg');\n        var rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX), Math.abs(pageY - this.initialCellY));\n        var rectItems = new RectOption(this.element.id + '_selectedCells', '#87ceeb', { color: 'transparent', width: 1 }, 1, rect, '#0000ff');\n        parent.appendChild(this.renderer.drawRectangle(rectItems));\n        document.getElementById(this.element.id + '_selectedCells').style.opacity = '0.5';\n    };\n    /**\n     * Method to get selected cell data collection for HeatMap\n     */\n    HeatMap.prototype.getDataCollection = function () {\n        var pXIndex = this.previousRect.xIndex;\n        var pYIndex = this.previousRect.yIndex;\n        var cXIndex = this.currentRect.xIndex;\n        var cYIndex = this.currentRect.yIndex;\n        var minX = cXIndex > pXIndex ? pXIndex : cXIndex;\n        var maxX = cXIndex > pXIndex ? cXIndex : pXIndex;\n        var minY = cYIndex > pYIndex ? pYIndex : cYIndex;\n        var maxY = cYIndex > pYIndex ? cYIndex : pYIndex;\n        var tempX = minX;\n        var tempY = minY;\n        var cellX = this.previousRect.x;\n        var cellY = this.previousRect.y;\n        this.getCellCollection(this.currentRect, this.previousRect, true, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        tempX = minX;\n        tempY = minY;\n        cellX = this.previousRect.x;\n        cellY = this.previousRect.y;\n        this.checkSelectedCells();\n        this.getCellCollection(this.currentRect, this.previousRect, false, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        this.selectedMultiCellCollection = [];\n        this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n        this.selectedCellCount = 0;\n    };\n    /**\n     * To get the selected datas.\n     */\n    HeatMap.prototype.getCellCollection = function (currentRect, previousRect, singleCellData, tempX, tempY, maxX, maxY, minX, cellX, cellY) {\n        var xIndex = Math.abs((currentRect.xIndex === previousRect.xIndex ?\n            0 : currentRect.xIndex - previousRect.xIndex)) + 1;\n        var yIndex = Math.abs((currentRect.yIndex === previousRect.yIndex ?\n            0 : currentRect.yIndex - previousRect.yIndex)) + 1;\n        for (var i = 0; i < (xIndex * yIndex); i++) {\n            if (singleCellData) {\n                this.getSelectedCellData(cellX, cellY, true);\n            }\n            else {\n                this.getSelectedCellData(cellX, cellY, false);\n            }\n            if (tempX < maxX) {\n                cellX += currentRect.xIndex > previousRect.xIndex ? currentRect.width : -currentRect.width;\n                tempX++;\n            }\n            else if (tempY < maxY) {\n                cellY += currentRect.yIndex > previousRect.yIndex ? currentRect.height : -currentRect.height;\n                cellX = previousRect.x;\n                tempX = minX;\n            }\n        }\n    };\n    /**\n     * To remove the selection on mouse click without ctrl key.\n     */\n    HeatMap.prototype.removeSelectedCellsBorder = function () {\n        if (!this.enableCanvasRendering) {\n            var containerRect = document.getElementById(this.element.id + '_Container_RectGroup');\n            var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n            for (var i = 0; i < containerRect.childNodes.length; i++) {\n                var elementClassName = containerRect.childNodes[i].getAttribute('class');\n                containerRect.childNodes[i].setAttribute('opacity', '0.3');\n                if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                    containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                }\n            }\n        }\n        else {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                var rect = this.previousSelectedCellsRect[i];\n                ctx.save();\n                ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n        }\n        this.multiCellCollection = [];\n    };\n    /**\n     * To highlight the selected multiple cells on mouse move action in canvas mode.\n     */\n    HeatMap.prototype.highlightSelectedAreaInCanvas = function (rect) {\n        if (rect.x) {\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectImage = oldCanvas.getContext('2d').getImageData(rect.x, rect.y, rect.width, rect.height);\n            newCanvas.getContext('2d').putImageData(rectImage, rect.x, rect.y);\n            oldCanvas.style.opacity = '0.3';\n            var topPosition = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPosition, 0, 0);\n            var bottomPosition = oldCanvas.getContext('2d').getImageData(0, initialRect.y + initialRect.height, this.availableSize.width, this.availableSize.height - (initialRect.y + initialRect.height));\n            newCanvas.getContext('2d').putImageData(bottomPosition, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').getImageData(initialRect.x + initialRect.width, 0, this.availableSize.width - (initialRect.x + initialRect.width), this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, initialRect.x + initialRect.width, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n        }\n    };\n    /**\n     * To get the collection of selected cells.\n     */\n    HeatMap.prototype.getSelectedCellData = function (cellX, cellY, cellCollection) {\n        var xAxis = this.axisCollections[0];\n        var yAxis = this.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var rectPosition = this.heatMapSeries.getCurrentRect(cellX + 1, cellY + 1);\n        var currentRect = document.getElementById(rectPosition.id);\n        var cellDetails = new SelectedCellDetails(null, '', '', 0, 0, null, 0, 0, 0, 0, 0, 0);\n        cellDetails.value = rectPosition.value;\n        cellDetails.xLabel = xLabels[rectPosition.xIndex].toString();\n        cellDetails.yLabel = yLabels[rectPosition.yIndex].toString();\n        cellDetails.xValue = xAxis.labelValue[rectPosition.xIndex];\n        cellDetails.yValue = yAxis.labelValue.slice().reverse()[rectPosition.yIndex];\n        cellDetails.cellElement = this.enableCanvasRendering ? null : currentRect;\n        cellDetails.xPosition = rectPosition.xIndex;\n        cellDetails.yPosition = rectPosition.yIndex;\n        cellDetails.width = this.currentRect.width;\n        cellDetails.height = this.currentRect.height;\n        cellDetails.x = this.currentRect.x;\n        cellDetails.y = this.currentRect.y;\n        this.currentRect.allowCollection = true;\n        this.addSvgClass(currentRect);\n        if (cellCollection) {\n            this.selectedMultiCellCollection.push(cellDetails);\n            this.currentRect.allowCollection = false;\n        }\n        else {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                if (this.multiCellCollection[i].xPosition === cellDetails.xPosition &&\n                    this.multiCellCollection[i].yPosition === cellDetails.yPosition) {\n                    this.currentRect.allowCollection = false;\n                    if (this.selectedCellCount === this.selectedMultiCellCollection.length) {\n                        this.currentRect.allowCollection = false;\n                        if (!this.enableCanvasRendering) {\n                            for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                                var rectElement = this.selectedMultiCellCollection[j].cellElement;\n                                if (rectElement) {\n                                    var index = rectElement.id.replace(this.element.id + '_HeatMapRect_', '');\n                                    var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                                    var elementClassName = rectElement.getAttribute('class');\n                                    rectElement.setAttribute('opacity', '0.3');\n                                    var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                                    if (getText) {\n                                        getText.setAttribute('opacity', '0.3');\n                                    }\n                                    this.removeSvgClass(rectElement, elementClassName);\n                                }\n                            }\n                        }\n                        else {\n                            var ctx = this.secondaryCanvasRenderer.ctx;\n                            var rect = this.canvasSelectedCells;\n                            ctx.save();\n                            ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                            ctx.restore();\n                            this.selectedCellsRect = new Rect(0, 0, 0, 0);\n                        }\n                        this.multiCellCollection.splice(i, 1);\n                    }\n                }\n            }\n        }\n        if (rectPosition.visible && !isNullOrUndefined(rectPosition.value) && this.currentRect.allowCollection === true) {\n            this.multiCellCollection.push(cellDetails);\n        }\n    };\n    /**\n     * To add class for selected cells\n     * @private\n     */\n    HeatMap.prototype.addSvgClass = function (element) {\n        if (!this.enableCanvasRendering) {\n            var className = this.element.id + '_selected';\n            element.setAttribute('class', className);\n        }\n    };\n    /**\n     * To remove class for unselected cells\n     * @private\n     */\n    HeatMap.prototype.removeSvgClass = function (rectElement, className) {\n        if (className) {\n            rectElement.setAttribute('class', className.replace(className, ''));\n        }\n    };\n    /**\n     * To clear the multi cell selection\n     */\n    HeatMap.prototype.clearSelection = function () {\n        if (!this.enableCanvasRendering && this.allowSelection) {\n            this.clearSVGSelection();\n        }\n        if (this.enableCanvasRendering) {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                ctx.save();\n                ctx.clearRect(this.previousSelectedCellsRect[i].x - 1, this.previousSelectedCellsRect[i].y - 1, this.previousSelectedCellsRect[i].width + 2, this.previousSelectedCellsRect[i].height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n            var canvas = document.getElementById(this.element.id + '_canvas');\n            canvas.style.opacity = '1';\n        }\n        this.tempMultiCellCollection = [];\n        this.multiCellCollection = [];\n        this.rectSelected = false;\n    };\n    HeatMap.prototype.renderMousePointer = function (pageX, pageY) {\n        var legendRange = this.legendModule.legendRange;\n        var legendTextRange = this.legendModule.legendTextRange;\n        var loop = true;\n        for (var i = 0; i < legendRange.length; i++) {\n            if (this.legendSettings.toggleVisibility && this.legendModule.currentPage === legendRange[i].currentPage) {\n                if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                    (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                    ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                        pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                        (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = 'Pointer';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = 'Pointer';\n                    }\n                    loop = false;\n                }\n                else if (loop) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = '';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseLeave = function (e) {\n        var _this = this;\n        if (e.target && e.target.id &&\n            (this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n            && !this.enableCanvasRendering) {\n            this.heatMapSeries.highlightSvgRect(this.tempTooltipRectId);\n        }\n        if (this.allowSelection && this.multiSelection) {\n            this.multiSelection = false;\n            if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'pointerup') {\n                if (e.which !== 2 && e.which !== 3) {\n                    if (this.isCellTapHold === false) {\n                        this.getDataCollection();\n                        this.currentRect.allowCollection = false;\n                        this.setCellOpacity();\n                        var argData = {\n                            heatmap: (this.isBlazor ? null : this),\n                            cancel: false,\n                            name: 'cellSelected',\n                            data: this.multiCellCollection\n                        };\n                        this.trigger('cellSelected', argData);\n                    }\n                    else {\n                        this.isCellTapHold = false;\n                    }\n                }\n            }\n            else if (e.type === 'mouseleave' && (this.element.id + '_selectedCells')) {\n                removeElement(this.element.id + '_selectedCells');\n            }\n        }\n        if (this.tooltipModule && this.showTooltip && e.type === 'mouseleave') {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.tempTooltipRectId = '';\n        if (this.legendModule && this.legendSettings.visible && this.legendModule.tooltipObject &&\n            this.legendModule.tooltipObject.element) {\n            var tooltipElement_1 = this.legendModule.tooltipObject.element.firstChild;\n            if (e.type === 'mouseleave') {\n                tooltipElement_1.setAttribute('opacity', '0');\n            }\n            else {\n                if (this.legendTooltipTimer) {\n                    window.clearTimeout(this.legendTooltipTimer);\n                }\n                this.legendTooltipTimer = setTimeout(function () {\n                    tooltipElement_1.setAttribute('opacity', '0');\n                }, 1500);\n            }\n        }\n        if (this.paletteSettings.type === 'Gradient' && this.legendModule && this.legendSettings.showGradientPointer &&\n            this.legendSettings.visible && this.legendVisibilityByCellType) {\n            if (e.type === 'mouseleave') {\n                this.legendModule.removeGradientPointer();\n            }\n            else {\n                if (this.gradientTimer) {\n                    window.clearTimeout(this.gradientTimer);\n                }\n                this.gradientTimer = setTimeout(function () { _this.legendModule.removeGradientPointer(); }, 1500);\n            }\n        }\n        if (this.enableCanvasRendering) {\n            var main = document.getElementById(this.element.id + '_hoverRect_canvas');\n            if (main) {\n                main.style.visibility = 'hidden';\n                this.tempRectHoverClass = '';\n            }\n        }\n        if (this.titleSettings.text && this.titleCollection[0].indexOf('...') !== -1) {\n            if (!this.enableCanvasRendering) {\n                removeElement(this.element.id + '_Title_Tooltip');\n            }\n            else {\n                removeElement(this.element.id + '_canvas_Tooltip');\n            }\n        }\n        return true;\n    };\n    /**\n     * Method to Check for deselection of cell.\n     */\n    HeatMap.prototype.checkSelectedCells = function () {\n        if (!this.enableCanvasRendering) {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].cellElement.getAttribute('id')\n                        === this.multiCellCollection[i].cellElement.getAttribute('id')) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n        else {\n            this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n            this.canvasSelectedCells.x = this.selectedCellsRect.x;\n            this.canvasSelectedCells.y = this.selectedCellsRect.y;\n            this.canvasSelectedCells.width = this.selectedCellsRect.width;\n            this.canvasSelectedCells.height = this.selectedCellsRect.height;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].xPosition === this.multiCellCollection[i].xPosition &&\n                        this.selectedMultiCellCollection[j].yPosition === this.multiCellCollection[i].yPosition) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n            if (this.rectSelected && this.paletteSettings.type === 'Gradient') {\n                this.legendModule.removeGradientPointer();\n            }\n        }\n    };\n    /**\n     * Method to remove opacity for text of selected cell for HeatMap\n     */\n    HeatMap.prototype.removeOpacity = function (containersRect, containerText) {\n        for (var i = 0; i < containersRect.childNodes.length; i++) {\n            containersRect.childNodes[i].setAttribute('opacity', '0.3');\n            if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                containerText.childNodes[i].setAttribute('opacity', '0.3');\n            }\n        }\n    };\n    /**\n     * Method to set opacity for selected cell for HeatMap\n     */\n    HeatMap.prototype.setCellOpacity = function () {\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                this.tempMultiCellCollection.push(this.multiCellCollection);\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                this.removeOpacity(containersRect, containerText);\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClasss = this.multiCellCollection[i].cellElement;\n                    var index = parseInt(collectionClasss.id.replace(this.element.id + '_HeatMapRect_', ''), 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.previousSelectedCellsRect.push(this.selectedCellsRect);\n            this.highlightSelectedAreaInCanvas(this.selectedCellsRect);\n        }\n        removeElement(this.element.id + '_selectedCells');\n    };\n    /**\n     * To create div container for rendering two layers of canvas.\n     * @return {void}\n     * @private\n     */\n    HeatMap.prototype.createMultiCellDiv = function (onLoad) {\n        if (onLoad) {\n            var divElement = this.createElement('div', {\n                id: this.element.id + '_Multi_CellSelection_Canvas',\n                styles: 'position:relative'\n            });\n            this.element.appendChild(divElement);\n            divElement.appendChild(this.svgObject);\n            this.svgObject.style.position = 'absolute';\n            this.svgObject.style.left = '0px';\n            this.svgObject.style.top = '0px';\n            this.svgObject.style.zIndex = '0';\n        }\n        else {\n            var element = document.getElementById(this.element.id + '_Multi_CellSelection_Canvas');\n            var secondaryCanvas = this.secondaryCanvasRenderer.createCanvas({\n                width: this.availableSize.width,\n                height: this.availableSize.height, x: 0, y: 0,\n                style: 'position: absolute; z-index: 1'\n            });\n            element.appendChild(secondaryCanvas);\n        }\n    };\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Property('SVG')\n    ], HeatMap.prototype, \"renderingMode\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Complex({}, Data)\n    ], HeatMap.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Material')\n    ], HeatMap.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], HeatMap.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], HeatMap.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.heatMapTitleFont }, Title)\n    ], HeatMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"xAxis\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], HeatMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, PaletteSettings)\n    ], HeatMap.prototype, \"paletteSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], HeatMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"yAxis\", void 0);\n    __decorate([\n        Complex({}, CellSettings)\n    ], HeatMap.prototype, \"cellSettings\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"legendRender\", void 0);\n    HeatMap = __decorate([\n        NotifyPropertyChanges\n    ], HeatMap);\n    return HeatMap;\n}(Component));\nexport { HeatMap };\n","import * as index from './index';\nindex.HeatMap.Inject(index.Legend, index.Tooltip, index.Adaptor);\nexport * from './index';\n"],"names":["getThemeColor","theme","style","toLowerCase","heatMapTitle","axisTitle","axisLabel","cellBorder","background","cellTextColor","toggledColor","emptyCellColor","legendLabel","palette","color","stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","innerText","position","visibility","fontSize","size","fontWeight","fontStyle","fontFamily","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","titlePositionX","width","leftPadding","rightPadding","titleStyle","textAlignment","sum","values","_i","values_1","length","titlePositionY","heatmapSize","topPadding","bottomPadding","height","rotateTextSize","angle","box","options","renderer","SvgRenderer","svgObject","createSvg","font-size","font-style","font-family","font-weight","transform","text-anchor","createText","getBoundingClientRect","remove","right","bottom","getTitle","title","titleCollection","textOverflow","textWrap","push","textTrim","textNone","currentLabel","maximumWidth","textCollection","split","label","labelCollection","i","len","concat","maxWidth","index","substring","showTooltip","x","y","areaWidth","element","isTouch","heatmap","tooltip","initialClipRect","toString","styles","titleSettings","availableSize","setTimeout","removeElement","getElement","increaseDateTimeInterval","interval","intervalType","increment","result","Date","Math","ceil","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","getTooltipText","tooltipCollection","xPosition","yPosition","region","colorNameToHex","window","getComputedStyle","isRGBValue","exec","convertToHexCode","RgbColor","componentToHex","R","G","B","hex","convertHexToColor","formatValue","isCustom","format","tempInterval","formatFun","replace","Theme","heatMapTitleFont","titleFont","axisTitleFont","axisLabelFont","legendLabelFont","rectLabelFont","tooltipFont","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Font","_super","apply","Property","ChildProperty","Margin","Border","TooltipBorder","BubbleData","Title","Complex","FillColor","PaletteCollection","AxisLabelBorder","BubbleSize","MultiLevelCategories","MultiLevelLabels","type","Collection","ColorCollection","startValue","endValue","minColor","maxColor","BubbleTooltipData","mappingName","bubbleData","valueType","LegendColorCollection","isHidden","MultipleRow","start","end","row","PaletteSettings","g","CellColor","heatMap","convertToRGB","colorMapping","previousColor","nextColor","previousOffset","isColorRange","nextOffset","paletteSettings","offset","Number","colorCollection","dataSourceMinValue","fillColor","dataSourceMaxValue","getEqualColor","percent","isNaN","getPercentageColor","rgbToHex","list","convertToHex","itemColor","substr","colorSplit","previous","next","prevColor","getPercentage","full","round","getColorCollection","legendColorCollection","range","j","minValue","bubbleSizeWithColor","minColorValue","maxValue","maxColorValue","emptyPointColor","themeStyle","tempcolorMapping","orderbyOffset","isCompact","offsets","extend","updateLegendColorCollection","isLabel","unshift","returnCollection","PaletterColor","sort","a","isNullOrUndefined","getColorByValue","rbg","compareValue","cellSettings","tileType","bubbleType","singleValue","legendRange","legendVisibilityByCellType","legendModule","visible","colorGradientMode","TextElement","fontModel","fontColor","fill","CustomizeOption","PathOption","opacity","dashArray","_this","call","stroke","parseFloat","CurrentRect","xIndex","yIndex","xValue","yValue","displayText","textId","allowCollection","SelectedCellDetails","xLabel","yLabel","cellElement","RectOption","border","rect","borderColor","rx","ry","CircleOption","cx","cy","Rect","TextOption","basic","labelRotation","baseline","dy","TextBasic","anchor","baseLine","Line","x1","y1","x2","y2","LineOption","line","strokewidth","dasharray","PathAttributes","path","borderWidth","Path","innerR","radius","counterClockWise","DrawSvgCanvas","drawRectangle","properties","parentElement","isFromSeries","enableCanvasRendering","drawCanvasRectangle","canvasRenderer","drawCircle","drawCanvasCircle","drawPath","drawCanvasPath","canvasDrawText","createWrapText","tspanElement","renderOptions","dominant-baseline","createTSpan","drawLine","translateX","translateY","ctx","getOptionValue","save","fillStyle","textAlign","textBaseline","translate","rotate","PI","fillText","restore","setAttributes","canvas","lineWidth","dashArrayString","setLineDash","strokeStyle","canvasCtx","beginPath","globalAlpha","drawCornerRadius","cornerRadius","moveTo","arcTo","closePath","arc","dataSplit","lineTo","Gradient","GradientColor","colorStop","CanvasTooltip","GradientPointer","pathX1","pathY1","pathX2","pathY2","pathX3","pathY3","CurrentLegendRect","LegendRange","currentPage","ToggleVisibility","MultiLevelPosition","Axis","multipleRow","nearSizes","farSizes","maxLabelSize","titleSize","multilevel","axisLabels","tooltipLabels","labelValue","axisLabelSize","axisLabelInterval","dateTimeAxisLabelInterval","maxLength","min","max","isIntersect","jsonCellLabel","multiLevelSize","xAxisMultiLabelHeight","yAxisMultiLabelHeight","multiLevelPosition","computeSize","axis","getTitleSize","getMaxLabelSize","getMultilevelLabelsHeight","multiLevelLabels","multiLevelLabelSize","multiPosition","innerPadding","orientation","level0","level1","isInversed","opposedPosition","labelSize","multiLevel","categoryLabel","categories","size_1","textStyle","gap","startPosition","endPosition","multiLevelLabelsHeight","isVertical","padding","map","heatMapAxis","calculateLeftPosition","calculateWidth","maximumTextWidth","abs","overflow","labels","count","showLabelOn","labelIntersectAction","enableTrim","startX","previousEnd","previousStart","clearMultipleRow","elementSize","axisInterval","startPoint","endPoint","reverse","maxLabelLength","k","calculateNumericAxisLabels","adaptorMin","adaptorMax","adaptorModule","isCellData","adaptiveXMinMax","adaptiveYMinMax","minimum","maximum","temp","labelFormat","match","intl","getNumberFormat","floor","calculateCategoryAxisLabels","calculateDateTimeAxisLabel","option","skeleton","dateParser","getDateParser","dateFormatter","getDateFormat","parse","DataUtil","parseJson","val","getTime","getSkeleton","calculateLabelInterval","getTotalLabelLength","numberOfDays","year","month","day","minutes","difference","days","years","months","hours","clearAxisLabel","AxisHelper","drawSvgCanvas","renderAxes","axisElement","createGroup","axes","axisCollections","drawXAxisLine","drawXAxisTitle","drawXAxisLabels","drawYAxisLine","drawYAxisTitle","drawYAxisLabels","drawMultiLevels","parent","titlepadding","calculateVisibleLabels","axisCollection","data","dataSourceSettings","processLabels","isJsonData","adaptorType","measureAxis","calculateAxisSize","axis_1","i_1","compactInterval","tempintervel","labelPadding","lableStrtX","labelElement","borderElement","lableRect","drawXAxisBorder","rotateSize","diffHeight","yAxis","xAxis","labelInterval","lableStartY","labelRect","axisWidth","indexValue","Browser","isIE","drawYAxisBorder","lableX","endX","endY","startY","createAxisBorderElement","lableY","labelBorder","pathOptions","canvasTranslate","renderXAxisMultiLevelLabels","renderYAxisMultiLevelLabels","textLength","pathRect","level","alignment","textBasic","i_2","renderXAxisLabelBorder","createBorderElement","labelIndex","startY2","renderYAxisLabelBorder","borderIndex","calculateNumberOfDays","date","firstDate","secondDate","givenDate","CellSettings","Series","cellColor","renderRectSeries","createSeriesGroup","isValueInRange","xLength","yLength","tempBorder","circleRadius","tempX","tempY","dataXIndex","dataYIndex","cellSetting","tempWidth","tempHeight","tempVal","tempRectPosition","rectPositionCollection","bubbleColorValue","getBubbleRadius","dataMin","dataMax","setTextAndColor","rectPosition","updateRectDetails","showLabel","getFormatedText","cellRender","cellRendering","renderingMode","renderTileCell","updateLabelVisibleStatus","renderBubbleCell","renderSectorCell","checkLabelXDisplay","checkLabelYDisplay","isFinite","tempCircleRadius","getRadiusBypercentage","rangeSelection","isCellValueInRange","themeCellTextStyle","getSaturatedColor","containerTextObject","containerRectObject","toggleValue","clonedDataSource","bubbleText","xLabels","yLabels","slice","yLabelValue","argData","isBlazor","cancel","name","trigger","adaptData","isColorValueExist","tempBubbleCollection","bubbleDataMapping","bubblePosition","curve","startAngle","endAngle","cX","cY","X1","Y1","tempcX","tempcY","pathBorderWidth","centerX","centerY","tempColor","sectorContibution","cos","sin","sector","calculateShapes","pathString","merge","circle","bubbleSize","valueInPrecentage","isInversedBubbleSize","saturatedColor","rgbValue","backgroundColor","highlightSvgRect","tempID","tempIndex","tempRectHoverClass","enableCellHighlighting","oldElement","rectSelected","setAttribute","getFormat","getCurrentRect","currentRect","firstRectDetails","heatMapSeries","rectX","rectY","hoverXAxisLabel","hoverXAxisValue","hoverYAxisLabel","hoverYAxisValue","TooltipSettings","Tooltip","isFirst","isFadeout","getModuleName","showHideTooltip","isShow","ele","tooltipObject","isRectBoundary","fadeOut","firstChild","destroy","createTooltip","tempTooltipText","tool","enableAnimation","location","content","tooltipSettings","template","areaBounds","createTooltipDiv","allowSelection","element2","getTooltipContent","hetmapSeries","value1","value2","renderTooltip","tooltipRender","tooltipCallback","observedArgs","TwoDimensional","processDataSource","dataSource","tempCloneData","completeDataSource","minVal","maxVal","tempVariable","dataLength","labelLength","cloneDataIndex","minMaxDatasource","tempSizeArray","tempColorArray","z","processDataArray","minMaxVal","getMinMaxValue","internalArray","tempx","minMaxValue","getMinValue","getMaxValue","performSort","filter","checkmin","LegendSettings","Legend","maxLegendLabelSize","gradientScaleSize","segmentCollections","segmentCollectionsLabels","textWrapCollections","labelCollections","legendSize","previousOptions","listPerPage","numberOfPages","listWidth","fillRect","legendRect","lastList","navigationCollections","pagingRect","listInterval","legendLabelTooltip","legendTitleTooltip","labelXCollections","labelYCollections","legendXCollections","legendYCollections","legendRectPositionCollection","legendTextRange","visibilityCollections","renderLegendItems","legend","rectItems","legendGroup","legendBound","legendRectScale","rectItemsSvg","legendSettings","enableSmartLegend","resizing","legendOnLoad","rendering","clip","grd","ctx_1","horizontalGradient","createLinearGradient","legendMinValue","legendMaxValue","calculateCanvasColorRange","addColorStop","gradientOptions","gradientColor","cgradientColors","calculateColorRange","gradientPercentage","linearGradient","drawGradient","rectItem","renderElements","renderSmartLegend","renderTitle","renderLegendLabel","legendScale","listRect","translategroup","calculateListPerPage","paginggroup","renderListLegendMode","renderColorAxisGrid","gradientColor1","gradientColor2","gradientColor3","smartLegendRect","legendX","legendY","legendWidth","legendHeight","labelDisplayType","colorRangeLegendPosition","labelX","labelPosition","dominantBaseline","textWrapWidth","labelY","legendRectPadding","textPosition","lastChild","clippath","createClipPath","clipRect","renderGradientPointer","e","pageX","pageY","direction","legendPath","cellValue","removeGradientPointer","gradientPointer","keys","calculateLegendBounds","legendEventArg","legendRender","calculateTitleBounds","calculateListLegendBounds","listHeight","perListWidth","numberOfRows","calculateLegendSize","legendTop","axisTitlePadding","axisHeight","margin","calculateGradientScale","measureListLegendBound","maxHeight","renderPagingElements","rightArrowX","rightArrowY","textSize","textX","pagingTextRect","rightArrowRect","iconSize","rightArrow","leftX","leftArrow","leftArrowRect","leftOption","rightOption","arrow","rightarrow","scale","titleHeight","calculateColorAxisGrid","legendPart","maxTextWrapLength","segmentWidth","previousSegmentWidth","nextSegmentWidth","legendElement","renderLegendTitleTooltip","textContent","offsetWidth","renderLegendLabelTooltip","targetId","division","legendEventArgs","rectPosition_1","listColor","translatePage","page","isNext","removeChild","childNodes","secondaryCanvasRenderer","initialRect","rectWidth","rectHeight","clearRect","oldCanvas","newCanvas","rectImage","getContext","getImageData","putImageData","currentLegendRect","inverted","legendRangeSelection","legendPadding","ctx_2","clearSelection","updateLegendRangeCollections","Data","AdaptiveMinMax","Adaptor","reconstructedXAxis","reconstructedYAxis","constructDatasource","completeAdaptDataSource","processJsonTableData","processJsonCellData","constructAdaptiveAxis","processCellData","getNumericAxisCollection","getDateAxisCollection","loopIndex","tempAxisColl","adapData","dataIndex","xDataIndex","yDataIndex","tempDataCollection","currentDataXIndex","currentDataYIndex","reconstructData","xindex","adaptordata","xAxisLabels","yAxisLabels","generateAxisLabels","getSplitDataValue","xDataMapping","yDataMapping","valueMapping","hasXLabels","hasYLabels","hasLabels","dataMapping","tempSplitDataCollection","tempSplitData","splitIndex","ExportUtils","control","export","fileName","image","controlValue","getControlsValue","isCanvas","attrs","isDownload","userAgent","PdfPageOrientation","Landscape","svgData","svg","outerHTML","url","URL","createObjectURL","Blob","XMLSerializer","serializeToString","info","navigator","msSaveOrOpenBlob","toLocaleLowerCase","triggerDownload","createCanvas","toDataURL","exportPdf","doExport","image_1","Image","onload","drawImage","revokeObjectURL","msToBlob","src","download","href","dispatchEvent","MouseEvent","view","bubbles","cancelable","cloneNode","groupEle","renderMode","refresh","exactWidth","exactHeight","PdfDocument","pageSettings","margins","pdfDefaultWidth","pdfDefaultHeight","imageString","SizeF","pages","add","graphics","PdfBitmap","images","fileType","exportImage","buffers","HTMLElement","image1","byteString","atob","buffer","ArrayBuffer","intArray","Uint8Array","charCodeAt","print","printWindow","open","outerHeight","outerWidth","resizeTo","screen","availWidth","availHeight","getHTMLContent","dataUrl","image_2","div","HeatMap","isCellTapHold","selectedCellCount","multiSelection","previousSelectedCellsRect","multiCellCollection","selectedMultiCellCollection","tempMultiCellCollection","preRender","initPrivateVariable","unWireEvents","wireEvents","CanvasRenderer","twoDimensional","tempTooltipRectId","setCulture","Internationalization","render","updateBubbleHelperProperty","initAxis","processInitData","setTheme","calculateMaxLength","calculateBounds","appendSvgObject","tooltipModule","renderComplete","reRenderDatasource","setRenderMode","renderSecondaryElement","renderBorder","getPersistData","onPropertyChanged","newProp","oldProp","refreshBounds","isUpdateSelection","_a","paletteCellSelectionUpdation","refreshBound","updateCellSelection","removeSvg","calculateSize","createMultiCellDiv","tooltipDiv","divElement","requiredModules","modules","member","args","innerHTML","classList","offsetHeight","alignElement","parentNode","tagName","align","containerWidth","titleTooltip","event","axisTooltip","tooltipText","isHeatmapRect","isRect","lastRectDetails","titleRect","isIE11Pointer","isPointer","touchStartEvent","stop","touchEndEvent","move","touchMoveEvent","EventHandler","isDevice","heatMapMouseClick","heatMapMouseMove","heatMapMouseLeave","addEventListener","heatMapResize","bind","Touch","tapHold","getDataCollection","setCellOpacity","tap","isCellTap","tooltipOnMouseMove","setStyle","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","display","removeEventListener","currentSize","previousSize","resizeTimer","clearTimeout","isDestroyed","wSize","hSize","topPositions","bottomPositions","rightPosition","leftPosition","containersRect","containerText","cellIndex","getText","addSvgClass","clearSVGSelection","elementClassName","getAttribute","removeSvgClass","xAxisMax","yAxisMax","length_1","setMouseXY","svgCanvasRect","mouseX","mouseY","touchArg","elementRect","changedTouches","clientY","clientX","notify","loop","toggleVisibility","mouseAction","isheatmapRect","showGradientPointer","renderMousePointer","isshowTooltip","which","cellSelectionOnMouseMove","tooltipRect","previousRect","initialCellX","initialCellY","preventDefault","highlightSelectedCells","tooltipTimer","pXIndex","pYIndex","cXIndex","cYIndex","selectedCellsRect","ctrlKey","removeSelectedCellsBorder","parentDiv","minX","maxX","minY","maxY","cellX","cellY","getCellCollection","checkSelectedCells","canvasSelectedCells","singleCellData","getSelectedCellData","rects","containerRect","highlightSelectedAreaInCanvas","topPosition","bottomPosition","cellCollection","cellDetails","rectElement","splice","className","cursor","tooltipElement_1","legendTooltipTimer","gradientTimer","main","removeOpacity","collectionClasss","onLoad","zIndex","secondaryCanvas","Event","NotifyPropertyChanges","Component","index.HeatMap","Inject","index.Legend","index.Tooltip","index.Adaptor"],"mappings":"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"}